{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\nvar TEXTBOX_FOCUS = 'e-input-focus';\nvar containerAttr = ['title', 'style', 'class'];\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\n\nvar TextBox =\n/** @class */\nfunction (_super) {\n  __extends(TextBox, _super);\n  /**\n   *\n   * @param {TextBoxModel} options - Specifies the TextBox model.\n   * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n   * @private\n   */\n\n\n  function TextBox(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.previousValue = null;\n    _this.isAngular = false;\n    _this.isHiddenInput = false;\n    _this.isForm = false;\n    _this.inputPreviousValue = null;\n    _this.isVue = false;\n    _this.textboxOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   *\n   * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n   * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @private\n   */\n\n\n  TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'floatLabelType':\n          Input.removeFloating(this.textboxWrapper);\n          Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n          break;\n\n        case 'enabled':\n          Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n          this.bindClearEvent();\n          break;\n\n        case 'width':\n          Input.setWidth(newProp.width, this.textboxWrapper.container);\n          break;\n\n        case 'value':\n          {\n            var prevOnChange = this.isProtectedOnChange;\n            this.isProtectedOnChange = true;\n\n            if (!this.isBlank(this.value)) {\n              this.value = this.value.toString();\n            }\n\n            this.isProtectedOnChange = prevOnChange;\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n            if (this.isHiddenInput) {\n              this.element.value = this.respectiveElement.value;\n            }\n\n            this.inputPreviousValue = this.respectiveElement.value;\n            /* istanbul ignore next */\n\n            if ((this.isAngular || this.isVue) && this.preventChange === true) {\n              this.previousValue = this.isAngular ? this.value : this.previousValue;\n              this.preventChange = false;\n            } else if (isNullOrUndefined(this.isAngular) || !this.isAngular || this.isAngular && !this.preventChange || this.isAngular && isNullOrUndefined(this.preventChange)) {\n              this.raiseChangeEvent();\n            }\n          }\n          break;\n\n        case 'htmlAttributes':\n          {\n            this.updateHTMLAttrToElement();\n            this.updateHTMLAttrToWrapper();\n            this.checkAttributes(true);\n            Input.validateInputType(this.textboxWrapper.container, this.element);\n          }\n          break;\n\n        case 'readonly':\n          Input.setReadonly(this.readonly, this.respectiveElement);\n          break;\n\n        case 'type':\n          if (this.respectiveElement.tagName !== 'TEXTAREA') {\n            this.respectiveElement.setAttribute('type', this.type);\n            Input.validateInputType(this.textboxWrapper.container, this.element);\n            this.raiseChangeEvent();\n          }\n\n          break;\n\n        case 'showClearButton':\n          if (this.respectiveElement.tagName !== 'TEXTAREA') {\n            Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n            this.bindClearEvent();\n          }\n\n          break;\n\n        case 'enableRtl':\n          Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n          break;\n\n        case 'placeholder':\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          break;\n\n        case 'autocomplete':\n          if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n          } else {\n            this.removeAttributes(['autocomplete']);\n          }\n\n          break;\n\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n\n        case 'locale':\n          this.globalize = new Internationalization(this.locale);\n          this.l10n.setLocale(this.locale);\n          this.setProperties({\n            placeholder: this.l10n.getConstant('placeholder')\n          }, true);\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the component name\n   *\n   * @returns {string} Returns the component name.\n   * @private\n   */\n\n\n  TextBox.prototype.getModuleName = function () {\n    return 'textbox';\n  };\n\n  TextBox.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n\n  TextBox.prototype.preRender = function () {\n    this.cloneElement = this.element.cloneNode(true);\n    this.formElement = closest(this.element, 'form');\n\n    if (!isNullOrUndefined(this.formElement)) {\n      this.isForm = true;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.element.tagName === 'EJS-TEXTBOX') {\n      var ejInstance = getValue('ej2_instances', this.element);\n      var inputElement = this.multiline ? this.createElement('textarea') : this.createElement('input');\n      var index = 0;\n\n      for (index; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n\n        if (attributeName !== 'id') {\n          inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n          inputElement.innerHTML = this.element.innerHTML;\n\n          if (attributeName === 'name') {\n            this.element.removeAttribute('name');\n          }\n        }\n      }\n\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n\n    this.updateHTMLAttrToElement();\n    this.checkAttributes(false);\n\n    if (this.element.tagName !== 'TEXTAREA') {\n      this.element.setAttribute('type', this.type);\n    }\n\n    this.element.setAttribute('role', 'textbox');\n    this.globalize = new Internationalization(this.locale);\n    var localeText = {\n      placeholder: this.placeholder\n    };\n    this.l10n = new L10n('textbox', localeText, this.locale);\n\n    if (this.l10n.getConstant('placeholder') !== '') {\n      this.setProperties({\n        placeholder: this.placeholder || this.l10n.getConstant('placeholder')\n      }, true);\n    }\n\n    if (!this.element.hasAttribute('id')) {\n      this.element.setAttribute('id', getUniqueID('textbox'));\n    }\n\n    if (!this.element.hasAttribute('name')) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      this.isHiddenInput = true;\n      this.textarea = this.createElement('textarea');\n      this.element.parentNode.insertBefore(this.textarea, this.element);\n      this.element.setAttribute('type', 'hidden');\n      this.textarea.setAttribute('name', this.element.getAttribute('name'));\n      this.element.removeAttribute('name');\n      this.textarea.setAttribute('role', this.element.getAttribute('role'));\n      this.element.removeAttribute('role');\n      this.textarea.setAttribute('id', getUniqueID('textarea'));\n      var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n\n      for (var index = 0; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n\n        if (this.element.hasAttribute(attributeName) && containerAttr.indexOf(attributeName) < 0 && !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n          // e-mappinguid attribute is handled for Grid component.\n          this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n\n          if (apiAttributes.indexOf(attributeName) < 0) {\n            this.element.removeAttribute(attributeName);\n            index--;\n          }\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.checkAttributes = function (isDynamic) {\n    var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n\n    for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n      var key = attrs_1[_i];\n\n      if (!isNullOrUndefined(this.element.getAttribute(key))) {\n        switch (key) {\n          case 'disabled':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['enabled'] === undefined || isDynamic) {\n              var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? false : true;\n              this.setProperties({\n                enabled: enabled\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'readonly':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['readonly'] === undefined || isDynamic) {\n              var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? true : false;\n              this.setProperties({\n                readonly: readonly\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'placeholder':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['placeholder'] === undefined || isDynamic) {\n              this.setProperties({\n                placeholder: this.element.placeholder\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'autocomplete':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['autocomplete'] === undefined || isDynamic) {\n              var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n              this.setProperties({\n                autocomplete: autoCompleteTxt\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'value':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['value'] === undefined || isDynamic) {\n              this.setProperties({\n                value: this.element.value\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'type':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['type'] === undefined || isDynamic) {\n              this.setProperties({\n                type: this.element.type\n              }, !isDynamic);\n            }\n\n            break;\n        }\n      }\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  TextBox.prototype.render = function () {\n    var updatedCssClassValue = this.cssClass;\n\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = this.getInputValidClassList(this.cssClass);\n    }\n\n    this.respectiveElement = this.isHiddenInput ? this.textarea : this.element;\n    this.textboxWrapper = Input.createInput({\n      element: this.respectiveElement,\n      floatLabelType: this.floatLabelType,\n      properties: {\n        enabled: this.enabled,\n        enableRtl: this.enableRtl,\n        cssClass: updatedCssClassValue,\n        readonly: this.readonly,\n        placeholder: this.placeholder,\n        showClearButton: this.showClearButton\n      }\n    });\n    this.updateHTMLAttrToWrapper();\n\n    if (this.isHiddenInput) {\n      this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n    }\n\n    this.wireEvents();\n\n    if (!isNullOrUndefined(this.value)) {\n      Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n    }\n\n    if (!isNullOrUndefined(this.value)) {\n      this.initialValue = this.value;\n      this.setInitialValue();\n    }\n\n    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n      this.respectiveElement.autocomplete = this.autocomplete;\n    } else if (!isNullOrUndefined(this.textboxOptions) && this.textboxOptions['autocomplete'] !== undefined) {\n      this.removeAttributes(['autocomplete']);\n    }\n\n    this.previousValue = this.value;\n    this.inputPreviousValue = this.value;\n    this.respectiveElement.defaultValue = this.respectiveElement.value;\n    Input.setWidth(this.width, this.textboxWrapper.container);\n    this.renderComplete();\n  };\n\n  TextBox.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n\n        if (containerAttr.indexOf(key) > -1) {\n          if (key === 'class') {\n            var updatedClassValues = this.getInputValidClassList(this.htmlAttributes[key]);\n\n            if (updatedClassValues !== '') {\n              addClass([this.textboxWrapper.container], updatedClassValues.split(' '));\n            }\n          } else if (key === 'style') {\n            var setStyle = this.textboxWrapper.container.getAttribute(key);\n            setStyle = !isNullOrUndefined(setStyle) ? setStyle + this.htmlAttributes[key] : this.htmlAttributes[key];\n            this.textboxWrapper.container.setAttribute(key, setStyle);\n          } else {\n            this.textboxWrapper.container.setAttribute(key, this.htmlAttributes[key]);\n          }\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n\n        if (containerAttr.indexOf(key) < 0) {\n          this.element.setAttribute(key, this.htmlAttributes[key]);\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.updateCssClass = function (newClass, oldClass) {\n    Input.setCssClass(this.getInputValidClassList(newClass), [this.textboxWrapper.container], this.getInputValidClassList(oldClass));\n  };\n\n  TextBox.prototype.getInputValidClassList = function (inputClassName) {\n    var result = inputClassName;\n\n    if (!isNullOrUndefined(inputClassName) && inputClassName !== '') {\n      result = inputClassName.replace(/\\s+/g, ' ').trim();\n    }\n\n    return result;\n  };\n\n  TextBox.prototype.setInitialValue = function () {\n    if (!this.isAngular) {\n      this.respectiveElement.setAttribute('value', this.initialValue);\n    }\n  };\n\n  TextBox.prototype.wireEvents = function () {\n    EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n    EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n    EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n    EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n\n    this.bindClearEvent();\n\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-autofill') && this.textboxWrapper.container.classList.contains('e-outline')) {\n      EventHandler.add(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler, this);\n    }\n  };\n\n  TextBox.prototype.animationHandler = function () {\n    this.textboxWrapper.container.classList.add('e-valid-input');\n    var label = this.textboxWrapper.container.querySelector('.e-float-text');\n\n    if (!isNullOrUndefined(label)) {\n      label.classList.add('e-label-top');\n\n      if (label.classList.contains('e-label-bottom')) {\n        label.classList.remove('e-label-bottom');\n      }\n    }\n  };\n\n  TextBox.prototype.resetValue = function (value) {\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.value = value;\n    this.isProtectedOnChange = prevOnChange;\n  };\n\n  TextBox.prototype.resetForm = function () {\n    if (this.isAngular) {\n      this.resetValue('');\n    } else {\n      this.resetValue(this.initialValue);\n    }\n\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      var label = this.textboxWrapper.container.querySelector('.e-float-text');\n\n      if (!isNullOrUndefined(label)) {\n        if (isNullOrUndefined(this.initialValue) || this.initialValue === '') {\n          label.classList.add('e-label-bottom');\n          label.classList.remove('e-label-top');\n        } else if (this.initialValue !== '') {\n          label.classList.add('e-label-top');\n          label.classList.remove('e-label-bottom');\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.focusHandler = function (args) {\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('focus', eventArgs);\n  };\n\n  TextBox.prototype.focusOutHandler = function (args) {\n    if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') && this.previousValue !== this.respectiveElement.value) {\n      this.raiseChangeEvent(args, true);\n    }\n\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('blur', eventArgs);\n  };\n\n  TextBox.prototype.inputHandler = function (args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-this-alias\n    var textboxObj = this;\n    var eventArgs = {\n      event: args,\n      value: this.respectiveElement.value,\n      previousValue: this.inputPreviousValue,\n      container: this.textboxWrapper.container\n    };\n    this.inputPreviousValue = this.respectiveElement.value;\n    /* istanbul ignore next */\n\n    if (this.isAngular) {\n      textboxObj.localChange({\n        value: this.respectiveElement.value\n      });\n      this.preventChange = true;\n    }\n\n    if (this.isVue) {\n      this.preventChange = true;\n    }\n\n    this.trigger('input', eventArgs);\n    args.stopPropagation();\n  };\n\n  TextBox.prototype.changeHandler = function (args) {\n    this.setProperties({\n      value: this.respectiveElement.value\n    }, true);\n    this.raiseChangeEvent(args, true);\n    args.stopPropagation();\n  };\n\n  TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n    var eventArgs = {\n      event: event,\n      value: this.value,\n      previousValue: this.previousValue,\n      container: this.textboxWrapper.container,\n      isInteraction: interaction ? interaction : false,\n      isInteracted: interaction ? interaction : false\n    };\n    this.preventChange = false;\n    this.trigger('change', eventArgs);\n    this.previousValue = this.value;\n  };\n\n  TextBox.prototype.bindClearEvent = function () {\n    if (this.showClearButton && this.respectiveElement.tagName !== 'TEXTAREA') {\n      if (this.enabled) {\n        EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n      } else {\n        EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n      }\n    }\n  };\n\n  TextBox.prototype.resetInputHandler = function (event) {\n    event.preventDefault();\n\n    if (!this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n      Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n\n      this.setProperties({\n        value: this.respectiveElement.value\n      }, true);\n      var eventArgs = {\n        event: event,\n        value: this.respectiveElement.value,\n        previousValue: this.inputPreviousValue,\n        container: this.textboxWrapper.container\n      };\n      this.trigger('input', eventArgs);\n      this.inputPreviousValue = this.respectiveElement.value;\n      this.raiseChangeEvent(event, true);\n    }\n  };\n\n  TextBox.prototype.unWireEvents = function () {\n    EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n    EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n    EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n    EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-outline') && this.textboxWrapper.container.classList.contains('e-autofill')) {\n      EventHandler.remove(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler);\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers.\n   * Also, it maintains the initial TextBox element from the DOM.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.destroy = function () {\n    this.unWireEvents();\n\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n      this.respectiveElement = this.element;\n      this.element.removeAttribute('type');\n    }\n\n    this.respectiveElement.value = this.respectiveElement.defaultValue;\n    this.respectiveElement.classList.remove('e-input');\n    this.removeAttributes(['aria-placeholder', 'aria-disabled', 'aria-readonly', 'aria-labelledby']);\n\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n      detach(this.textboxWrapper.container);\n    }\n\n    this.textboxWrapper = null;\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Adding the icons to the TextBox component.\n   *\n   * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n   * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for TextBox.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.addIcon = function (position, icons) {\n    Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns */\n\n  /**\n   * Gets the properties to be maintained in the persisted state.\n   *\n   */\n\n\n  TextBox.prototype.getPersistData = function () {\n    var keyEntity = ['value'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns */\n\n  /**\n   * Adding the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.addAttributes = function (attributes) {\n    for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: false\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: true\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'class') {\n        this.respectiveElement.classList.add(attributes[key]);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: attributes[key]\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n        this.respectiveElement.setAttribute(key, attributes[key]);\n      } else {\n        this.respectiveElement.setAttribute(key, attributes[key]);\n      }\n    }\n  };\n  /**\n   * Removing the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.removeAttributes = function (attributes) {\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var key = attributes_1[_i];\n\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: true\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: false\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: null\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else {\n        this.respectiveElement.removeAttribute(key);\n      }\n    }\n  };\n  /**\n   * Sets the focus to widget for interaction.\n   *\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.focusIn = function () {\n    if (document.activeElement !== this.respectiveElement && this.enabled) {\n      this.respectiveElement.focus();\n\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n  /**\n   * Remove the focus from widget, if the widget is in focus state.\n   *\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.focusOut = function () {\n    if (document.activeElement === this.respectiveElement && this.enabled) {\n      this.respectiveElement.blur();\n\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n\n  __decorate([Property('text')], TextBox.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"readonly\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"value\", void 0);\n\n  __decorate([Property('Never')], TextBox.prototype, \"floatLabelType\", void 0);\n\n  __decorate([Property('')], TextBox.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"placeholder\", void 0);\n\n  __decorate([Property('on')], TextBox.prototype, \"autocomplete\", void 0);\n\n  __decorate([Property({})], TextBox.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"multiline\", void 0);\n\n  __decorate([Property(true)], TextBox.prototype, \"enabled\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"showClearButton\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"width\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"created\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"change\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"blur\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"focus\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"input\", void 0);\n\n  TextBox = __decorate([NotifyPropertyChanges], TextBox);\n  return TextBox;\n}(Component);\n\nexport { TextBox };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-inputs/src/textbox/textbox.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","setValue","getValue","isNullOrUndefined","NotifyPropertyChanges","detach","Internationalization","getUniqueID","closest","addClass","removeClass","Input","HIDE_CLEAR","TEXTBOX_FOCUS","containerAttr","TextBox","_super","options","element","_this","call","previousValue","isAngular","isHiddenInput","isForm","inputPreviousValue","isVue","textboxOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","removeFloating","textboxWrapper","addFloating","respectiveElement","floatLabelType","placeholder","setEnabled","enabled","container","bindClearEvent","setWidth","width","prevOnChange","isProtectedOnChange","isBlank","value","toString","showClearButton","preventChange","raiseChangeEvent","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkAttributes","validateInputType","setReadonly","readonly","tagName","setAttribute","type","setClearButton","setEnableRtl","enableRtl","setPlaceholder","autocomplete","removeAttributes","updateCssClass","cssClass","globalize","locale","l10n","setLocale","setProperties","getConstant","getModuleName","str","test","preRender","cloneElement","cloneNode","formElement","ejInstance","inputElement","multiline","createElement","index","attributes","attributeName","nodeName","nodeValue","innerHTML","removeAttribute","appendChild","localeText","hasAttribute","getAttribute","textarea","parentNode","insertBefore","apiAttributes","indexOf","isDynamic","attrs","htmlAttributes","attrs_1","undefined","autoCompleteTxt","render","updatedCssClassValue","getInputValidClassList","createInput","properties","wireEvents","initialValue","setInitialValue","defaultValue","renderComplete","updatedClassValues","split","setStyle","newClass","oldClass","setCssClass","inputClassName","result","replace","trim","add","focusHandler","focusOutHandler","inputHandler","changeHandler","resetForm","querySelector","classList","contains","animationHandler","label","remove","resetValue","args","eventArgs","event","trigger","textboxObj","localChange","stopPropagation","interaction","isInteraction","isInteracted","clearButton","resetInputHandler","preventDefault","unWireEvents","destroy","getElementsByTagName","insertAdjacentElement","addIcon","position","icons","getPersistData","keyEntity","addOnPersist","addAttributes","attributes_1","focusIn","document","activeElement","focus","focusOut","blur"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\nvar TEXTBOX_FOCUS = 'e-input-focus';\nvar containerAttr = ['title', 'style', 'class'];\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\nvar TextBox = /** @class */ (function (_super) {\n    __extends(TextBox, _super);\n    /**\n     *\n     * @param {TextBoxModel} options - Specifies the TextBox model.\n     * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function TextBox(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.previousValue = null;\n        _this.isAngular = false;\n        _this.isHiddenInput = false;\n        _this.isForm = false;\n        _this.inputPreviousValue = null;\n        _this.isVue = false;\n        _this.textboxOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'floatLabelType':\n                    Input.removeFloating(this.textboxWrapper);\n                    Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n                    break;\n                case 'enabled':\n                    Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n                    this.bindClearEvent();\n                    break;\n                case 'width':\n                    Input.setWidth(newProp.width, this.textboxWrapper.container);\n                    break;\n                case 'value':\n                    {\n                        var prevOnChange = this.isProtectedOnChange;\n                        this.isProtectedOnChange = true;\n                        if (!this.isBlank(this.value)) {\n                            this.value = this.value.toString();\n                        }\n                        this.isProtectedOnChange = prevOnChange;\n                        Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n                        if (this.isHiddenInput) {\n                            this.element.value = this.respectiveElement.value;\n                        }\n                        this.inputPreviousValue = this.respectiveElement.value;\n                        /* istanbul ignore next */\n                        if ((this.isAngular || this.isVue) && this.preventChange === true) {\n                            this.previousValue = this.isAngular ? this.value : this.previousValue;\n                            this.preventChange = false;\n                        }\n                        else if (isNullOrUndefined(this.isAngular) || !this.isAngular\n                            || (this.isAngular && !this.preventChange) || (this.isAngular && isNullOrUndefined(this.preventChange))) {\n                            this.raiseChangeEvent();\n                        }\n                    }\n                    break;\n                case 'htmlAttributes':\n                    {\n                        this.updateHTMLAttrToElement();\n                        this.updateHTMLAttrToWrapper();\n                        this.checkAttributes(true);\n                        Input.validateInputType(this.textboxWrapper.container, this.element);\n                    }\n                    break;\n                case 'readonly':\n                    Input.setReadonly(this.readonly, this.respectiveElement);\n                    break;\n                case 'type':\n                    if (this.respectiveElement.tagName !== 'TEXTAREA') {\n                        this.respectiveElement.setAttribute('type', this.type);\n                        Input.validateInputType(this.textboxWrapper.container, this.element);\n                        this.raiseChangeEvent();\n                    }\n                    break;\n                case 'showClearButton':\n                    if (this.respectiveElement.tagName !== 'TEXTAREA') {\n                        Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n                        this.bindClearEvent();\n                    }\n                    break;\n                case 'enableRtl':\n                    Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n                    break;\n                case 'placeholder':\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    break;\n                case 'autocomplete':\n                    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n                        this.respectiveElement.autocomplete = this.autocomplete;\n                    }\n                    else {\n                        this.removeAttributes(['autocomplete']);\n                    }\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'locale':\n                    this.globalize = new Internationalization(this.locale);\n                    this.l10n.setLocale(this.locale);\n                    this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the component name\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    TextBox.prototype.getModuleName = function () {\n        return 'textbox';\n    };\n    TextBox.prototype.isBlank = function (str) {\n        return (!str || /^\\s*$/.test(str));\n    };\n    TextBox.prototype.preRender = function () {\n        this.cloneElement = this.element.cloneNode(true);\n        this.formElement = closest(this.element, 'form');\n        if (!isNullOrUndefined(this.formElement)) {\n            this.isForm = true;\n        }\n        /* istanbul ignore next */\n        if (this.element.tagName === 'EJS-TEXTBOX') {\n            var ejInstance = getValue('ej2_instances', this.element);\n            var inputElement = this.multiline ?\n                this.createElement('textarea') :\n                this.createElement('input');\n            var index = 0;\n            for (index; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (attributeName !== 'id') {\n                    inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    inputElement.innerHTML = this.element.innerHTML;\n                    if (attributeName === 'name') {\n                        this.element.removeAttribute('name');\n                    }\n                }\n            }\n            this.element.appendChild(inputElement);\n            this.element = inputElement;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        this.updateHTMLAttrToElement();\n        this.checkAttributes(false);\n        if (this.element.tagName !== 'TEXTAREA') {\n            this.element.setAttribute('type', this.type);\n        }\n        this.element.setAttribute('role', 'textbox');\n        this.globalize = new Internationalization(this.locale);\n        var localeText = { placeholder: this.placeholder };\n        this.l10n = new L10n('textbox', localeText, this.locale);\n        if (this.l10n.getConstant('placeholder') !== '') {\n            this.setProperties({ placeholder: this.placeholder || this.l10n.getConstant('placeholder') }, true);\n        }\n        if (!this.element.hasAttribute('id')) {\n            this.element.setAttribute('id', getUniqueID('textbox'));\n        }\n        if (!this.element.hasAttribute('name')) {\n            this.element.setAttribute('name', this.element.getAttribute('id'));\n        }\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            this.isHiddenInput = true;\n            this.textarea = this.createElement('textarea');\n            this.element.parentNode.insertBefore(this.textarea, this.element);\n            this.element.setAttribute('type', 'hidden');\n            this.textarea.setAttribute('name', this.element.getAttribute('name'));\n            this.element.removeAttribute('name');\n            this.textarea.setAttribute('role', this.element.getAttribute('role'));\n            this.element.removeAttribute('role');\n            this.textarea.setAttribute('id', getUniqueID('textarea'));\n            var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n            for (var index = 0; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (this.element.hasAttribute(attributeName) && containerAttr.indexOf(attributeName) < 0 &&\n                    !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n                    // e-mappinguid attribute is handled for Grid component.\n                    this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    if (apiAttributes.indexOf(attributeName) < 0) {\n                        this.element.removeAttribute(attributeName);\n                        index--;\n                    }\n                }\n            }\n        }\n    };\n    TextBox.prototype.checkAttributes = function (isDynamic) {\n        var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n        for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n            var key = attrs_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(key))) {\n                switch (key) {\n                    case 'disabled':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['enabled'] === undefined)) || isDynamic) {\n                            var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' ||\n                                this.element.getAttribute(key) === 'true' ? false : true;\n                            this.setProperties({ enabled: enabled }, !isDynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['readonly'] === undefined)) || isDynamic) {\n                            var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === ''\n                                || this.element.getAttribute(key) === 'true' ? true : false;\n                            this.setProperties({ readonly: readonly }, !isDynamic);\n                        }\n                        break;\n                    case 'placeholder':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.element.placeholder }, !isDynamic);\n                        }\n                        break;\n                    case 'autocomplete':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['autocomplete'] === undefined)) || isDynamic) {\n                            var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n                            this.setProperties({ autocomplete: autoCompleteTxt }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['value'] === undefined)) || isDynamic) {\n                            this.setProperties({ value: this.element.value }, !isDynamic);\n                        }\n                        break;\n                    case 'type':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['type'] === undefined)) || isDynamic) {\n                            this.setProperties({ type: this.element.type }, !isDynamic);\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.render = function () {\n        var updatedCssClassValue = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValue = this.getInputValidClassList(this.cssClass);\n        }\n        this.respectiveElement = (this.isHiddenInput) ? this.textarea : this.element;\n        this.textboxWrapper = Input.createInput({\n            element: this.respectiveElement,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                enabled: this.enabled,\n                enableRtl: this.enableRtl,\n                cssClass: updatedCssClassValue,\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                showClearButton: this.showClearButton\n            }\n        });\n        this.updateHTMLAttrToWrapper();\n        if (this.isHiddenInput) {\n            this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n        }\n        this.wireEvents();\n        if (!isNullOrUndefined(this.value)) {\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n        }\n        if (!isNullOrUndefined(this.value)) {\n            this.initialValue = this.value;\n            this.setInitialValue();\n        }\n        if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n        }\n        else if (!isNullOrUndefined(this.textboxOptions) && (this.textboxOptions['autocomplete'] !== undefined)) {\n            this.removeAttributes(['autocomplete']);\n        }\n        this.previousValue = this.value;\n        this.inputPreviousValue = this.value;\n        this.respectiveElement.defaultValue = this.respectiveElement.value;\n        Input.setWidth(this.width, this.textboxWrapper.container);\n        this.renderComplete();\n    };\n    TextBox.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (containerAttr.indexOf(key) > -1) {\n                    if (key === 'class') {\n                        var updatedClassValues = this.getInputValidClassList(this.htmlAttributes[key]);\n                        if (updatedClassValues !== '') {\n                            addClass([this.textboxWrapper.container], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (key === 'style') {\n                        var setStyle = this.textboxWrapper.container.getAttribute(key);\n                        setStyle = !isNullOrUndefined(setStyle) ? (setStyle + this.htmlAttributes[key]) :\n                            this.htmlAttributes[key];\n                        this.textboxWrapper.container.setAttribute(key, setStyle);\n                    }\n                    else {\n                        this.textboxWrapper.container.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                }\n            }\n        }\n    };\n    TextBox.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (containerAttr.indexOf(key) < 0) {\n                    this.element.setAttribute(key, this.htmlAttributes[key]);\n                }\n            }\n        }\n    };\n    TextBox.prototype.updateCssClass = function (newClass, oldClass) {\n        Input.setCssClass(this.getInputValidClassList(newClass), [this.textboxWrapper.container], this.getInputValidClassList(oldClass));\n    };\n    TextBox.prototype.getInputValidClassList = function (inputClassName) {\n        var result = inputClassName;\n        if (!isNullOrUndefined(inputClassName) && inputClassName !== '') {\n            result = (inputClassName.replace(/\\s+/g, ' ')).trim();\n        }\n        return result;\n    };\n    TextBox.prototype.setInitialValue = function () {\n        if (!this.isAngular) {\n            this.respectiveElement.setAttribute('value', this.initialValue);\n        }\n    };\n    TextBox.prototype.wireEvents = function () {\n        EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n        EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n        EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n        EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n        this.bindClearEvent();\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-autofill') &&\n            this.textboxWrapper.container.classList.contains('e-outline')) {\n            EventHandler.add((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler, this);\n        }\n    };\n    TextBox.prototype.animationHandler = function () {\n        this.textboxWrapper.container.classList.add('e-valid-input');\n        var label = this.textboxWrapper.container.querySelector('.e-float-text');\n        if (!isNullOrUndefined(label)) {\n            label.classList.add('e-label-top');\n            if (label.classList.contains('e-label-bottom')) {\n                label.classList.remove('e-label-bottom');\n            }\n        }\n    };\n    TextBox.prototype.resetValue = function (value) {\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.value = value;\n        this.isProtectedOnChange = prevOnChange;\n    };\n    TextBox.prototype.resetForm = function () {\n        if (this.isAngular) {\n            this.resetValue('');\n        }\n        else {\n            this.resetValue(this.initialValue);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            var label = this.textboxWrapper.container.querySelector('.e-float-text');\n            if (!isNullOrUndefined(label)) {\n                if ((isNullOrUndefined(this.initialValue) || this.initialValue === '')) {\n                    label.classList.add('e-label-bottom');\n                    label.classList.remove('e-label-top');\n                }\n                else if (this.initialValue !== '') {\n                    label.classList.add('e-label-top');\n                    label.classList.remove('e-label-bottom');\n                }\n            }\n        }\n    };\n    TextBox.prototype.focusHandler = function (args) {\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('focus', eventArgs);\n    };\n    TextBox.prototype.focusOutHandler = function (args) {\n        if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') &&\n            (this.previousValue !== this.respectiveElement.value)) {\n            this.raiseChangeEvent(args, true);\n        }\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('blur', eventArgs);\n    };\n    TextBox.prototype.inputHandler = function (args) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-this-alias\n        var textboxObj = this;\n        var eventArgs = {\n            event: args,\n            value: this.respectiveElement.value,\n            previousValue: this.inputPreviousValue,\n            container: this.textboxWrapper.container\n        };\n        this.inputPreviousValue = this.respectiveElement.value;\n        /* istanbul ignore next */\n        if (this.isAngular) {\n            textboxObj.localChange({ value: this.respectiveElement.value });\n            this.preventChange = true;\n        }\n        if (this.isVue) {\n            this.preventChange = true;\n        }\n        this.trigger('input', eventArgs);\n        args.stopPropagation();\n    };\n    TextBox.prototype.changeHandler = function (args) {\n        this.setProperties({ value: this.respectiveElement.value }, true);\n        this.raiseChangeEvent(args, true);\n        args.stopPropagation();\n    };\n    TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n        var eventArgs = {\n            event: event,\n            value: this.value,\n            previousValue: this.previousValue,\n            container: this.textboxWrapper.container,\n            isInteraction: interaction ? interaction : false,\n            isInteracted: interaction ? interaction : false\n        };\n        this.preventChange = false;\n        this.trigger('change', eventArgs);\n        this.previousValue = this.value;\n    };\n    TextBox.prototype.bindClearEvent = function () {\n        if (this.showClearButton && this.respectiveElement.tagName !== 'TEXTAREA') {\n            if (this.enabled) {\n                EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n            }\n            else {\n                EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n            }\n        }\n    };\n    TextBox.prototype.resetInputHandler = function (event) {\n        event.preventDefault();\n        if (!(this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR)) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n            Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n            this.setProperties({ value: this.respectiveElement.value }, true);\n            var eventArgs = {\n                event: event,\n                value: this.respectiveElement.value,\n                previousValue: this.inputPreviousValue,\n                container: this.textboxWrapper.container\n            };\n            this.trigger('input', eventArgs);\n            this.inputPreviousValue = this.respectiveElement.value;\n            this.raiseChangeEvent(event, true);\n        }\n    };\n    TextBox.prototype.unWireEvents = function () {\n        EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n        EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n        EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n        EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-outline') &&\n            this.textboxWrapper.container.classList.contains('e-autofill')) {\n            EventHandler.remove((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also, it maintains the initial TextBox element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TextBox.prototype.destroy = function () {\n        this.unWireEvents();\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n            this.respectiveElement = this.element;\n            this.element.removeAttribute('type');\n        }\n        this.respectiveElement.value = this.respectiveElement.defaultValue;\n        this.respectiveElement.classList.remove('e-input');\n        this.removeAttributes(['aria-placeholder', 'aria-disabled', 'aria-readonly', 'aria-labelledby']);\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n            detach(this.textboxWrapper.container);\n        }\n        this.textboxWrapper = null;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adding the icons to the TextBox component.\n     *\n     * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n     * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for TextBox.\n     * @returns {void}\n     */\n    TextBox.prototype.addIcon = function (position, icons) {\n        Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns */\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     */\n    TextBox.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns */\n    /**\n     * Adding the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.addAttributes = function (attributes) {\n        for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: false }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: true }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'class') {\n                this.respectiveElement.classList.add(attributes[key]);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: attributes[key] }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n                this.respectiveElement.setAttribute(key, attributes[key]);\n            }\n            else {\n                this.respectiveElement.setAttribute(key, attributes[key]);\n            }\n        }\n    };\n    /**\n     * Removing the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.removeAttributes = function (attributes) {\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var key = attributes_1[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: true }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: false }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: null }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else {\n                this.respectiveElement.removeAttribute(key);\n            }\n        }\n    };\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusIn = function () {\n        if (document.activeElement !== this.respectiveElement && this.enabled) {\n            this.respectiveElement.focus();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusOut = function () {\n        if (document.activeElement === this.respectiveElement && this.enabled) {\n            this.respectiveElement.blur();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    __decorate([\n        Property('text')\n    ], TextBox.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"readonly\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"value\", void 0);\n    __decorate([\n        Property('Never')\n    ], TextBox.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        Property('')\n    ], TextBox.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"placeholder\", void 0);\n    __decorate([\n        Property('on')\n    ], TextBox.prototype, \"autocomplete\", void 0);\n    __decorate([\n        Property({})\n    ], TextBox.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"multiline\", void 0);\n    __decorate([\n        Property(true)\n    ], TextBox.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"showClearButton\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"width\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"blur\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"focus\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"input\", void 0);\n    TextBox = __decorate([\n        NotifyPropertyChanges\n    ], TextBox);\n    return TextBox;\n}(Component));\nexport { TextBox };\n"]},"metadata":{},"sourceType":"module"}