{"ast":null,"code":"import * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\n\nvar MsWordPaste =\n/** @class */\nfunction () {\n  function MsWordPaste(parent) {\n    this.olData = ['decimal', 'lower-alpha', 'lower-roman', 'upper-alpha', 'upper-roman', 'lower-greek'];\n    this.ulData = ['disc', 'square', 'circle', 'disc', 'square', 'circle'];\n    this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR', 'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV', 'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL', 'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE', 'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n    this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset', 'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript', 'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul', 'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n    this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n    this.removableElements = ['o:p', 'style'];\n    this.listContents = [];\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  MsWordPaste.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n  };\n\n  MsWordPaste.prototype.wordCleanup = function (e) {\n    var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n    var listNodes = [];\n    var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n    var rtfData = e.args.clipboardData.getData('text/rtf');\n    var elm = createElement('p');\n    elm.setAttribute('id', 'MSWord-Content');\n    elm.innerHTML = tempHTMLContent;\n    var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n    var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n    var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n    var pattern4 = /style='mso-width-source:/i;\n\n    if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) || pattern4.test(tempHTMLContent)) {\n      this.imageConversion(elm, rtfData);\n      tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n      this.addListClass(elm);\n      listNodes = this.cleanUp(elm, listNodes);\n\n      if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' && listNodes[0].parentElement.tagName !== 'OL') {\n        this.listConverter(listNodes);\n      }\n\n      this.styleCorrection(elm, wordPasteStyleConfig);\n      this.removingComments(elm);\n      this.removeUnwantedElements(elm);\n      this.removeEmptyElements(elm);\n      this.breakLineAddition(elm);\n      this.removeClassName(elm);\n\n      if (pattern4.test(tempHTMLContent)) {\n        this.addTableBorderClass(elm);\n      }\n\n      e.callBack(elm.innerHTML);\n    } else {\n      e.callBack(elm.innerHTML);\n    }\n  };\n\n  MsWordPaste.prototype.addListClass = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n\n    for (var index = 0; index < allNodes.length; index++) {\n      if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 && allNodes[index].tagName.charAt(0) !== 'H') {\n        allNodes[index].classList.add('msolistparagraph');\n      }\n    }\n  };\n\n  MsWordPaste.prototype.addTableBorderClass = function (elm) {\n    var allTableElm = elm.querySelectorAll('table');\n    var hasTableBorder = false;\n\n    for (var i = 0; i < allTableElm.length; i++) {\n      for (var j = 0; j < this.borderStyle.length; j++) {\n        if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n          hasTableBorder = true;\n          break;\n        }\n      }\n\n      if (hasTableBorder) {\n        allTableElm[i].classList.add('e-rte-table-border');\n        hasTableBorder = false;\n      }\n    }\n  };\n\n  MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n    this.checkVShape(elm);\n    var imgElem = elm.querySelectorAll('img');\n    var imgSrc = [];\n    var base64Src = [];\n    var imgName = []; // eslint-disable-next-line\n\n    var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.))(\\S+))/gi);\n\n    if (imgElem.length > 0) {\n      for (var i = 0; i < imgElem.length; i++) {\n        imgSrc.push(imgElem[i].getAttribute('src'));\n        imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n      }\n\n      var hexValue = this.hexConversion(rtfData);\n\n      for (var i = 0; i < hexValue.length; i++) {\n        base64Src.push(this.convertToBase64(hexValue[i]));\n      }\n\n      for (var i = 0; i < imgElem.length; i++) {\n        if (imgSrc[i].match(linkRegex)) {\n          imgElem[i].setAttribute('src', imgSrc[i]);\n        } else {\n          imgElem[i].setAttribute('src', base64Src[i]);\n        }\n\n        imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n      }\n    }\n  };\n\n  MsWordPaste.prototype.checkVShape = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n\n    for (var i = 0; i < allNodes.length; i++) {\n      switch (allNodes[i].nodeName) {\n        case 'V:SHAPETYPE':\n          detach(allNodes[i]);\n          break;\n\n        case 'V:SHAPE':\n          if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n            var src = allNodes[i].firstElementChild.getAttribute('src');\n            var imgElement = createElement('img');\n            imgElement.setAttribute('src', src);\n            allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n            detach(allNodes[i]);\n          }\n\n          break;\n      }\n    }\n  };\n\n  MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n    var byteArr = this.conHexStringToBytes(hexValue.hex);\n    var base64String = this.conBytesToBase64(byteArr);\n    var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n    return base64;\n  };\n\n  MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n    var base64Str = '';\n    var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var byteArrLen = byteArr.length;\n\n    for (var i = 0; i < byteArrLen; i += 3) {\n      var array3 = byteArr.slice(i, i + 3);\n      var array3length = array3.length;\n      var array4 = [];\n\n      if (array3length < 3) {\n        for (var j = array3length; j < 3; j++) {\n          array3[j] = 0;\n        }\n      }\n\n      array4[0] = (array3[0] & 0xFC) >> 2;\n      array4[1] = (array3[0] & 0x03) << 4 | array3[1] >> 4;\n      array4[2] = (array3[1] & 0x0F) << 2 | (array3[2] & 0xC0) >> 6;\n      array4[3] = array3[2] & 0x3F;\n\n      for (var j = 0; j < 4; j++) {\n        if (j <= array3length) {\n          base64Str += base64Char.charAt(array4[j]);\n        } else {\n          base64Str += '=';\n        }\n      }\n    }\n\n    return base64Str;\n  };\n\n  MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n    var byteArr = [];\n    var byteArrLen = hex.length / 2;\n\n    for (var i = 0; i < byteArrLen; i++) {\n      byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n    }\n\n    return byteArr;\n  };\n\n  MsWordPaste.prototype.hexConversion = function (rtfData) {\n    // eslint-disable-next-line\n    var picHead = /\\{\\\\pict[\\s\\S]+?\\\\bliptag\\-?\\d+(\\\\blipupi\\-?\\d+)?(\\{\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s\\}]*?/;\n    var pic = new RegExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n    var fullImg = rtfData.match(pic);\n    var imgType;\n    var result = [];\n\n    if (!isNOU(fullImg)) {\n      for (var i = 0; i < fullImg.length; i++) {\n        if (picHead.test(fullImg[i])) {\n          if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n            imgType = 'image/png';\n          } else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n            imgType = 'image/jpeg';\n          } else {\n            continue;\n          }\n\n          result.push({\n            hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n            type: imgType\n          });\n        }\n      }\n    }\n\n    return result;\n  };\n\n  MsWordPaste.prototype.removeClassName = function (elm) {\n    var elmWithClass = elm.querySelectorAll('*[class]');\n\n    for (var i = 0; i < elmWithClass.length; i++) {\n      elmWithClass[i].removeAttribute('class');\n    }\n  };\n\n  MsWordPaste.prototype.breakLineAddition = function (elm) {\n    var allElements = elm.querySelectorAll('*');\n\n    for (var i = 0; i < allElements.length; i++) {\n      if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' && allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li') && !allElements[i].closest('td')) {\n        var detachableElement = this.findDetachElem(allElements[i]);\n        var brElement = createElement('br');\n\n        if (!isNOU(detachableElement.parentElement)) {\n          detachableElement.parentElement.insertBefore(brElement, detachableElement);\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n\n  MsWordPaste.prototype.findDetachElem = function (element) {\n    var removableElement;\n\n    if (!isNOU(element.parentElement) && element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' && isNOU(element.parentElement.querySelector('img'))) {\n      removableElement = this.findDetachElem(element.parentElement);\n    } else {\n      removableElement = element;\n    }\n\n    return removableElement;\n  };\n\n  MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n    var innerElement = elm.innerHTML;\n\n    for (var i = 0; i < this.removableElements.length; i++) {\n      var regExpStartElem = new RegExp('<' + this.removableElements[i] + '>', 'g');\n      var regExpEndElem = new RegExp('</' + this.removableElements[i] + '>', 'g');\n      innerElement = innerElement.replace(regExpStartElem, '');\n      innerElement = innerElement.replace(regExpEndElem, '');\n    }\n\n    elm.innerHTML = innerElement;\n    elm.querySelectorAll(':empty');\n  };\n\n  MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n    var removableElement;\n\n    if (!isNOU(element.parentElement)) {\n      if (element.parentElement.textContent.trim() === '' && element.parentElement.getAttribute('id') !== 'MSWord-Content' && isNOU(element.parentElement.querySelector('img'))) {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n\n    return removableElement;\n  };\n\n  MsWordPaste.prototype.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (!isNOU(emptyElements[i].closest('td')) && !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n        emptyElements[i].innerHTML = '-';\n      }\n\n      if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' && emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' && emptyElements[i].tagName !== 'HR') {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n\n  MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n    var styleElement = elm.querySelectorAll('style');\n\n    if (styleElement.length > 0) {\n      var styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n      var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n      var keys = Object.keys(styleClassObject_1);\n      var values = keys.map(function (key) {\n        return styleClassObject_1[key];\n      });\n      values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n      this.filterStyles(elm, wordPasteStyleConfig);\n      var resultElem = void 0;\n      var fromClass = false;\n\n      for (var i = 0; i < keys.length; i++) {\n        if (keys[i].split('.')[0] === '') {\n          resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n          fromClass = true;\n        } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0) {\n          continue;\n        } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n          resultElem = elm.getElementsByTagName(keys[i]);\n        } else {\n          resultElem = elm.querySelectorAll(keys[i]);\n        }\n\n        for (var j = 0; j < resultElem.length; j++) {\n          var styleProperty = resultElem[j].getAttribute('style');\n\n          if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n            var valueSplit = values[i].split(';');\n\n            if (!fromClass) {\n              for (var k = 0; k < valueSplit.length; k++) {\n                if (styleProperty.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                  valueSplit.splice(k, 1);\n                  k--;\n                }\n              }\n            }\n\n            values[i] = valueSplit.join(';') + ';';\n            var changedValue = styleProperty + values[i];\n            resultElem[j].setAttribute('style', changedValue);\n          } else {\n            values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n            resultElem[j].setAttribute('style', values[i]);\n          }\n        }\n\n        fromClass = false;\n      }\n    }\n  };\n\n  MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n    var elmWithStyles = elm.querySelectorAll('*[style]');\n\n    for (var i = 0; i < elmWithStyles.length; i++) {\n      var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n      var styleValue = '';\n\n      for (var j = 0; j < elemStyleProperty.length; j++) {\n        if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n          styleValue += elemStyleProperty[j] + ';';\n        }\n      }\n\n      elmWithStyles[i].setAttribute('style', styleValue);\n    }\n  };\n\n  MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n    for (var i = 0; i < values.length; i++) {\n      var styleValues = values[i].split(';');\n      values[i] = '';\n\n      for (var j = 0; j < styleValues.length; j++) {\n        if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n          values[i] += styleValues[j] + ';';\n        }\n      }\n    }\n\n    return values;\n  };\n\n  MsWordPaste.prototype.findStyleObject = function (styles) {\n    var styleClassObject = {};\n\n    for (var i = 0; i < styles.length; i++) {\n      var tempStyle = styles[i];\n      var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n      var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n      classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n      stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n\n      for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n        styleClassObject[classNames[j]] = stylesCollection;\n      }\n    }\n\n    return styleClassObject;\n  };\n\n  MsWordPaste.prototype.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n\n  MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n    // eslint-disable-next-line\n    var temp = '';\n    var tempCleaner = [];\n    var prevflagState;\n    var allNodes = node.querySelectorAll('*');\n\n    for (var index = 0; index < allNodes.length; index++) {\n      if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 || allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '') {\n        tempCleaner.push(allNodes[index]);\n        continue;\n      } else if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && allNodes[index].childElementCount !== 1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n        if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 && listNodes[listNodes.length - 1] !== null) {\n          listNodes.push(null);\n        }\n\n        listNodes.push(allNodes[index]);\n      }\n\n      if (prevflagState && this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1 && !(allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n        listNodes.push(null);\n      }\n\n      if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n        if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n          prevflagState = true;\n        } else {\n          prevflagState = false;\n        }\n      }\n    }\n\n    if (listNodes.length && listNodes[listNodes.length - 1] !== null) {\n      listNodes.push(null);\n    }\n\n    return listNodes;\n  };\n\n  MsWordPaste.prototype.listConverter = function (listNodes) {\n    var level;\n    var data = [];\n    var collection = [];\n    var content = '';\n    var stNode;\n    var currentListStyle = '';\n\n    for (var i = 0; i < listNodes.length; i++) {\n      if (listNodes[i] === null) {\n        data.push({\n          content: this.makeConversion(collection),\n          node: listNodes[i - 1]\n        });\n        collection = [];\n        continue;\n      }\n\n      if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n        listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n      }\n\n      content = listNodes[i].getAttribute('style');\n\n      if (content && content.indexOf('level') !== -1) {\n        // eslint-disable-next-line\n        level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n      } else {\n        level = 1;\n      }\n\n      this.listContents = [];\n      this.getListContent(listNodes[i]);\n      var type = void 0;\n      var listStyleType = void 0;\n\n      if (!isNOU(this.listContents[0])) {\n        type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n        listStyleType = this.getlistStyleType(this.listContents[0], type);\n        var tempNode = [];\n\n        for (var j = 1; j < this.listContents.length; j++) {\n          tempNode.push(this.listContents[j]);\n        }\n\n        var currentClassName = void 0;\n\n        if (!isNOU(listNodes[i].className)) {\n          currentClassName = listNodes[i].className;\n        }\n\n        if (!isNOU(listNodes[i].getAttribute('style'))) {\n          listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n\n          if (listNodes[i].style.textAlign !== '') {\n            listNodes[i].setAttribute('style', 'text-align:' + listNodes[i].style.textAlign);\n            currentListStyle = listNodes[i].getAttribute('style');\n          }\n        }\n\n        collection.push({\n          listType: type,\n          content: tempNode,\n          nestedLevel: level,\n          class: currentClassName,\n          listStyle: currentListStyle,\n          listStyleTypeName: listStyleType\n        });\n      }\n    }\n\n    stNode = listNodes.shift();\n\n    while (stNode) {\n      var elemColl = [];\n\n      for (var temp1 = 0; temp1 < data.length; temp1++) {\n        if (data[temp1].node === stNode) {\n          for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n            elemColl.push(data[temp1].content.childNodes[index]);\n          }\n\n          for (var index = 0; index < elemColl.length; index++) {\n            stNode.parentElement.insertBefore(elemColl[index], stNode);\n          }\n\n          break;\n        }\n      }\n\n      stNode.remove();\n      stNode = listNodes.shift();\n\n      if (!stNode) {\n        stNode = listNodes.shift();\n      }\n    }\n  };\n\n  MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n    var currentListClass;\n\n    if (type === 'ol') {\n      switch (listContent.split('.')[0]) {\n        case \"A\":\n          currentListClass = \"upper-alpha\";\n          break;\n\n        case \"a\":\n          currentListClass = \"lower-alpha\";\n          break;\n\n        case \"I\":\n          currentListClass = \"upper-roman\";\n          break;\n\n        case \"i\":\n          currentListClass = \"lower-roman\";\n          break;\n\n        case \"α\":\n          currentListClass = \"lower-greek\";\n          break;\n\n        default:\n          currentListClass = \"decimal\";\n          break;\n      }\n    } else {\n      switch (listContent.split('.')[0]) {\n        case \"o\":\n          currentListClass = \"circle\";\n          break;\n\n        case \"§\":\n          currentListClass = \"square\";\n          break;\n\n        default:\n          currentListClass = \"disc\";\n          break;\n      }\n    }\n\n    return currentListClass;\n  };\n\n  MsWordPaste.prototype.makeConversion = function (collection) {\n    var root = createElement('div');\n    var temp;\n    var pLevel = 1;\n    var prevList;\n    var listCount = 0;\n    var elem;\n\n    for (var index = 0; index < collection.length; index++) {\n      var pElement = createElement('p');\n      pElement.innerHTML = collection[index].content.join(' ');\n\n      if (collection[index].nestedLevel === 1 && listCount === 0 && collection[index].content) {\n        root.appendChild(temp = createElement(collection[index].listType));\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n        temp.style.listStyleType = collection[index].listStyleTypeName;\n      } else if (collection[index].nestedLevel === pLevel) {\n        if (prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n          prevList.parentElement.appendChild(prevList = createElement('li'));\n          prevList.appendChild(pElement);\n        } else {\n          temp = createElement(collection[index].listType);\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n          prevList.parentElement.parentElement.appendChild(temp);\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n        }\n      } else if (collection[index].nestedLevel > pLevel) {\n        if (!isNOU(prevList)) {\n          for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n            prevList.appendChild(temp = createElement(collection[index].listType));\n            prevList = createElement('li');\n\n            if (j != collection[index].nestedLevel - pLevel - 1 && collection[index].nestedLevel - pLevel > 1) {\n              prevList.style.listStyleType = \"none\";\n            }\n\n            temp.appendChild(prevList);\n          }\n\n          prevList.appendChild(pElement);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        } else {\n          root.appendChild(temp = createElement(collection[index].listType));\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        }\n      } else if (collection[index].nestedLevel === 1) {\n        if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n          temp = root.lastChild;\n        } else {\n          root.appendChild(temp = createElement(collection[index].listType));\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        }\n\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n      } else {\n        elem = prevList;\n\n        while (elem.parentElement) {\n          elem = elem.parentElement;\n\n          if (elem.attributes.getNamedItem('level')) {\n            // eslint-disable-next-line\n            if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel) {\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              elem.appendChild(prevList);\n              break; // eslint-disable-next-line\n            } else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, null)) {\n              elem.appendChild(temp = createElement(collection[index].listType));\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              temp.appendChild(prevList);\n              temp.setAttribute('level', collection[index].nestedLevel.toString());\n              temp.style.listStyleType = collection[index].listStyleTypeName;\n              break;\n            }\n          }\n\n          continue;\n        }\n      }\n\n      prevList.setAttribute('class', collection[index].class);\n      var currentStyle = prevList.getAttribute('style');\n      prevList.setAttribute('style', !isNOU(currentStyle) ? currentStyle : '');\n      pLevel = collection[index].nestedLevel;\n      listCount++;\n    }\n\n    return root;\n  };\n\n  MsWordPaste.prototype.getListContent = function (elem) {\n    var pushContent = '';\n    var firstChild = elem.firstElementChild;\n\n    if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) && firstChild.firstElementChild.nodeName === 'IMG') {\n      pushContent = elem.innerHTML.trim();\n      this.listContents.push('');\n      this.listContents.push(pushContent);\n    } else {\n      var styleNodes = ['b', 'em'];\n\n      if (firstChild.childNodes.length > 0 && (firstChild.querySelectorAll('b').length > 0 || firstChild.querySelectorAll('em').length > 0)) {\n        for (var i = 0; i < firstChild.childNodes.length; i++) {\n          var nodeName = firstChild.childNodes[i].nodeName.toLowerCase();\n\n          if (firstChild.childNodes[i].textContent.trim().length > 1 && styleNodes.indexOf(nodeName) !== -1) {\n            pushContent = '<' + nodeName + '>' + firstChild.childNodes[i].textContent + '</' + nodeName + '>';\n            this.listContents.push(pushContent);\n          } else if (firstChild.childNodes[i].textContent.trim().length === 1) {\n            this.listContents.push(firstChild.childNodes[i].textContent.trim());\n          }\n        }\n      } else {\n        pushContent = firstChild.textContent.trim();\n        this.listContents.push(pushContent);\n      }\n    }\n\n    detach(firstChild);\n    this.listContents.push(elem.innerHTML);\n  };\n\n  return MsWordPaste;\n}();\n\nexport { MsWordPaste };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-richtexteditor/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/ms-word-clean-up.js"],"names":["EVENTS","createElement","isNullOrUndefined","isNOU","detach","MsWordPaste","parent","olData","ulData","ignorableNodes","blockNode","borderStyle","removableElements","listContents","addEventListener","prototype","observer","on","MS_WORD_CLEANUP_PLUGIN","wordCleanup","e","wordPasteStyleConfig","allowedStylePropertiesArray","listNodes","tempHTMLContent","args","clipboardData","getData","rtfData","elm","setAttribute","innerHTML","patern","patern2","patern3","pattern4","test","imageConversion","replace","addListClass","cleanUp","parentElement","tagName","listConverter","styleCorrection","removingComments","removeUnwantedElements","removeEmptyElements","breakLineAddition","removeClassName","addTableBorderClass","callBack","allNodes","querySelectorAll","index","length","getAttribute","indexOf","className","toLowerCase","charAt","classList","add","allTableElm","hasTableBorder","i","j","checkVShape","imgElem","imgSrc","base64Src","imgName","linkRegex","RegExp","push","split","hexValue","hexConversion","convertToBase64","match","nodeName","firstElementChild","src","imgElement","insertBefore","byteArr","conHexStringToBytes","hex","base64String","conBytesToBase64","base64","type","base64Str","base64Char","byteArrLen","array3","slice","array3length","array4","parseInt","substr","picHead","pic","source","fullImg","imgType","result","elmWithClass","removeAttribute","allElements","children","closest","detachableElement","findDetachElem","brElement","element","removableElement","textContent","trim","querySelector","innerElement","regExpStartElem","regExpEndElem","findDetachEmptyElem","emptyElements","styleElement","styles","styleClassObject_1","findStyleObject","keys","Object","values","map","key","removeUnwantedStyle","filterStyles","resultElem","fromClass","getElementsByClassName","getElementsByTagName","styleProperty","valueSplit","k","splice","join","changedValue","elmWithStyles","elemStyleProperty","styleValue","styleValues","styleClassObject","tempStyle","classNameCollection","stylesCollection","classNames","node","temp","tempCleaner","prevflagState","nodeType","childElementCount","level","data","collection","content","stNode","currentListStyle","makeConversion","getListContent","listStyleType","getlistStyleType","tempNode","currentClassName","style","textAlign","listType","nestedLevel","class","listStyle","listStyleTypeName","shift","elemColl","temp1","childNodes","remove","listContent","currentListClass","root","pLevel","prevList","listCount","elem","pElement","appendChild","toString","lastChild","attributes","getNamedItem","currentStyle","pushContent","firstChild","styleNodes"],"mappings":"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","sourcesContent":["import * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\nvar MsWordPaste = /** @class */ (function () {\n    function MsWordPaste(parent) {\n        this.olData = [\n            'decimal',\n            'lower-alpha',\n            'lower-roman',\n            'upper-alpha',\n            'upper-roman',\n            'lower-greek'\n        ];\n        this.ulData = [\n            'disc',\n            'square',\n            'circle',\n            'disc',\n            'square',\n            'circle'\n        ];\n        this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR',\n            'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV',\n            'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2',\n            'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL',\n            'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE',\n            'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH',\n            'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n        this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n            'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset',\n            'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript',\n            'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul',\n            'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n        this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n        this.removableElements = ['o:p', 'style'];\n        this.listContents = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    MsWordPaste.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n    };\n    MsWordPaste.prototype.wordCleanup = function (e) {\n        var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n        var listNodes = [];\n        var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n        var rtfData = e.args.clipboardData.getData('text/rtf');\n        var elm = createElement('p');\n        elm.setAttribute('id', 'MSWord-Content');\n        elm.innerHTML = tempHTMLContent;\n        var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n        var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n        var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n        var pattern4 = /style='mso-width-source:/i;\n        if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) ||\n            pattern4.test(tempHTMLContent)) {\n            this.imageConversion(elm, rtfData);\n            tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n            this.addListClass(elm);\n            listNodes = this.cleanUp(elm, listNodes);\n            if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' &&\n                listNodes[0].parentElement.tagName !== 'OL') {\n                this.listConverter(listNodes);\n            }\n            this.styleCorrection(elm, wordPasteStyleConfig);\n            this.removingComments(elm);\n            this.removeUnwantedElements(elm);\n            this.removeEmptyElements(elm);\n            this.breakLineAddition(elm);\n            this.removeClassName(elm);\n            if (pattern4.test(tempHTMLContent)) {\n                this.addTableBorderClass(elm);\n            }\n            e.callBack(elm.innerHTML);\n        }\n        else {\n            e.callBack(elm.innerHTML);\n        }\n    };\n    MsWordPaste.prototype.addListClass = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 && allNodes[index].tagName.charAt(0) !== 'H') {\n                allNodes[index].classList.add('msolistparagraph');\n            }\n        }\n    };\n    MsWordPaste.prototype.addTableBorderClass = function (elm) {\n        var allTableElm = elm.querySelectorAll('table');\n        var hasTableBorder = false;\n        for (var i = 0; i < allTableElm.length; i++) {\n            for (var j = 0; j < this.borderStyle.length; j++) {\n                if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n                    hasTableBorder = true;\n                    break;\n                }\n            }\n            if (hasTableBorder) {\n                allTableElm[i].classList.add('e-rte-table-border');\n                hasTableBorder = false;\n            }\n        }\n    };\n    MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n        this.checkVShape(elm);\n        var imgElem = elm.querySelectorAll('img');\n        var imgSrc = [];\n        var base64Src = [];\n        var imgName = [];\n        // eslint-disable-next-line\n        var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.))(\\S+))/gi);\n        if (imgElem.length > 0) {\n            for (var i = 0; i < imgElem.length; i++) {\n                imgSrc.push(imgElem[i].getAttribute('src'));\n                imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n            }\n            var hexValue = this.hexConversion(rtfData);\n            for (var i = 0; i < hexValue.length; i++) {\n                base64Src.push(this.convertToBase64(hexValue[i]));\n            }\n            for (var i = 0; i < imgElem.length; i++) {\n                if (imgSrc[i].match(linkRegex)) {\n                    imgElem[i].setAttribute('src', imgSrc[i]);\n                }\n                else {\n                    imgElem[i].setAttribute('src', base64Src[i]);\n                }\n                imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n            }\n        }\n    };\n    MsWordPaste.prototype.checkVShape = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var i = 0; i < allNodes.length; i++) {\n            switch (allNodes[i].nodeName) {\n                case 'V:SHAPETYPE':\n                    detach(allNodes[i]);\n                    break;\n                case 'V:SHAPE':\n                    if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n                        var src = allNodes[i].firstElementChild.getAttribute('src');\n                        var imgElement = createElement('img');\n                        imgElement.setAttribute('src', src);\n                        allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n                        detach(allNodes[i]);\n                    }\n                    break;\n            }\n        }\n    };\n    MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n        var byteArr = this.conHexStringToBytes(hexValue.hex);\n        var base64String = this.conBytesToBase64(byteArr);\n        var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n        return base64;\n    };\n    MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n        var base64Str = '';\n        var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n        var byteArrLen = byteArr.length;\n        for (var i = 0; i < byteArrLen; i += 3) {\n            var array3 = byteArr.slice(i, i + 3);\n            var array3length = array3.length;\n            var array4 = [];\n            if (array3length < 3) {\n                for (var j = array3length; j < 3; j++) {\n                    array3[j] = 0;\n                }\n            }\n            array4[0] = (array3[0] & 0xFC) >> 2;\n            array4[1] = ((array3[0] & 0x03) << 4) | (array3[1] >> 4);\n            array4[2] = ((array3[1] & 0x0F) << 2) | ((array3[2] & 0xC0) >> 6);\n            array4[3] = array3[2] & 0x3F;\n            for (var j = 0; j < 4; j++) {\n                if (j <= array3length) {\n                    base64Str += base64Char.charAt(array4[j]);\n                }\n                else {\n                    base64Str += '=';\n                }\n            }\n        }\n        return base64Str;\n    };\n    MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n        var byteArr = [];\n        var byteArrLen = hex.length / 2;\n        for (var i = 0; i < byteArrLen; i++) {\n            byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n        }\n        return byteArr;\n    };\n    MsWordPaste.prototype.hexConversion = function (rtfData) {\n        // eslint-disable-next-line\n        var picHead = /\\{\\\\pict[\\s\\S]+?\\\\bliptag\\-?\\d+(\\\\blipupi\\-?\\d+)?(\\{\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s\\}]*?/;\n        var pic = new RegExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n        var fullImg = rtfData.match(pic);\n        var imgType;\n        var result = [];\n        if (!isNOU(fullImg)) {\n            for (var i = 0; i < fullImg.length; i++) {\n                if (picHead.test(fullImg[i])) {\n                    if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n                        imgType = 'image/png';\n                    }\n                    else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n                        imgType = 'image/jpeg';\n                    }\n                    else {\n                        continue;\n                    }\n                    result.push({\n                        hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n                        type: imgType\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    MsWordPaste.prototype.removeClassName = function (elm) {\n        var elmWithClass = elm.querySelectorAll('*[class]');\n        for (var i = 0; i < elmWithClass.length; i++) {\n            elmWithClass[i].removeAttribute('class');\n        }\n    };\n    MsWordPaste.prototype.breakLineAddition = function (elm) {\n        var allElements = elm.querySelectorAll('*');\n        for (var i = 0; i < allElements.length; i++) {\n            if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' &&\n                (allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li')) &&\n                !allElements[i].closest('td')) {\n                var detachableElement = this.findDetachElem(allElements[i]);\n                var brElement = createElement('br');\n                if (!isNOU(detachableElement.parentElement)) {\n                    detachableElement.parentElement.insertBefore(brElement, detachableElement);\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.findDetachElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement) &&\n            element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' &&\n            isNOU(element.parentElement.querySelector('img'))) {\n            removableElement = this.findDetachElem(element.parentElement);\n        }\n        else {\n            removableElement = element;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n        var innerElement = elm.innerHTML;\n        for (var i = 0; i < this.removableElements.length; i++) {\n            var regExpStartElem = new RegExp('<' + this.removableElements[i] + '>', 'g');\n            var regExpEndElem = new RegExp('</' + this.removableElements[i] + '>', 'g');\n            innerElement = innerElement.replace(regExpStartElem, '');\n            innerElement = innerElement.replace(regExpEndElem, '');\n        }\n        elm.innerHTML = innerElement;\n        elm.querySelectorAll(':empty');\n    };\n    MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            if (element.parentElement.textContent.trim() === '' &&\n                element.parentElement.getAttribute('id') !== 'MSWord-Content' &&\n                isNOU(element.parentElement.querySelector('img'))) {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (!isNOU(emptyElements[i].closest('td')) &&\n                !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n                emptyElements[i].innerHTML = '-';\n            }\n            if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' &&\n                emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' &&\n                emptyElements[i].tagName !== 'HR') {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n        var styleElement = elm.querySelectorAll('style');\n        if (styleElement.length > 0) {\n            var styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n            var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n            var keys = Object.keys(styleClassObject_1);\n            var values = keys.map(function (key) {\n                return styleClassObject_1[key];\n            });\n            values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n            this.filterStyles(elm, wordPasteStyleConfig);\n            var resultElem = void 0;\n            var fromClass = false;\n            for (var i = 0; i < keys.length; i++) {\n                if (keys[i].split('.')[0] === '') {\n                    resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n                    fromClass = true;\n                }\n                else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0) {\n                    continue;\n                }\n                else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n                    resultElem = elm.getElementsByTagName(keys[i]);\n                }\n                else {\n                    resultElem = elm.querySelectorAll(keys[i]);\n                }\n                for (var j = 0; j < resultElem.length; j++) {\n                    var styleProperty = resultElem[j].getAttribute('style');\n                    if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n                        var valueSplit = values[i].split(';');\n                        if (!fromClass) {\n                            for (var k = 0; k < valueSplit.length; k++) {\n                                if (styleProperty.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                                    valueSplit.splice(k, 1);\n                                    k--;\n                                }\n                            }\n                        }\n                        values[i] = valueSplit.join(';') + ';';\n                        var changedValue = styleProperty + values[i];\n                        resultElem[j].setAttribute('style', changedValue);\n                    }\n                    else {\n                        values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n                        resultElem[j].setAttribute('style', values[i]);\n                    }\n                }\n                fromClass = false;\n            }\n        }\n    };\n    MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n        var elmWithStyles = elm.querySelectorAll('*[style]');\n        for (var i = 0; i < elmWithStyles.length; i++) {\n            var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n            var styleValue = '';\n            for (var j = 0; j < elemStyleProperty.length; j++) {\n                if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n                    styleValue += elemStyleProperty[j] + ';';\n                }\n            }\n            elmWithStyles[i].setAttribute('style', styleValue);\n        }\n    };\n    MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n        for (var i = 0; i < values.length; i++) {\n            var styleValues = values[i].split(';');\n            values[i] = '';\n            for (var j = 0; j < styleValues.length; j++) {\n                if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n                    values[i] += styleValues[j] + ';';\n                }\n            }\n        }\n        return values;\n    };\n    MsWordPaste.prototype.findStyleObject = function (styles) {\n        var styleClassObject = {};\n        for (var i = 0; i < styles.length; i++) {\n            var tempStyle = styles[i];\n            var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n            var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n            classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n                styleClassObject[classNames[j]] = stylesCollection;\n            }\n        }\n        return styleClassObject;\n    };\n    MsWordPaste.prototype.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n        // eslint-disable-next-line\n        var temp = '';\n        var tempCleaner = [];\n        var prevflagState;\n        var allNodes = node.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 ||\n                (allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '')) {\n                tempCleaner.push(allNodes[index]);\n                continue;\n            }\n            else if (allNodes[index].className &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 &&\n                allNodes[index].childElementCount !== 1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 &&\n                    listNodes[listNodes.length - 1] !== null) {\n                    listNodes.push(null);\n                }\n                listNodes.push(allNodes[index]);\n            }\n            if (prevflagState && (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) &&\n                !(allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n                listNodes.push(null);\n            }\n            if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n                if (allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                    prevflagState = true;\n                }\n                else {\n                    prevflagState = false;\n                }\n            }\n        }\n        if (listNodes.length && (listNodes[listNodes.length - 1] !== null)) {\n            listNodes.push(null);\n        }\n        return listNodes;\n    };\n    MsWordPaste.prototype.listConverter = function (listNodes) {\n        var level;\n        var data = [];\n        var collection = [];\n        var content = '';\n        var stNode;\n        var currentListStyle = '';\n        for (var i = 0; i < listNodes.length; i++) {\n            if (listNodes[i] === null) {\n                data.push({ content: this.makeConversion(collection), node: listNodes[i - 1] });\n                collection = [];\n                continue;\n            }\n            if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n                listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n            }\n            content = listNodes[i].getAttribute('style');\n            if (content && content.indexOf('level') !== -1) {\n                // eslint-disable-next-line\n                level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n            }\n            else {\n                level = 1;\n            }\n            this.listContents = [];\n            this.getListContent(listNodes[i]);\n            var type = void 0;\n            var listStyleType = void 0;\n            if (!isNOU(this.listContents[0])) {\n                type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n                listStyleType = this.getlistStyleType(this.listContents[0], type);\n                var tempNode = [];\n                for (var j = 1; j < this.listContents.length; j++) {\n                    tempNode.push(this.listContents[j]);\n                }\n                var currentClassName = void 0;\n                if (!isNOU(listNodes[i].className)) {\n                    currentClassName = listNodes[i].className;\n                }\n                if (!isNOU(listNodes[i].getAttribute('style'))) {\n                    listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n                    if (listNodes[i].style.textAlign !== '') {\n                        listNodes[i].setAttribute('style', 'text-align:' + listNodes[i].style.textAlign);\n                        currentListStyle = listNodes[i].getAttribute('style');\n                    }\n                }\n                collection.push({ listType: type, content: tempNode, nestedLevel: level, class: currentClassName,\n                    listStyle: currentListStyle, listStyleTypeName: listStyleType });\n            }\n        }\n        stNode = listNodes.shift();\n        while (stNode) {\n            var elemColl = [];\n            for (var temp1 = 0; temp1 < data.length; temp1++) {\n                if (data[temp1].node === stNode) {\n                    for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n                        elemColl.push(data[temp1].content.childNodes[index]);\n                    }\n                    for (var index = 0; index < elemColl.length; index++) {\n                        stNode.parentElement.insertBefore(elemColl[index], stNode);\n                    }\n                    break;\n                }\n            }\n            stNode.remove();\n            stNode = listNodes.shift();\n            if (!stNode) {\n                stNode = listNodes.shift();\n            }\n        }\n    };\n    MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n        var currentListClass;\n        if (type === 'ol') {\n            switch (listContent.split('.')[0]) {\n                case \"A\":\n                    currentListClass = \"upper-alpha\";\n                    break;\n                case \"a\":\n                    currentListClass = \"lower-alpha\";\n                    break;\n                case \"I\":\n                    currentListClass = \"upper-roman\";\n                    break;\n                case \"i\":\n                    currentListClass = \"lower-roman\";\n                    break;\n                case \"α\":\n                    currentListClass = \"lower-greek\";\n                    break;\n                default:\n                    currentListClass = \"decimal\";\n                    break;\n            }\n        }\n        else {\n            switch (listContent.split('.')[0]) {\n                case \"o\":\n                    currentListClass = \"circle\";\n                    break;\n                case \"§\":\n                    currentListClass = \"square\";\n                    break;\n                default:\n                    currentListClass = \"disc\";\n                    break;\n            }\n        }\n        return currentListClass;\n    };\n    MsWordPaste.prototype.makeConversion = function (collection) {\n        var root = createElement('div');\n        var temp;\n        var pLevel = 1;\n        var prevList;\n        var listCount = 0;\n        var elem;\n        for (var index = 0; index < collection.length; index++) {\n            var pElement = createElement('p');\n            pElement.innerHTML = collection[index].content.join(' ');\n            if ((collection[index].nestedLevel === 1) && listCount === 0 && collection[index].content) {\n                root.appendChild(temp = createElement(collection[index].listType));\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n                temp.style.listStyleType = collection[index].listStyleTypeName;\n            }\n            else if (collection[index].nestedLevel === pLevel) {\n                if (prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n                    prevList.parentElement.appendChild(prevList = createElement('li'));\n                    prevList.appendChild(pElement);\n                }\n                else {\n                    temp = createElement(collection[index].listType);\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                    prevList.parentElement.parentElement.appendChild(temp);\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                }\n            }\n            else if (collection[index].nestedLevel > pLevel) {\n                if (!isNOU(prevList)) {\n                    for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n                        prevList.appendChild(temp = createElement(collection[index].listType));\n                        prevList = createElement('li');\n                        if (j != collection[index].nestedLevel - pLevel - 1 && collection[index].nestedLevel - pLevel > 1) {\n                            prevList.style.listStyleType = \"none\";\n                        }\n                        temp.appendChild(prevList);\n                    }\n                    prevList.appendChild(pElement);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                else {\n                    root.appendChild(temp = createElement(collection[index].listType));\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n            }\n            else if (collection[index].nestedLevel === 1) {\n                if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n                    temp = root.lastChild;\n                }\n                else {\n                    root.appendChild(temp = createElement(collection[index].listType));\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n            }\n            else {\n                elem = prevList;\n                while (elem.parentElement) {\n                    elem = elem.parentElement;\n                    if (elem.attributes.getNamedItem('level')) {\n                        // eslint-disable-next-line\n                        if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel) {\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            elem.appendChild(prevList);\n                            break;\n                            // eslint-disable-next-line\n                        }\n                        else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, null)) {\n                            elem.appendChild(temp = createElement(collection[index].listType));\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            temp.appendChild(prevList);\n                            temp.setAttribute('level', collection[index].nestedLevel.toString());\n                            temp.style.listStyleType = collection[index].listStyleTypeName;\n                            break;\n                        }\n                    }\n                    continue;\n                }\n            }\n            prevList.setAttribute('class', collection[index].class);\n            var currentStyle = prevList.getAttribute('style');\n            prevList.setAttribute('style', (!isNOU(currentStyle) ? currentStyle : ''));\n            pLevel = collection[index].nestedLevel;\n            listCount++;\n        }\n        return root;\n    };\n    MsWordPaste.prototype.getListContent = function (elem) {\n        var pushContent = '';\n        var firstChild = elem.firstElementChild;\n        if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) &&\n            firstChild.firstElementChild.nodeName === 'IMG') {\n            pushContent = elem.innerHTML.trim();\n            this.listContents.push('');\n            this.listContents.push(pushContent);\n        }\n        else {\n            var styleNodes = ['b', 'em'];\n            if (firstChild.childNodes.length > 0 && (firstChild.querySelectorAll('b').length > 0\n                || firstChild.querySelectorAll('em').length > 0)) {\n                for (var i = 0; i < firstChild.childNodes.length; i++) {\n                    var nodeName = firstChild.childNodes[i].nodeName.toLowerCase();\n                    if (firstChild.childNodes[i].textContent.trim().length > 1 && styleNodes.indexOf(nodeName) !== -1) {\n                        pushContent = '<' + nodeName + '>' + firstChild.childNodes[i].textContent + '</' + nodeName + '>';\n                        this.listContents.push(pushContent);\n                    }\n                    else if (firstChild.childNodes[i].textContent.trim().length === 1) {\n                        this.listContents.push(firstChild.childNodes[i].textContent.trim());\n                    }\n                }\n            }\n            else {\n                pushContent = firstChild.textContent.trim();\n                this.listContents.push(pushContent);\n            }\n        }\n        detach(firstChild);\n        this.listContents.push(elem.innerHTML);\n    };\n    return MsWordPaste;\n}());\nexport { MsWordPaste };\n"]},"metadata":{},"sourceType":"module"}