{"ast":null,"code":"import { detach, getUniqueID, rippleEffect, setValue, attributes } from '@syncfusion/ej2-base';\nimport { getValue, addClass, deleteObject } from '@syncfusion/ej2-base';\n/**\n * Initialize wrapper element for angular.\n *\n * @private\n *\n * @param {CreateElementArgs} createElement - Specifies created element args\n * @param {string} tag - Specifies tag name\n * @param {string} type - Specifies type name\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} WRAPPER - Specifies wrapper element\n * @param {string} role - Specifies role\n * @returns {HTMLInputElement} - Input Element\n */\n\nexport function wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {\n  var input = element;\n\n  if (element.tagName === tag) {\n    var ejInstance = getValue('ej2_instances', element);\n    input = createElement('input', {\n      attrs: {\n        'type': type\n      }\n    });\n    var props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];\n\n    for (var index = 0, len = element.attributes.length; index < len; index++) {\n      if (props.indexOf(element.attributes[index].nodeName) === -1) {\n        input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);\n      }\n    }\n\n    attributes(element, {\n      'class': WRAPPER,\n      'role': role,\n      'aria-checked': 'false'\n    });\n    element.appendChild(input);\n    setValue('ej2_instances', ejInstance, input);\n    deleteObject(element, 'ej2_instances');\n  }\n\n  return input;\n}\n/**\n * Get the text node.\n *\n * @param {HTMLElement} element - Specifies html element\n * @private\n * @returns {Node} - Text node.\n */\n\nexport function getTextNode(element) {\n  var node;\n  var childnode = element.childNodes;\n\n  for (var i = 0; i < childnode.length; i++) {\n    node = childnode[i];\n\n    if (node.nodeType === 3) {\n      return node;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroy the button components.\n *\n * @private\n * @param {Switch | CheckBox} ejInst - Specifies eJ2 Instance\n * @param {Element} wrapper - Specifies wrapper element\n * @param {string} tagName - Specifies tag name\n * @returns {void}\n */\n\nexport function destroy(ejInst, wrapper, tagName) {\n  if (tagName === 'INPUT') {\n    wrapper.parentNode.insertBefore(ejInst.element, wrapper);\n    detach(wrapper);\n    ejInst.element.checked = false;\n    ['name', 'value', 'disabled'].forEach(function (key) {\n      ejInst.element.removeAttribute(key);\n    });\n  } else {\n    ['role', 'aria-checked', 'class'].forEach(function (key) {\n      wrapper.removeAttribute(key);\n    });\n    wrapper.innerHTML = '';\n  }\n}\n/**\n * Initialize control pre rendering.\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies proxy\n * @param {string} control - Specifies control\n * @param {string} wrapper - Specifies wrapper element\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} moduleName - Specifies module name\n * @returns {void}\n */\n\nexport function preRender(proxy, control, wrapper, element, moduleName) {\n  element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);\n  proxy.element = element;\n\n  if (proxy.element.getAttribute('type') !== 'checkbox') {\n    proxy.element.setAttribute('type', 'checkbox');\n  }\n\n  if (!proxy.element.id) {\n    proxy.element.id = getUniqueID('e-' + moduleName);\n  }\n}\n/**\n * Creates CheckBox component UI with theming and ripple support.\n *\n * @private\n * @param {CreateElementArgs} createElement - Specifies Created Element args\n * @param {boolean} enableRipple - Specifies ripple effect\n * @param {CheckBoxUtilModel} options - Specifies Checkbox util Model\n * @returns {Element} - Checkbox Element\n */\n\nexport function createCheckBox(createElement, enableRipple, options) {\n  if (enableRipple === void 0) {\n    enableRipple = false;\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var wrapper = createElement('div', {\n    className: 'e-checkbox-wrapper e-css'\n  });\n\n  if (options.cssClass) {\n    addClass([wrapper], options.cssClass.split(' '));\n  }\n\n  if (options.enableRtl) {\n    wrapper.classList.add('e-rtl');\n  }\n\n  if (enableRipple) {\n    var rippleSpan = createElement('span', {\n      className: 'e-ripple-container'\n    });\n    rippleEffect(rippleSpan, {\n      isCenterRipple: true,\n      duration: 400\n    });\n    wrapper.appendChild(rippleSpan);\n  }\n\n  var frameSpan = createElement('span', {\n    className: 'e-frame e-icons'\n  });\n\n  if (options.checked) {\n    frameSpan.classList.add('e-check');\n  }\n\n  wrapper.appendChild(frameSpan);\n\n  if (options.label) {\n    var labelSpan = createElement('span', {\n      className: 'e-label'\n    });\n\n    if (options.disableHtmlEncode) {\n      labelSpan.textContent = options.label;\n    } else {\n      labelSpan.innerHTML = options.label;\n    }\n\n    wrapper.appendChild(labelSpan);\n  }\n\n  return wrapper;\n}\n/**\n * Handles ripple mouse.\n *\n * @private\n * @param {MouseEvent} e - Specifies mouse event\n * @param {Element} rippleSpan - Specifies Ripple span element\n * @returns {void}\n */\n\nexport function rippleMouseHandler(e, rippleSpan) {\n  if (rippleSpan) {\n    var event_1 = document.createEvent('MouseEvents');\n    event_1.initEvent(e.type, false, true);\n    rippleSpan.dispatchEvent(event_1);\n  }\n}\n/**\n * Append hidden input to given element\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies Proxy\n * @param {Element} wrap - Specifies Wrapper ELement\n * @returns {void}\n */\n\nexport function setHiddenInput(proxy, wrap) {\n  if (proxy.element.getAttribute('ejs-for')) {\n    wrap.appendChild(proxy.createElement('input', {\n      attrs: {\n        'name': proxy.name || proxy.element.name,\n        'value': 'false',\n        'type': 'hidden'\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-popups/node_modules/@syncfusion/ej2-buttons/src/common/common.js"],"names":["detach","getUniqueID","rippleEffect","setValue","attributes","getValue","addClass","deleteObject","wrapperInitialize","createElement","tag","type","element","WRAPPER","role","input","tagName","ejInstance","attrs","props","index","len","length","indexOf","nodeName","setAttribute","nodeValue","appendChild","getTextNode","node","childnode","childNodes","i","nodeType","destroy","ejInst","wrapper","parentNode","insertBefore","checked","forEach","key","removeAttribute","innerHTML","preRender","proxy","control","moduleName","getAttribute","id","createCheckBox","enableRipple","options","className","cssClass","split","enableRtl","classList","add","rippleSpan","isCenterRipple","duration","frameSpan","label","labelSpan","disableHtmlEncode","textContent","rippleMouseHandler","e","event_1","document","createEvent","initEvent","dispatchEvent","setHiddenInput","wrap","name"],"mappings":"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","sourcesContent":["import { detach, getUniqueID, rippleEffect, setValue, attributes } from '@syncfusion/ej2-base';\nimport { getValue, addClass, deleteObject } from '@syncfusion/ej2-base';\n/**\n * Initialize wrapper element for angular.\n *\n * @private\n *\n * @param {CreateElementArgs} createElement - Specifies created element args\n * @param {string} tag - Specifies tag name\n * @param {string} type - Specifies type name\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} WRAPPER - Specifies wrapper element\n * @param {string} role - Specifies role\n * @returns {HTMLInputElement} - Input Element\n */\nexport function wrapperInitialize(createElement, tag, type, element, WRAPPER, role) {\n    var input = element;\n    if (element.tagName === tag) {\n        var ejInstance = getValue('ej2_instances', element);\n        input = createElement('input', { attrs: { 'type': type } });\n        var props = ['change', 'cssClass', 'label', 'labelPosition', 'id'];\n        for (var index = 0, len = element.attributes.length; index < len; index++) {\n            if (props.indexOf(element.attributes[index].nodeName) === -1) {\n                input.setAttribute(element.attributes[index].nodeName, element.attributes[index].nodeValue);\n            }\n        }\n        attributes(element, { 'class': WRAPPER, 'role': role, 'aria-checked': 'false' });\n        element.appendChild(input);\n        setValue('ej2_instances', ejInstance, input);\n        deleteObject(element, 'ej2_instances');\n    }\n    return input;\n}\n/**\n * Get the text node.\n *\n * @param {HTMLElement} element - Specifies html element\n * @private\n * @returns {Node} - Text node.\n */\nexport function getTextNode(element) {\n    var node;\n    var childnode = element.childNodes;\n    for (var i = 0; i < childnode.length; i++) {\n        node = childnode[i];\n        if (node.nodeType === 3) {\n            return node;\n        }\n    }\n    return null;\n}\n/**\n * Destroy the button components.\n *\n * @private\n * @param {Switch | CheckBox} ejInst - Specifies eJ2 Instance\n * @param {Element} wrapper - Specifies wrapper element\n * @param {string} tagName - Specifies tag name\n * @returns {void}\n */\nexport function destroy(ejInst, wrapper, tagName) {\n    if (tagName === 'INPUT') {\n        wrapper.parentNode.insertBefore(ejInst.element, wrapper);\n        detach(wrapper);\n        ejInst.element.checked = false;\n        ['name', 'value', 'disabled'].forEach(function (key) {\n            ejInst.element.removeAttribute(key);\n        });\n    }\n    else {\n        ['role', 'aria-checked', 'class'].forEach(function (key) {\n            wrapper.removeAttribute(key);\n        });\n        wrapper.innerHTML = '';\n    }\n}\n/**\n * Initialize control pre rendering.\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies proxy\n * @param {string} control - Specifies control\n * @param {string} wrapper - Specifies wrapper element\n * @param {HTMLInputElement} element - Specifies input element\n * @param {string} moduleName - Specifies module name\n * @returns {void}\n */\nexport function preRender(proxy, control, wrapper, element, moduleName) {\n    element = wrapperInitialize(proxy.createElement, control, 'checkbox', element, wrapper, moduleName);\n    proxy.element = element;\n    if (proxy.element.getAttribute('type') !== 'checkbox') {\n        proxy.element.setAttribute('type', 'checkbox');\n    }\n    if (!proxy.element.id) {\n        proxy.element.id = getUniqueID('e-' + moduleName);\n    }\n}\n/**\n * Creates CheckBox component UI with theming and ripple support.\n *\n * @private\n * @param {CreateElementArgs} createElement - Specifies Created Element args\n * @param {boolean} enableRipple - Specifies ripple effect\n * @param {CheckBoxUtilModel} options - Specifies Checkbox util Model\n * @returns {Element} - Checkbox Element\n */\nexport function createCheckBox(createElement, enableRipple, options) {\n    if (enableRipple === void 0) { enableRipple = false; }\n    if (options === void 0) { options = {}; }\n    var wrapper = createElement('div', { className: 'e-checkbox-wrapper e-css' });\n    if (options.cssClass) {\n        addClass([wrapper], options.cssClass.split(' '));\n    }\n    if (options.enableRtl) {\n        wrapper.classList.add('e-rtl');\n    }\n    if (enableRipple) {\n        var rippleSpan = createElement('span', { className: 'e-ripple-container' });\n        rippleEffect(rippleSpan, { isCenterRipple: true, duration: 400 });\n        wrapper.appendChild(rippleSpan);\n    }\n    var frameSpan = createElement('span', { className: 'e-frame e-icons' });\n    if (options.checked) {\n        frameSpan.classList.add('e-check');\n    }\n    wrapper.appendChild(frameSpan);\n    if (options.label) {\n        var labelSpan = createElement('span', { className: 'e-label' });\n        if (options.disableHtmlEncode) {\n            labelSpan.textContent = options.label;\n        }\n        else {\n            labelSpan.innerHTML = options.label;\n        }\n        wrapper.appendChild(labelSpan);\n    }\n    return wrapper;\n}\n/**\n * Handles ripple mouse.\n *\n * @private\n * @param {MouseEvent} e - Specifies mouse event\n * @param {Element} rippleSpan - Specifies Ripple span element\n * @returns {void}\n */\nexport function rippleMouseHandler(e, rippleSpan) {\n    if (rippleSpan) {\n        var event_1 = document.createEvent('MouseEvents');\n        event_1.initEvent(e.type, false, true);\n        rippleSpan.dispatchEvent(event_1);\n    }\n}\n/**\n * Append hidden input to given element\n *\n * @private\n * @param {Switch | CheckBox} proxy - Specifies Proxy\n * @param {Element} wrap - Specifies Wrapper ELement\n * @returns {void}\n */\nexport function setHiddenInput(proxy, wrap) {\n    if (proxy.element.getAttribute('ejs-for')) {\n        wrap.appendChild(proxy.createElement('input', {\n            attrs: { 'name': proxy.name || proxy.element.name, 'value': 'false', 'type': 'hidden' }\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}