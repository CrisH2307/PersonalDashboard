{"ast":null,"code":"/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins =\n/** @class */\nfunction () {\n  /**\n   * Initializes a new instance of the `PdfMargins` class.\n   * @private\n   */\n  function PdfMargins() {\n    /**\n     * Represents the `Default Page Margin` value.\n     * @default 0.0\n     * @private\n     */\n    this.pdfMargin = 40.0;\n    this.setMargins(this.pdfMargin);\n  }\n\n  Object.defineProperty(PdfMargins.prototype, \"left\", {\n    //Properties\n\n    /**\n     * Gets or sets the `left margin` size.\n     * @private\n     */\n    get: function () {\n      return this.leftMargin;\n    },\n    set: function (value) {\n      this.leftMargin = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfMargins.prototype, \"top\", {\n    /**\n     * Gets or sets the `top margin` size.\n     * @private\n     */\n    get: function () {\n      return this.topMargin;\n    },\n    set: function (value) {\n      this.topMargin = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfMargins.prototype, \"right\", {\n    /**\n     * Gets or sets the `right margin` size.\n     * @private\n     */\n    get: function () {\n      return this.rightMargin;\n    },\n    set: function (value) {\n      this.rightMargin = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n    /**\n     * Gets or sets the `bottom margin` size.\n     * @private\n     */\n    get: function () {\n      return this.bottomMargin;\n    },\n    set: function (value) {\n      this.bottomMargin = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfMargins.prototype, \"all\", {\n    /**\n     * Sets the `margins`.\n     * @private\n     */\n    set: function (value) {\n      this.setMargins(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n    if (typeof margin2 === 'undefined') {\n      this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n    } else {\n      if (typeof margin3 === 'undefined') {\n        this.leftMargin = this.rightMargin = margin1;\n        this.bottomMargin = this.topMargin = margin2;\n      } else {\n        this.leftMargin = margin1;\n        this.topMargin = margin2;\n        this.rightMargin = margin3;\n        this.bottomMargin = margin4;\n      }\n    }\n  };\n  /**\n   * `Clones` the object.\n   * @private\n   */\n\n\n  PdfMargins.prototype.clone = function () {\n    return this;\n  };\n\n  return PdfMargins;\n}();\n\nexport { PdfMargins };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js"],"names":["PdfMargins","pdfMargin","setMargins","Object","defineProperty","prototype","get","leftMargin","set","value","enumerable","configurable","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","clone"],"mappings":"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","sourcesContent":["/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n"]},"metadata":{},"sourceType":"module"}