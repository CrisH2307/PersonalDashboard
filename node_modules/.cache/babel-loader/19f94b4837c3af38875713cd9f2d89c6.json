{"ast":null,"code":"/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\n\nvar PdfPageTemplateElement =\n/** @class */\nfunction () {\n  /* tslint:disable */\n  function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n    if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n    } else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n    } else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n    } else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n      this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n    } else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1, arg2, null);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n      this.InitiateBounds(0, 0, arg1, arg2, arg3);\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n      this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n    } else {\n      this.InitiateBounds(arg1, arg2, arg3, arg4, null); // this.graphics.colorSpace = this.page.document.colorSpace;\n    }\n    /* tslint:enable */\n\n  }\n\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n    // Properties\n\n    /**\n     * Gets or sets the `dock style` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.dockStyle;\n    },\n    set: function (value) {\n      // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n      this.dockStyle = value; // Reset alignment.\n\n      this.resetAlignment(); // }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n    /**\n     * Gets or sets `alignment` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.alignmentStyle;\n    },\n    set: function (value) {\n      // if (this.alignmentStyle !== value) {\n      this.setAlignment(value); // }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n    /**\n     * Indicates whether the page template is located `in front of the page layers or behind of it`.\n     * @private\n     */\n    get: function () {\n      return this.isForeground;\n    },\n    set: function (value) {\n      // if (this.foreground !== value) {\n      this.isForeground = value; // }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n    /**\n     * Indicates whether the page template is located `behind of the page layers or in front of it`.\n     * @private\n     */\n    get: function () {\n      return !this.isForeground;\n    },\n    set: function (value) {\n      this.isForeground = !value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n    /**\n     * Gets or sets `location` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.currentLocation;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation = value;\n      } else {//\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n    /**\n     * Gets or sets `X` co-ordinate of the template element on the page.\n     * @private\n     */\n    get: function () {\n      var value = typeof this.currentLocation !== 'undefined' ? this.currentLocation.x : 0;\n      return value;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation.x = value;\n      } else {//\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n    /**\n     * Gets or sets `Y` co-ordinate of the template element on the page.\n     * @private\n     */\n    get: function () {\n      var value = typeof this.currentLocation !== 'undefined' ? this.currentLocation.y : 0;\n      return value;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.currentLocation.y = value;\n      } else {//\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n    /**\n     * Gets or sets `size` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.size;\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.template.reset(value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n    /**\n     * Gets or sets `width` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.width;\n    },\n    set: function (value) {\n      if (this.template.width !== value && this.type === TemplateType.None) {\n        var size = this.template.size;\n        size.width = value;\n        this.template.reset(size);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n    /**\n     * Gets or sets `height` of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.height;\n    },\n    set: function (value) {\n      if (this.template.height !== value && this.type === TemplateType.None) {\n        var size = this.template.size;\n        size.height = value;\n        this.template.reset(size);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n    /**\n     * Gets `graphics` context of the page template element.\n     * @private\n     */\n    get: function () {\n      return this.template.graphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n    /**\n     * Gets Pdf `template` object.\n     * @private\n     */\n    get: function () {\n      // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n      //     this.pdfTemplate = new PdfTemplate(this.size);\n      // }\n      return this.pdfTemplate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n    /**\n     * Gets or sets `type` of the usage of this page template.\n     * @private\n     */\n    get: function () {\n      return this.templateType;\n    },\n    set: function (value) {\n      this.updateDocking(value);\n      this.templateType = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n    /**\n     * Gets or sets `bounds` of the page template.\n     * @public\n     */\n    get: function () {\n      return new RectangleF(new PointF(this.x, this.y), this.size);\n    },\n    set: function (value) {\n      if (this.type === TemplateType.None) {\n        this.location = new PointF(value.x, value.y);\n        this.size = new SizeF(value.width, value.height);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Initialize Bounds` Initialize the bounds value of the template.\n   * @private\n   */\n\n  PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n    this.x = arg1;\n    this.y = arg2;\n    this.pdfTemplate = new PdfTemplate(arg3, arg4); // this.graphics.colorSpace = this.page.document.colorSpace;\n  };\n  /**\n   * `Updates Dock` property if template is used as header/footer.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.updateDocking = function (type) {\n    if (type !== TemplateType.None) {\n      switch (type) {\n        case TemplateType.Top:\n          this.dock = PdfDockStyle.Top;\n          break;\n\n        case TemplateType.Bottom:\n          this.dock = PdfDockStyle.Bottom;\n          break;\n\n        case TemplateType.Left:\n          this.dock = PdfDockStyle.Left;\n          break;\n\n        case TemplateType.Right:\n          this.dock = PdfDockStyle.Right;\n          break;\n      }\n\n      this.resetAlignment();\n    }\n  };\n  /**\n   * `Resets alignment` of the template.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.resetAlignment = function () {\n    this.alignment = PdfAlignmentStyle.None;\n  };\n  /**\n   * `Sets alignment` of the template.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n    if (this.dock === PdfDockStyle.None) {\n      this.alignmentStyle = alignment;\n    } else {\n      // Template is docked and alignment has been changed.\n      var canBeSet = false;\n\n      switch (this.dock) {\n        case PdfDockStyle.Left:\n          canBeSet = alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft || alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None;\n          break;\n\n        case PdfDockStyle.Top:\n          canBeSet = alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter || alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None;\n          break;\n\n        case PdfDockStyle.Right:\n          canBeSet = alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None;\n          break;\n\n        case PdfDockStyle.Bottom:\n          canBeSet = alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None;\n          break;\n\n        case PdfDockStyle.Fill:\n          canBeSet = alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None;\n          break;\n      }\n\n      if (canBeSet) {\n        this.alignmentStyle = alignment;\n      }\n    }\n  };\n  /**\n   * Draws the template.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.draw = function (layer, document) {\n    var page = layer.page;\n    var bounds = this.calculateBounds(page, document);\n\n    if (bounds.x === -0) {\n      bounds.x = 0;\n    }\n\n    layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n  };\n  /**\n   * Calculates bounds of the page template.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n    var result = this.bounds;\n\n    if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n      result = this.getAlignmentBounds(page, document);\n    } else if (this.dockStyle !== PdfDockStyle.None) {\n      result = this.getDockBounds(page, document);\n    }\n\n    return result;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n    var result = this.bounds;\n\n    if (this.type === TemplateType.None) {\n      result = this.getSimpleAlignmentBounds(page, document);\n    } else {\n      result = this.getTemplateAlignmentBounds(page, document);\n    }\n\n    return result;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n    var bounds = this.bounds;\n    var pdfSection = page.section;\n    var actualBounds = pdfSection.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n\n    switch (this.alignmentStyle) {\n      case PdfAlignmentStyle.TopLeft:\n        x = 0;\n        y = 0;\n        break;\n\n      case PdfAlignmentStyle.TopCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = 0;\n        break;\n\n      case PdfAlignmentStyle.TopRight:\n        x = actualBounds.width - this.width;\n        y = 0;\n        break;\n\n      case PdfAlignmentStyle.MiddleLeft:\n        x = 0;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.MiddleCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.MiddleRight:\n        x = actualBounds.width - this.width;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.BottomLeft:\n        x = 0;\n        y = actualBounds.height - this.height;\n        break;\n\n      case PdfAlignmentStyle.BottomCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = actualBounds.height - this.height;\n        break;\n\n      case PdfAlignmentStyle.BottomRight:\n        x = actualBounds.width - this.width;\n        y = actualBounds.height - this.height;\n        break;\n    }\n\n    bounds.x = x;\n    bounds.y = y;\n    return bounds;\n  };\n  /**\n   * Calculates bounds according to the alignment.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n\n    switch (this.alignmentStyle) {\n      case PdfAlignmentStyle.TopLeft:\n        if (this.type === TemplateType.Left) {\n          x = -actualBounds.x;\n          y = 0;\n        } else if (this.type === TemplateType.Top) {\n          x = -actualBounds.x;\n          y = -actualBounds.y;\n        }\n\n        break;\n\n      case PdfAlignmentStyle.TopCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = -actualBounds.y;\n        break;\n\n      case PdfAlignmentStyle.TopRight:\n        if (this.type === TemplateType.Right) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = 0;\n        } else if (this.type === TemplateType.Top) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = -actualBounds.y;\n        }\n\n        break;\n\n      case PdfAlignmentStyle.MiddleLeft:\n        x = -actualBounds.x;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.MiddleCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.MiddleRight:\n        x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n        y = (actualBounds.height - this.height) / 2;\n        break;\n\n      case PdfAlignmentStyle.BottomLeft:\n        if (this.type === TemplateType.Left) {\n          x = -actualBounds.x;\n          y = actualBounds.height - this.height;\n        } else if (this.type === TemplateType.Bottom) {\n          x = -actualBounds.x;\n          y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        }\n\n        break;\n\n      case PdfAlignmentStyle.BottomCenter:\n        x = (actualBounds.width - this.width) / 2;\n        y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        break;\n\n      case PdfAlignmentStyle.BottomRight:\n        if (this.type === TemplateType.Right) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = actualBounds.height - this.height;\n        } else if (this.type === TemplateType.Bottom) {\n          x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n          y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        }\n\n        break;\n    }\n\n    result.x = x;\n    result.y = y;\n    return result;\n  };\n  /**\n   * Calculates bounds according to the docking.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n    var result = this.bounds;\n\n    if (this.type === TemplateType.None) {\n      result = this.getSimpleDockBounds(page, document);\n    } else {\n      result = this.getTemplateDockBounds(page, document);\n    }\n\n    return result;\n  };\n  /**\n   * Calculates bounds according to the docking.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n\n    switch (this.dockStyle) {\n      case PdfDockStyle.Left:\n        x = 0;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n\n      case PdfDockStyle.Top:\n        x = 0;\n        y = 0;\n        width = actualBounds.width;\n        height = this.height;\n        break;\n\n      case PdfDockStyle.Right:\n        x = actualBounds.width - this.width;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n\n      case PdfDockStyle.Bottom:\n        x = 0;\n        y = actualBounds.height - this.height;\n        width = actualBounds.width;\n        height = this.height;\n        break;\n\n      case PdfDockStyle.Fill:\n        x = 0;\n        x = 0;\n        width = actualBounds.width;\n        height = actualBounds.height;\n        break;\n    }\n\n    result = new RectangleF(x, y, width, height);\n    return result;\n  };\n  /**\n   * Calculates template bounds basing on docking if template is a page template.\n   * @private\n   */\n\n\n  PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n    var result = this.bounds;\n    var section = page.section;\n    var actualBounds = section.getActualBounds(document, page, false);\n    var actualSize = section.pageSettings.getActualSize();\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n\n    switch (this.dockStyle) {\n      case PdfDockStyle.Left:\n        x = -actualBounds.x;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n\n      case PdfDockStyle.Top:\n        x = -actualBounds.x;\n        y = -actualBounds.y;\n        width = actualSize.width;\n        height = this.height;\n\n        if (actualBounds.height < 0) {\n          y = -actualBounds.y + actualSize.height;\n        }\n\n        break;\n\n      case PdfDockStyle.Right:\n        x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n        y = 0;\n        width = this.width;\n        height = actualBounds.height;\n        break;\n\n      case PdfDockStyle.Bottom:\n        x = -actualBounds.x;\n        y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n        width = actualSize.width;\n        height = this.height;\n\n        if (actualBounds.height < 0) {\n          y -= actualSize.height;\n        }\n\n        break;\n\n      case PdfDockStyle.Fill:\n        x = 0;\n        x = 0;\n        width = actualBounds.width;\n        height = actualBounds.height;\n        break;\n    }\n\n    result = new RectangleF(x, y, width, height);\n    return result;\n  };\n\n  return PdfPageTemplateElement;\n}();\n\nexport { PdfPageTemplateElement };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js"],"names":["PdfDockStyle","PdfAlignmentStyle","TemplateType","PointF","SizeF","PdfTemplate","PdfPage","RectangleF","PdfPageTemplateElement","arg1","arg2","arg3","arg4","arg5","InitiateBounds","x","y","width","height","Object","defineProperty","prototype","get","dockStyle","set","value","resetAlignment","enumerable","configurable","alignmentStyle","setAlignment","isForeground","currentLocation","type","None","template","size","reset","graphics","pdfTemplate","templateType","updateDocking","location","Top","dock","Bottom","Left","Right","alignment","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","Fill","MiddleCenter","draw","layer","document","page","bounds","calculateBounds","drawPdfTemplate","result","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","pdfSection","section","actualBounds","getActualBounds","getRightIndentWidth","getBottomIndentHeight","getSimpleDockBounds","getTemplateDockBounds","actualSize","pageSettings","getActualSize"],"mappings":"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","sourcesContent":["/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"]},"metadata":{},"sourceType":"module"}