{"ast":null,"code":"import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\n\nvar InsertHtml =\n/** @class */\nfunction () {\n  function InsertHtml() {}\n\n  InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n    var node;\n\n    if (typeof insertNode === 'string') {\n      var divNode = document.createElement('div');\n      divNode.innerHTML = insertNode;\n      node = isExternal ? divNode : divNode.firstChild;\n    } else {\n      if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) && insertNode.classList.contains('pasteContent'))) {\n        var divNode = document.createElement('div');\n        divNode.appendChild(insertNode);\n        node = divNode;\n      } else {\n        node = insertNode;\n      }\n    }\n\n    var nodeSelection = new NodeSelection();\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n      nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n\n    var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 && range.startContainer === range.endContainer;\n    var isCollapsed = range.collapsed;\n    var nodes = this.getNodeCollection(range, nodeSelection, node);\n    var closestParentNode = node.nodeName.toLowerCase() === 'table' ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n\n    if (isExternal || !isNOU(node) && !isNOU(node.classList) && node.classList.contains('pasteContent')) {\n      this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n      return;\n    }\n\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      var sibNode = preNode.previousSibling;\n      var parentNode = preNode.parentNode;\n\n      if (nodes.length === 1 || node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n\n      range.extractContents();\n\n      if (insertNode.tagName === 'TABLE') {\n        this.removeEmptyElements(editNode);\n      }\n\n      for (var index = 0; index < nodes.length; index++) {\n        if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n          if (nodes[index].nodeName === 'IMG') {\n            continue;\n          }\n\n          nodes[index].parentNode.removeChild(nodes[index]);\n        }\n      }\n\n      if (sibNode) {\n        InsertMethods.AppendBefore(node, sibNode, true);\n      } else {\n        var previousNode = null;\n\n        while (parentNode !== editNode && parentNode.firstChild && parentNode.textContent.trim() === '') {\n          var parentNode1 = parentNode.parentNode;\n          previousNode = parentNode;\n          parentNode = parentNode1;\n        }\n\n        if (previousNode !== null) {\n          parentNode = previousNode;\n        }\n\n        if (parentNode.firstChild && (parentNode !== editNode || node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer && parentNode === range.endContainer)) {\n          if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n            InsertMethods.AppendBefore(node, parentNode, false);\n            detach(parentNode);\n          } else {\n            InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n          }\n        } else {\n          parentNode.appendChild(node);\n        }\n      }\n\n      if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n      }\n    } else {\n      range.deleteContents();\n\n      if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n        range.startContainer.innerHTML = '';\n      }\n\n      if (Browser.isIE) {\n        var frag = docElement.createDocumentFragment();\n        frag.appendChild(node);\n        range.insertNode(frag);\n      } else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr' && range.endContainer.nodeName.toLowerCase() === 'hr') {\n        var paraElem = range.startContainer.nextElementSibling;\n\n        if (paraElem) {\n          if (paraElem.querySelector('br')) {\n            detach(paraElem.querySelector('br'));\n          }\n\n          paraElem.appendChild(node);\n        }\n      } else {\n        if (range.startContainer.nodeName === 'BR') {\n          range.startContainer.parentElement.insertBefore(node, range.startContainer);\n        } else {\n          range.insertNode(node);\n        }\n      }\n\n      if (node.nodeType !== 3 && node.childNodes.length > 0) {\n        nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n      } else if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionContents(docElement, node);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n      }\n    }\n  };\n\n  InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n    var isCursor = range.startOffset === range.endOffset && range.startContainer === range.endContainer;\n\n    if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n      var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n\n    var lasNode;\n    var sibNode;\n    var isSingleNode;\n    var preNode;\n\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = true;\n      } else {\n        lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = false;\n      }\n    }\n\n    var containsBlockNode = false;\n    this.removingComments(node);\n    var allChildNodes = node.childNodes;\n\n    for (var i = 0; i < allChildNodes.length; i++) {\n      if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n        containsBlockNode = true;\n        break;\n      }\n    }\n\n    var lastSelectionNode;\n    var fragment = document.createDocumentFragment();\n\n    if (!containsBlockNode) {\n      if (!isCursor) {\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n\n        if (isSingleNode) {\n          preNode.parentNode.replaceChild(fragment, preNode);\n        } else {\n          range.deleteContents();\n          detach(lasNode); // eslint-disable-next-line\n\n          !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n        }\n      } else {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n\n        if (range.startContainer.nodeType === 3 && nearestAnchor) {\n          var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n\n          if (immediateBlockNode.querySelectorAll('br').length > 0) {\n            detach(immediateBlockNode.querySelector('br'));\n          }\n\n          var rangeElement = closest(nearestAnchor, 'span');\n          rangeElement.appendChild(tempSpan);\n        } else {\n          range.insertNode(tempSpan);\n        }\n\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n\n        tempSpan.parentNode.replaceChild(fragment, tempSpan);\n      }\n    } else {\n      this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n      var isFirstTextNode = true;\n      var isPreviousInlineElem = void 0;\n      var paraElm = void 0;\n      var previousParent = void 0;\n      range.deleteContents();\n\n      while (node.firstChild) {\n        if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n          detach(node.firstChild);\n          continue;\n        }\n\n        if (node.firstChild.nodeName === '#text' && isFirstTextNode || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode) {\n          lastSelectionNode = node.firstChild;\n\n          if (isNOU(node.previousElementSibling)) {\n            var firstParaElm = createElement('p');\n            node.parentElement.insertBefore(firstParaElm, node);\n          }\n\n          node.previousElementSibling.appendChild(node.firstChild);\n        } else {\n          lastSelectionNode = node.firstChild;\n\n          if (node.firstChild.nodeName === '#text' || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0) {\n            if (!isPreviousInlineElem) {\n              paraElm = createElement('p');\n              paraElm.appendChild(node.firstChild);\n              fragment.appendChild(paraElm);\n            } else {\n              previousParent.appendChild(node.firstChild);\n              fragment.appendChild(previousParent);\n            }\n\n            previousParent = paraElm;\n            isPreviousInlineElem = true;\n          } else {\n            fragment.appendChild(node.firstChild);\n            isPreviousInlineElem = false;\n          }\n\n          isFirstTextNode = false;\n        }\n      }\n\n      node.parentNode.replaceChild(fragment, node);\n    }\n\n    if (lastSelectionNode.nodeName === '#text') {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    } else {\n      this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    }\n  };\n\n  InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode : lastSelectionNode.previousSibling : lastSelectionNode;\n\n    while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' && lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n      lastSelectionNode = lastSelectionNode.lastChild;\n    }\n\n    lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n\n    if (lastSelectionNode.nodeName === 'IMG') {\n      this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n    } else {\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n    }\n\n    this.removeEmptyElements(editNode);\n  };\n\n  InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n    var nodes = [];\n\n    if (range.startOffset === range.endOffset && range.startContainer === range.endContainer && range.startContainer.nodeName != 'BR' && (range.startContainer.nodeName === 'TD' || range.startContainer.nodeType !== 3 && node.classList && node.classList.contains('pasteContent'))) {\n      nodes.push(range.startContainer.childNodes[range.endOffset]);\n    } else {\n      nodes = nodeSelection.getInsertNodeCollection(range);\n    }\n\n    return nodes;\n  };\n\n  InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n    if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) && range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n      if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n      }\n    } else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) && range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n      range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n    } else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3 && node.firstChild.nodeName === 'HR') {\n      if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.parentNode.insertBefore(node, range.startContainer);\n      }\n    } else {\n      var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n\n      if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n        blockNode = range.endContainer;\n        range.setEnd(blockNode, range.endContainer.textContent.length);\n      }\n\n      if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n        blockNode = range.startContainer;\n      }\n\n      if (blockNode.closest('LI') && node && node.firstElementChild && (node.firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n        var liNode = void 0;\n\n        while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n          liNode = node.firstElementChild.lastElementChild;\n          liNode.style.removeProperty('margin-left');\n          liNode.style.removeProperty('margin-top');\n          liNode.style.removeProperty('margin-bottom');\n          node.firstElementChild.insertAdjacentElement('afterend', liNode);\n        }\n      }\n\n      if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        range.insertNode(tempSpan);\n        tempSpan.parentNode.replaceChild(node, tempSpan);\n      } else {\n        var currentNode = nodes[nodes.length - 1];\n        var splitedElm = void 0;\n\n        if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR') && !isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0 && !node.classList.contains('pasteContent')) {\n          splitedElm = currentNode;\n        } else {\n          splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n        }\n\n        splitedElm.parentNode.replaceChild(node, splitedElm);\n      }\n    }\n  };\n\n  InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode.classList.add('lastNode');\n    editNode.innerHTML = updateTextNode(editNode.innerHTML);\n    lastSelectionNode = editNode.querySelector('.lastNode');\n\n    if (!isNOU(lastSelectionNode)) {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n      lastSelectionNode.classList.remove('lastNode');\n\n      if (lastSelectionNode.classList.length === 0) {\n        lastSelectionNode.removeAttribute('class');\n      }\n    }\n  };\n\n  InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n    var focusNode = document.createTextNode(' ');\n    node.parentNode.insertBefore(focusNode, node.nextSibling);\n    nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n  }; // eslint-disable-next-line\n\n\n  InsertHtml.getImmediateBlockNode = function (node, editNode) {\n    do {\n      node = node.parentNode;\n    } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n\n    return node;\n  };\n\n  InsertHtml.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n\n  InsertHtml.findDetachEmptyElem = function (element) {\n    var removableElement;\n\n    if (!isNOU(element.parentElement)) {\n      if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n\n    return removableElement;\n  };\n\n  InsertHtml.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' && emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' && emptyElements[i].tagName !== 'SOURCE' && emptyElements[i].tagName !== 'HR') {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n\n  InsertHtml.closestEle = function (element, editNode) {\n    var el = element;\n\n    while (el && el.nodeType === 1) {\n      if (el.parentNode === editNode || !isNOU(el.parentNode.tagName) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1) {\n        return el;\n      }\n\n      el = el.parentNode;\n    }\n\n    return null;\n  };\n  /**\n   * Insert method\n   *\n   * @hidden\n    */\n\n\n  InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n  return InsertHtml;\n}();\n\nexport { InsertHtml };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-richtexteditor/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/inserthtml.js"],"names":["NodeSelection","NodeCutter","CONSTANT","detach","Browser","isNullOrUndefined","isNOU","createElement","closest","InsertMethods","updateTextNode","InsertHtml","Insert","docElement","insertNode","editNode","isExternal","node","divNode","document","innerHTML","firstChild","classList","contains","appendChild","nodeSelection","nodeCutter","range","getRange","startContainer","endContainer","startOffset","endOffset","textContent","length","children","tagName","setSelectionText","isCursor","isCollapsed","collapsed","nodes","getNodeCollection","closestParentNode","nodeName","toLowerCase","closestEle","parentNode","pasteInsertHTML","nodeType","Node","ELEMENT_NODE","TABLE_BLOCK_TAGS","indexOf","toLocaleLowerCase","preNode","GetSpliceNode","sibNode","previousSibling","childElementCount","setSelectionContents","lasNode","parentElement","childNodes","extractContents","removeEmptyElements","index","removeChild","AppendBefore","previousNode","trim","parentNode1","imageFocus","deleteContents","isIE","frag","createDocumentFragment","paraElem","nextElementSibling","querySelector","insertBefore","currentBlockNode","getImmediateBlockNode","isSingleNode","containsBlockNode","removingComments","allChildNodes","i","BLOCK_TAGS","lastSelectionNode","fragment","replaceChild","tempSpan","className","nearestAnchor","immediateBlockNode","querySelectorAll","rangeElement","insertTempNode","isFirstTextNode","isPreviousInlineElem","paraElm","previousParent","inlineNode","previousElementSibling","firstParaElm","placeCursorEnd","cursorPos","lastChild","push","getInsertNodeCollection","nextSibling","blockNode","setEnd","firstElementChild","liNode","lastElementChild","style","removeProperty","insertAdjacentElement","currentNode","splitedElm","add","remove","removeAttribute","focusNode","createTextNode","elm","innerElement","replace","findDetachEmptyElem","element","removableElement","contentEditable","emptyElements","detachableElement","el","IGNORE_BLOCK_TAGS"],"mappings":"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","sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */ (function () {\n    function InsertHtml() {\n    }\n    InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n        var node;\n        if (typeof insertNode === 'string') {\n            var divNode = document.createElement('div');\n            divNode.innerHTML = insertNode;\n            node = isExternal ? divNode : divNode.firstChild;\n        }\n        else {\n            if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) &&\n                insertNode.classList.contains('pasteContent'))) {\n                var divNode = document.createElement('div');\n                divNode.appendChild(insertNode);\n                node = divNode;\n            }\n            else {\n                node = insertNode;\n            }\n        }\n        var nodeSelection = new NodeSelection();\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n            nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 &&\n            range.startContainer === range.endContainer;\n        var isCollapsed = range.collapsed;\n        var nodes = this.getNodeCollection(range, nodeSelection, node);\n        var closestParentNode = (node.nodeName.toLowerCase() === 'table') ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n        if (isExternal || (!isNOU(node) && !isNOU(node.classList) &&\n            node.classList.contains('pasteContent'))) {\n            this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n            return;\n        }\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            var sibNode = preNode.previousSibling;\n            var parentNode = preNode.parentNode;\n            if (nodes.length === 1 || (node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0)) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            range.extractContents();\n            if (insertNode.tagName === 'TABLE') {\n                this.removeEmptyElements(editNode);\n            }\n            for (var index = 0; index < nodes.length; index++) {\n                if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n                    if (nodes[index].nodeName === 'IMG') {\n                        continue;\n                    }\n                    nodes[index].parentNode.removeChild(nodes[index]);\n                }\n            }\n            if (sibNode) {\n                InsertMethods.AppendBefore(node, sibNode, true);\n            }\n            else {\n                var previousNode = null;\n                while (parentNode !== editNode && parentNode.firstChild &&\n                    (parentNode.textContent.trim() === '')) {\n                    var parentNode1 = parentNode.parentNode;\n                    previousNode = parentNode;\n                    parentNode = parentNode1;\n                }\n                if (previousNode !== null) {\n                    parentNode = previousNode;\n                }\n                if (parentNode.firstChild && (parentNode !== editNode ||\n                    (node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer &&\n                        parentNode === range.endContainer))) {\n                    if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n                        InsertMethods.AppendBefore(node, parentNode, false);\n                        detach(parentNode);\n                    }\n                    else {\n                        InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n                    }\n                }\n                else {\n                    parentNode.appendChild(node);\n                }\n            }\n            if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n            }\n        }\n        else {\n            range.deleteContents();\n            if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n                range.startContainer.innerHTML = '';\n            }\n            if (Browser.isIE) {\n                var frag = docElement.createDocumentFragment();\n                frag.appendChild(node);\n                range.insertNode(frag);\n            }\n            else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr'\n                && range.endContainer.nodeName.toLowerCase() === 'hr') {\n                var paraElem = range.startContainer.nextElementSibling;\n                if (paraElem) {\n                    if (paraElem.querySelector('br')) {\n                        detach(paraElem.querySelector('br'));\n                    }\n                    paraElem.appendChild(node);\n                }\n            }\n            else {\n                if (range.startContainer.nodeName === 'BR') {\n                    range.startContainer.parentElement.insertBefore(node, range.startContainer);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            if (node.nodeType !== 3 && node.childNodes.length > 0) {\n                nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n            }\n            else if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionContents(docElement, node);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n            }\n        }\n    };\n    InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n        var isCursor = range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer;\n        if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n            var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var lasNode;\n        var sibNode;\n        var isSingleNode;\n        var preNode;\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = true;\n            }\n            else {\n                lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = false;\n            }\n        }\n        var containsBlockNode = false;\n        this.removingComments(node);\n        var allChildNodes = node.childNodes;\n        for (var i = 0; i < allChildNodes.length; i++) {\n            if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n                containsBlockNode = true;\n                break;\n            }\n        }\n        var lastSelectionNode;\n        var fragment = document.createDocumentFragment();\n        if (!containsBlockNode) {\n            if (!isCursor) {\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                if (isSingleNode) {\n                    preNode.parentNode.replaceChild(fragment, preNode);\n                }\n                else {\n                    range.deleteContents();\n                    detach(lasNode);\n                    // eslint-disable-next-line\n                    !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n                }\n            }\n            else {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n                if (range.startContainer.nodeType === 3 && nearestAnchor) {\n                    var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n                    if (immediateBlockNode.querySelectorAll('br').length > 0) {\n                        detach(immediateBlockNode.querySelector('br'));\n                    }\n                    var rangeElement = closest(nearestAnchor, 'span');\n                    rangeElement.appendChild(tempSpan);\n                }\n                else {\n                    range.insertNode(tempSpan);\n                }\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                tempSpan.parentNode.replaceChild(fragment, tempSpan);\n            }\n        }\n        else {\n            this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n            var isFirstTextNode = true;\n            var isPreviousInlineElem = void 0;\n            var paraElm = void 0;\n            var previousParent = void 0;\n            range.deleteContents();\n            while (node.firstChild) {\n                if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n                    detach(node.firstChild);\n                    continue;\n                }\n                if (node.firstChild.nodeName === '#text' && isFirstTextNode ||\n                    (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode)) {\n                    lastSelectionNode = node.firstChild;\n                    if (isNOU(node.previousElementSibling)) {\n                        var firstParaElm = createElement('p');\n                        node.parentElement.insertBefore(firstParaElm, node);\n                    }\n                    node.previousElementSibling.appendChild(node.firstChild);\n                }\n                else {\n                    lastSelectionNode = node.firstChild;\n                    if (node.firstChild.nodeName === '#text' ||\n                        (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                        if (!isPreviousInlineElem) {\n                            paraElm = createElement('p');\n                            paraElm.appendChild(node.firstChild);\n                            fragment.appendChild(paraElm);\n                        }\n                        else {\n                            previousParent.appendChild(node.firstChild);\n                            fragment.appendChild(previousParent);\n                        }\n                        previousParent = paraElm;\n                        isPreviousInlineElem = true;\n                    }\n                    else {\n                        fragment.appendChild(node.firstChild);\n                        isPreviousInlineElem = false;\n                    }\n                    isFirstTextNode = false;\n                }\n            }\n            node.parentNode.replaceChild(fragment, node);\n        }\n        if (lastSelectionNode.nodeName === '#text') {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n        else {\n            this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n    };\n    InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? (isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode\n            : lastSelectionNode.previousSibling) : lastSelectionNode;\n        while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' &&\n            lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n            lastSelectionNode = lastSelectionNode.lastChild;\n        }\n        lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n        if (lastSelectionNode.nodeName === 'IMG') {\n            this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n        }\n        else {\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n        }\n        this.removeEmptyElements(editNode);\n    };\n    InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n        var nodes = [];\n        if (range.startOffset === range.endOffset && range.startContainer === range.endContainer &&\n            range.startContainer.nodeName != 'BR' &&\n            (range.startContainer.nodeName === 'TD' || (range.startContainer.nodeType !== 3 &&\n                node.classList && node.classList.contains('pasteContent')))) {\n            nodes.push(range.startContainer.childNodes[range.endOffset]);\n        }\n        else {\n            nodes = nodeSelection.getInsertNodeCollection(range);\n        }\n        return nodes;\n    };\n    InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n        if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) &&\n            range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n            if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n            }\n        }\n        else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) &&\n            range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n            range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n        }\n        else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3\n            && node.firstChild.nodeName === 'HR') {\n            if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.parentNode.insertBefore(node, range.startContainer);\n            }\n        }\n        else {\n            var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n                blockNode = range.endContainer;\n                range.setEnd(blockNode, range.endContainer.textContent.length);\n            }\n            if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n                blockNode = range.startContainer;\n            }\n            if (blockNode.closest('LI') && node && node.firstElementChild &&\n                ((node).firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n                var liNode = void 0;\n                while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n                    liNode = node.firstElementChild.lastElementChild;\n                    liNode.style.removeProperty('margin-left');\n                    liNode.style.removeProperty('margin-top');\n                    liNode.style.removeProperty('margin-bottom');\n                    node.firstElementChild.insertAdjacentElement('afterend', liNode);\n                }\n            }\n            if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                range.insertNode(tempSpan);\n                tempSpan.parentNode.replaceChild(node, tempSpan);\n            }\n            else {\n                var currentNode = nodes[nodes.length - 1];\n                var splitedElm = void 0;\n                if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR') && !isNOU(currentNode.parentElement) &&\n                    currentNode.parentElement.textContent.trim().length === 0 && !node.classList.contains('pasteContent')) {\n                    splitedElm = currentNode;\n                }\n                else {\n                    splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n                }\n                splitedElm.parentNode.replaceChild(node, splitedElm);\n            }\n        }\n    };\n    InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode.classList.add('lastNode');\n        editNode.innerHTML = updateTextNode(editNode.innerHTML);\n        lastSelectionNode = editNode.querySelector('.lastNode');\n        if (!isNOU(lastSelectionNode)) {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n            lastSelectionNode.classList.remove('lastNode');\n            if (lastSelectionNode.classList.length === 0) {\n                lastSelectionNode.removeAttribute('class');\n            }\n        }\n    };\n    InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n        var focusNode = document.createTextNode(' ');\n        node.parentNode.insertBefore(focusNode, node.nextSibling);\n        nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n    };\n    // eslint-disable-next-line\n    InsertHtml.getImmediateBlockNode = function (node, editNode) {\n        do {\n            node = node.parentNode;\n        } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n        return node;\n    };\n    InsertHtml.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    InsertHtml.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    InsertHtml.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' &&\n                emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' &&\n                emptyElements[i].tagName !== 'SOURCE' && emptyElements[i].tagName !== 'HR') {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    InsertHtml.closestEle = function (element, editNode) {\n        var el = element;\n        while (el && el.nodeType === 1) {\n            if (el.parentNode === editNode ||\n                (!isNOU(el.parentNode.tagName) &&\n                    CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1)) {\n                return el;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Insert method\n     *\n     * @hidden\n\n     */\n    InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n        'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n        'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n        'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg',\n        'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n    return InsertHtml;\n}());\nexport { InsertHtml };\n"]},"metadata":{},"sourceType":"module"}