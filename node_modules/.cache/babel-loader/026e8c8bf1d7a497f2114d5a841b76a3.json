{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\n\nvar MacdIndicator =\n/** @class */\nfunction (_super) {\n  __extends(MacdIndicator, _super);\n\n  function MacdIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series to represent the MACD indicator\n   *\n   * @private\n   */\n\n\n  MacdIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n\n    if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n      var macdSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n    }\n\n    if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n      var histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n      histogramSeries.type = 'Column';\n      this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions using MACD approach\n   *\n   * @private\n   */\n\n\n  MacdIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var fastPeriod = indicator.fastPeriod;\n    var slowPeriod = indicator.slowPeriod;\n    var trigger = indicator.period;\n    var length = fastPeriod + trigger;\n    var macdCollection = [];\n    var histogramCollection = [];\n    var validData = indicator.points;\n    var signalSeries = indicator.targetSeries[0];\n    var histogramSeries;\n    var macdLineSeries;\n\n    if (indicator.macdType === 'Histogram') {\n      histogramSeries = indicator.targetSeries[1];\n    } else {\n      macdLineSeries = indicator.targetSeries[1];\n\n      if (indicator.macdType === 'Both') {\n        histogramSeries = indicator.targetSeries[2];\n      }\n    }\n\n    if (validData && length < validData.length && slowPeriod <= fastPeriod && slowPeriod > 0 && length - 2 >= 0) {\n      var shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n      var longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n      var macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n      macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n      var signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n      signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n\n      if (histogramSeries) {\n        histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n      }\n    }\n\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n\n    if (histogramSeries) {\n      this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n    }\n\n    if (macdLineSeries) {\n      this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n    }\n  };\n  /**\n   * Calculates the EMA values for the given period\n   */\n\n\n  MacdIndicator.prototype.calculateEMAValues = function (period, validData, field) {\n    var sum = 0;\n    var initialEMA = 0;\n    var emaValues = [];\n    var emaPercent = 2 / (period + 1);\n\n    for (var i = 0; i < period; i++) {\n      sum += Number(validData[i][field]);\n    }\n\n    initialEMA = sum / period;\n    emaValues.push(initialEMA);\n    var emaAvg = initialEMA;\n\n    for (var j = period; j < validData.length; j++) {\n      emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n      emaValues.push(emaAvg);\n    }\n\n    return emaValues;\n  };\n  /**\n   * Defines the MACD Points\n   */\n\n\n  MacdIndicator.prototype.getMACDPoints = function (indicator, macdPoints, validData, series) {\n    var macdCollection = [];\n    var dataMACDIndex = indicator.fastPeriod - 1;\n    var macdIndex = 0;\n\n    while (dataMACDIndex < validData.length) {\n      macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n      dataMACDIndex++;\n      macdIndex++;\n    }\n\n    return macdCollection;\n  };\n  /**\n   * Calculates the signal points\n   */\n\n\n  MacdIndicator.prototype.getSignalPoints = function (indicator, signalEma, validData, series) {\n    var dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n    var signalIndex = 0;\n    var signalCollection = [];\n\n    while (dataSignalIndex < validData.length) {\n      signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n      dataSignalIndex++;\n      signalIndex++;\n    }\n\n    return signalCollection;\n  };\n  /**\n   * Calculates the MACD values\n   */\n\n\n  MacdIndicator.prototype.getMACDVales = function (indicator, shortEma, longEma) {\n    var macdPoints = [];\n    var diff = indicator.fastPeriod - indicator.slowPeriod;\n\n    for (var i = 0; i < longEma.length; i++) {\n      macdPoints.push(shortEma[i + diff] - longEma[i]);\n    }\n\n    return macdPoints;\n  };\n  /**\n   * Calculates the Histogram Points\n   */\n\n\n  MacdIndicator.prototype.getHistogramPoints = function (indicator, macdPoints, signalEma, validData, series) {\n    var dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n    var histogramIndex = 0;\n    var histogramCollection = [];\n\n    while (dataHistogramIndex < validData.length) {\n      histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n      dataHistogramIndex++;\n      histogramIndex++;\n    }\n\n    return histogramCollection;\n  };\n  /**\n   * To destroy the MACD Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  MacdIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the MACD indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  MacdIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'MacdIndicator';\n  };\n\n  return MacdIndicator;\n}(TechnicalAnalysis);\n\nexport { MacdIndicator };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/macd-indicator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","MacdIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","macdType","macdSeries","setSeriesProperties","macdLine","color","width","histogramSeries","type","macdPositiveColor","initDataSource","signalCollection","fastPeriod","slowPeriod","trigger","period","length","macdCollection","histogramCollection","validData","points","signalSeries","targetSeries","macdLineSeries","shortEMA","calculateEMAValues","longEMA","macdValues","getMACDVales","getMACDPoints","signalEMA","getSignalPoints","getHistogramPoints","setSeriesRange","field","sum","initialEMA","emaValues","emaPercent","i","Number","push","emaAvg","j","macdPoints","series","dataMACDIndex","macdIndex","getDataPoint","x","signalEma","dataSignalIndex","signalIndex","shortEma","longEma","diff","dataHistogramIndex","histogramIndex","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\nvar MacdIndicator = /** @class */ (function (_super) {\n    __extends(MacdIndicator, _super);\n    function MacdIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series to represent the MACD indicator\n     *\n     * @private\n     */\n    MacdIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n            var macdSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n        }\n        if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n            var histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n            histogramSeries.type = 'Column';\n            this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions using MACD approach\n     *\n     * @private\n     */\n    MacdIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var fastPeriod = indicator.fastPeriod;\n        var slowPeriod = indicator.slowPeriod;\n        var trigger = indicator.period;\n        var length = fastPeriod + trigger;\n        var macdCollection = [];\n        var histogramCollection = [];\n        var validData = indicator.points;\n        var signalSeries = indicator.targetSeries[0];\n        var histogramSeries;\n        var macdLineSeries;\n        if (indicator.macdType === 'Histogram') {\n            histogramSeries = indicator.targetSeries[1];\n        }\n        else {\n            macdLineSeries = indicator.targetSeries[1];\n            if (indicator.macdType === 'Both') {\n                histogramSeries = indicator.targetSeries[2];\n            }\n        }\n        if (validData && length < validData.length && slowPeriod <= fastPeriod &&\n            slowPeriod > 0 && (length - 2) >= 0) {\n            var shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n            var longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n            var macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n            macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n            var signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n            signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n            if (histogramSeries) {\n                histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (histogramSeries) {\n            this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n        }\n        if (macdLineSeries) {\n            this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n        }\n    };\n    /**\n     * Calculates the EMA values for the given period\n     */\n    MacdIndicator.prototype.calculateEMAValues = function (period, validData, field) {\n        var sum = 0;\n        var initialEMA = 0;\n        var emaValues = [];\n        var emaPercent = (2 / (period + 1));\n        for (var i = 0; i < period; i++) {\n            sum += Number(validData[i][field]);\n        }\n        initialEMA = (sum / period);\n        emaValues.push(initialEMA);\n        var emaAvg = initialEMA;\n        for (var j = period; j < validData.length; j++) {\n            emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n            emaValues.push(emaAvg);\n        }\n        return emaValues;\n    };\n    /**\n     * Defines the MACD Points\n     */\n    MacdIndicator.prototype.getMACDPoints = function (indicator, macdPoints, validData, series) {\n        var macdCollection = [];\n        var dataMACDIndex = indicator.fastPeriod - 1;\n        var macdIndex = 0;\n        while (dataMACDIndex < validData.length) {\n            macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n            dataMACDIndex++;\n            macdIndex++;\n        }\n        return macdCollection;\n    };\n    /**\n     * Calculates the signal points\n     */\n    MacdIndicator.prototype.getSignalPoints = function (indicator, signalEma, validData, series) {\n        var dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n        var signalIndex = 0;\n        var signalCollection = [];\n        while (dataSignalIndex < validData.length) {\n            signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n            dataSignalIndex++;\n            signalIndex++;\n        }\n        return signalCollection;\n    };\n    /**\n     * Calculates the MACD values\n     */\n    MacdIndicator.prototype.getMACDVales = function (indicator, shortEma, longEma) {\n        var macdPoints = [];\n        var diff = indicator.fastPeriod - indicator.slowPeriod;\n        for (var i = 0; i < longEma.length; i++) {\n            macdPoints.push((shortEma[i + diff] - longEma[i]));\n        }\n        return macdPoints;\n    };\n    /**\n     * Calculates the Histogram Points\n     */\n    MacdIndicator.prototype.getHistogramPoints = function (indicator, macdPoints, signalEma, validData, series) {\n        var dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n        var histogramIndex = 0;\n        var histogramCollection = [];\n        while (dataHistogramIndex < validData.length) {\n            histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n            dataHistogramIndex++;\n            histogramIndex++;\n        }\n        return histogramCollection;\n    };\n    /**\n     * To destroy the MACD Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    MacdIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the MACD indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MacdIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MacdIndicator';\n    };\n    return MacdIndicator;\n}(TechnicalAnalysis));\nexport { MacdIndicator };\n"]},"metadata":{},"sourceType":"module"}