{"ast":null,"code":"/**\n * Template compiler for react\n */\nimport { setTemplateEngine, getTemplateEngine, detach, extend } from '@syncfusion/ej2-base';\nimport * as ReactDOM from 'react-dom';\nimport * as React from 'react'; // tslint:disable:no-any\n\nvar stringCompiler = getTemplateEngine();\nexport function compile(templateElement, helper) {\n  if (typeof templateElement === 'string') {\n    return stringCompiler(templateElement, helper);\n  } else {\n    return function (data, component, prop, element) {\n      var actTemplate = templateElement;\n      var actData = data;\n\n      if (typeof actTemplate === 'object') {\n        actTemplate = templateElement.template;\n        actData = extend({}, data, templateElement.data || {});\n      }\n\n      var cEle;\n\n      if (element) {\n        cEle = element;\n      } else {\n        cEle = document.createElement('div');\n      }\n\n      if (component && component.isLegacyTemplate) {\n        ReactDOM.render(actTemplate(actData), cEle);\n\n        if (!element) {\n          detach(cEle);\n        }\n      } else {\n        var rele = React.createElement(actTemplate, actData);\n        var portal = ReactDOM.createPortal(rele, cEle);\n        portal.propName = prop;\n\n        if (!component.portals) {\n          component.portals = [portal];\n        } else {\n          component.portals.push(portal);\n        }\n      }\n\n      if (!element) {\n        return [cEle];\n      }\n    };\n  }\n}\nsetTemplateEngine({\n  compile: compile\n});","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-popups/node_modules/@syncfusion/ej2-react-base/src/template.js"],"names":["setTemplateEngine","getTemplateEngine","detach","extend","ReactDOM","React","stringCompiler","compile","templateElement","helper","data","component","prop","element","actTemplate","actData","template","cEle","document","createElement","isLegacyTemplate","render","rele","portal","createPortal","propName","portals","push"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,MAA/C,EAAuDC,MAAvD,QAAqE,sBAArE;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,IAAIC,cAAc,GAAGL,iBAAiB,EAAtC;AACA,OAAO,SAASM,OAAT,CAAiBC,eAAjB,EAAkCC,MAAlC,EAA0C;AAC7C,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrC,WAAOF,cAAc,CAACE,eAAD,EAAkBC,MAAlB,CAArB;AACH,GAFD,MAGK;AACD,WAAO,UAAUC,IAAV,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AAC7C,UAAIC,WAAW,GAAGN,eAAlB;AACA,UAAIO,OAAO,GAAGL,IAAd;;AACA,UAAI,OAAOI,WAAP,KAAuB,QAA3B,EAAqC;AACjCA,QAAAA,WAAW,GAAGN,eAAe,CAACQ,QAA9B;AACAD,QAAAA,OAAO,GAAGZ,MAAM,CAAC,EAAD,EAAKO,IAAL,EAAWF,eAAe,CAACE,IAAhB,IAAwB,EAAnC,CAAhB;AACH;;AACD,UAAIO,IAAJ;;AACA,UAAIJ,OAAJ,EAAa;AACTI,QAAAA,IAAI,GAAGJ,OAAP;AACH,OAFD,MAGK;AACDI,QAAAA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAP;AACH;;AACD,UAAIR,SAAS,IAAIA,SAAS,CAACS,gBAA3B,EAA6C;AACzChB,QAAAA,QAAQ,CAACiB,MAAT,CAAgBP,WAAW,CAACC,OAAD,CAA3B,EAAsCE,IAAtC;;AACA,YAAI,CAACJ,OAAL,EAAc;AACVX,UAAAA,MAAM,CAACe,IAAD,CAAN;AACH;AACJ,OALD,MAMK;AACD,YAAIK,IAAI,GAAGjB,KAAK,CAACc,aAAN,CAAoBL,WAApB,EAAiCC,OAAjC,CAAX;AACA,YAAIQ,MAAM,GAAGnB,QAAQ,CAACoB,YAAT,CAAsBF,IAAtB,EAA4BL,IAA5B,CAAb;AACAM,QAAAA,MAAM,CAACE,QAAP,GAAkBb,IAAlB;;AACA,YAAI,CAACD,SAAS,CAACe,OAAf,EAAwB;AACpBf,UAAAA,SAAS,CAACe,OAAV,GAAoB,CAACH,MAAD,CAApB;AACH,SAFD,MAGK;AACDZ,UAAAA,SAAS,CAACe,OAAV,CAAkBC,IAAlB,CAAuBJ,MAAvB;AACH;AACJ;;AACD,UAAI,CAACV,OAAL,EAAc;AACV,eAAO,CAACI,IAAD,CAAP;AACH;AACJ,KAlCD;AAmCH;AACJ;AACDjB,iBAAiB,CAAC;AAAEO,EAAAA,OAAO,EAAEA;AAAX,CAAD,CAAjB","sourcesContent":["/**\n * Template compiler for react\n */\nimport { setTemplateEngine, getTemplateEngine, detach, extend } from '@syncfusion/ej2-base';\nimport * as ReactDOM from 'react-dom';\nimport * as React from 'react';\n// tslint:disable:no-any\nvar stringCompiler = getTemplateEngine();\nexport function compile(templateElement, helper) {\n    if (typeof templateElement === 'string') {\n        return stringCompiler(templateElement, helper);\n    }\n    else {\n        return function (data, component, prop, element) {\n            var actTemplate = templateElement;\n            var actData = data;\n            if (typeof actTemplate === 'object') {\n                actTemplate = templateElement.template;\n                actData = extend({}, data, templateElement.data || {});\n            }\n            var cEle;\n            if (element) {\n                cEle = element;\n            }\n            else {\n                cEle = document.createElement('div');\n            }\n            if (component && component.isLegacyTemplate) {\n                ReactDOM.render(actTemplate(actData), cEle);\n                if (!element) {\n                    detach(cEle);\n                }\n            }\n            else {\n                var rele = React.createElement(actTemplate, actData);\n                var portal = ReactDOM.createPortal(rele, cEle);\n                portal.propName = prop;\n                if (!component.portals) {\n                    component.portals = [portal];\n                }\n                else {\n                    component.portals.push(portal);\n                }\n            }\n            if (!element) {\n                return [cEle];\n            }\n        };\n    }\n}\nsetTemplateEngine({ compile: compile });\n"]},"metadata":{},"sourceType":"module"}