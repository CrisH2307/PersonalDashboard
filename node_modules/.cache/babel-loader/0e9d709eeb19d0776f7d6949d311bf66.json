{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable valid-jsdoc */\n\n/**\n * AccumulationChart Selection src file\n */\n\n\nimport { Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { indexFinder, getElement } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\nimport { Index } from '../../common/model/base';\nimport { BaseSelection } from '../../common/user-interaction/selection';\nimport { selectionComplete } from '../../common/model/constants';\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n */\n\nvar AccumulationSelection =\n/** @class */\nfunction (_super) {\n  __extends(AccumulationSelection, _super);\n\n  function AccumulationSelection(accumulation) {\n    var _this = _super.call(this, accumulation) || this;\n\n    _this.accumulation = accumulation;\n    _this.renderer = accumulation.renderer;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n  /**\n   * Binding events for selection module.\n   */\n\n\n  AccumulationSelection.prototype.addEventListener = function () {\n    if (this.accumulation.isDestroyed) {\n      return;\n    }\n\n    var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n    this.accumulation.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.accumulation.on('click', this.calculateSelectedElements, this);\n  };\n  /**\n   * UnBinding events for selection module.\n   */\n\n\n  AccumulationSelection.prototype.removeEventListener = function () {\n    if (this.accumulation.isDestroyed) {\n      return;\n    }\n\n    this.accumulation.off(Browser.touchMoveEvent, this.mouseMove);\n    this.accumulation.off('click', this.calculateSelectedElements);\n  };\n  /**\n   * To initialize the private variables\n   */\n\n\n  AccumulationSelection.prototype.initPrivateVariables = function (accumulation) {\n    this.styleId = accumulation.element.id + '_ej2_chart_selection';\n    this.unselected = accumulation.element.id + '_ej2_deselected';\n    this.selectedDataIndexes = [];\n    this.rectPoints = null;\n  };\n  /**\n   * Invoke selection for rendered chart.\n   *\n   * @param {AccumulationChart} accumulation Define the chart to invoke the selection.\n   * @returns {void}\n   */\n\n\n  AccumulationSelection.prototype.invokeSelection = function (accumulation) {\n    this.initPrivateVariables(accumulation);\n    this.series = extend({}, accumulation.visibleSeries, null, true);\n    this.seriesStyles();\n    this.currentMode = accumulation.selectionMode;\n    this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n  };\n  /**\n   * To get series selection style by series.\n   */\n\n\n  AccumulationSelection.prototype.generateStyle = function (series) {\n    return series.selectionStyle || this.styleId + '_series_' + series.index;\n  };\n  /**\n   * To get series selection style while hovering legend\n   */\n\n\n  AccumulationSelection.prototype.generateLegendClickStyle = function (series, event) {\n    if (event.type === 'mousemove') {\n      this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n    } else if (event.type === 'click') {\n      this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n    }\n\n    return series.selectionStyle || this.styleId + '_series_' + series.index;\n  };\n  /**\n   * To get elements by index, series\n   */\n\n\n  AccumulationSelection.prototype.findElements = function (accumulation, series, index) {\n    return [this.getElementByIndex(index)];\n  };\n  /**\n   * To get series point element by index\n   */\n\n\n  AccumulationSelection.prototype.getElementByIndex = function (index) {\n    var elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n    return document.getElementById(elementId);\n  };\n  /**\n  * To find the selected element.\n   * @return {void}\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.isAlreadySelected = function (event) {\n    if (event.type === 'mousemove') {\n      this.currentMode = this.accumulation.highlightMode;\n      this.highlightDataIndexes = [];\n      this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n    } else if (event.type === 'click') {\n      this.currentMode = this.accumulation.selectionMode;\n      this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n    }\n\n    if (this.accumulation.highlightMode !== 'None' && this.accumulation.selectionMode === 'None') {\n      if (event.type === 'click') {\n        return false;\n      }\n    }\n\n    var targetElement = event.target;\n\n    if (this.accumulation.highlightMode !== 'None' && this.previousSelectedElement && this.previousSelectedElement[0]) {\n      var parentNodeId = targetElement.parentNode.id;\n      var isValidElement = void 0;\n\n      if (targetElement.parentNode) {\n        isValidElement = parentNodeId.indexOf('SeriesGroup') > 0 || parentNodeId.indexOf('SymbolGroup') > 0 ? true : false;\n      }\n\n      for (var i = 0; i < this.previousSelectedElement.length; i++) {\n        if (this.previousSelectedElement[i].hasAttribute('class')) {\n          if (this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1 && (isValidElement || event.type === 'click')) {\n            this.previousSelectedElement[i].removeAttribute('class');\n            this.addOrRemoveIndex(this.highlightDataIndexes, indexFinder(this.previousSelectedElement[i].id));\n          } else if (!isValidElement && this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1) {\n            this.performSelection(indexFinder(this.previousSelectedElement[i].id), this.accumulation, this.previousSelectedElement[i]);\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n  /**\n   * To calculate selected elements on mouse click or touch\n   *\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.calculateSelectedElements = function (accumulation, event) {\n    if (isNullOrUndefined(event.target)) {\n      return;\n    }\n\n    var targetEle = event.target;\n\n    if (accumulation.highlightMode === 'None' && accumulation.selectionMode === 'None' || targetEle.id.indexOf(accumulation.element.id + '_') === -1) {\n      return;\n    }\n\n    if (event.type === 'mousemove') {\n      if (!isNullOrUndefined(targetEle.parentNode) && targetEle.parentNode.hasAttribute('class') && (targetEle.parentNode.getAttribute('class').indexOf('highlight') > 0 || targetEle.parentNode.getAttribute('class').indexOf('selection') > 0)) {\n        return;\n      }\n    }\n\n    if (targetEle.getAttribute('id').indexOf('_connector_') > -1) {\n      return;\n    } else {\n      this.isAlreadySelected(event);\n\n      if (targetEle.id.indexOf('_Series_') > -1 || targetEle.id.indexOf('_datalabel_') > -1) {\n        this.performSelection(indexFinder(targetEle.id), accumulation, event.target);\n      }\n    }\n  };\n  /**\n   * To perform the selection process based on index and element.\n   */\n\n\n  AccumulationSelection.prototype.performSelection = function (index, accumulation, element) {\n    element = element.id.indexOf('datalabel') > -1 ? accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point] : element;\n\n    switch (this.currentMode) {\n      case 'Point':\n        if (!isNaN(index.point)) {\n          this.selection(accumulation, index, [element]);\n          this.selectionComplete(accumulation, accumulation.series[0]);\n          this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        }\n\n        break;\n    }\n  };\n  /**\n   *  Method to get the selected data index\n   *\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.selectionComplete = function (accumulation, series) {\n    var pointIndex;\n    var selectedPointValues = [];\n\n    for (var i = 0; i < this.selectedDataIndexes.length; i++) {\n      pointIndex = this.selectedDataIndexes[i].point;\n\n      if (!isNaN(pointIndex)) {\n        selectedPointValues.push({\n          x: series.dataSource[pointIndex][series.xName],\n          y: series.points[pointIndex].y,\n          seriesIndex: this.selectedDataIndexes[i].series,\n          pointIndex: pointIndex\n        });\n      }\n    }\n\n    var args = {\n      name: selectionComplete,\n      selectedDataValues: selectedPointValues,\n      cancel: false\n    };\n    accumulation.trigger(selectionComplete, args);\n  };\n  /**\n   * To select the element by index. Adding or removing selection style class name.\n   */\n\n\n  AccumulationSelection.prototype.selection = function (accumulation, index, selectedElements) {\n    if (!accumulation.isMultiSelect && this.styleId.indexOf('highlight') === -1 && accumulation.selectionMode !== 'None') {\n      this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n    }\n\n    var className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n\n    if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n      this.removeStyles(selectedElements, index);\n\n      if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n        this.addOrRemoveIndex(this.highlightDataIndexes, index);\n      } else {\n        this.addOrRemoveIndex(this.selectedDataIndexes, index);\n      }\n\n      if (accumulation.enableBorderOnMouseMove) {\n        var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n\n        if (!isNullOrUndefined(borderElement)) {\n          this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n        }\n      }\n    } else {\n      this.previousSelectedElement = accumulation.highlightMode !== 'None' ? selectedElements : [];\n\n      if (className.indexOf('selection') < 0) {\n        this.applyStyles(selectedElements, index);\n      }\n\n      if (accumulation.enableBorderOnMouseMove) {\n        var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n\n        if (!isNullOrUndefined(borderElement)) {\n          this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n          this.addSvgClass(borderElement, selectedElements[0].getAttribute('class'));\n        }\n      }\n\n      if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n        this.addOrRemoveIndex(this.highlightDataIndexes, index, true);\n      } else {\n        this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n      }\n    }\n  };\n  /**\n   * To redraw the selection process on accumulation chart refresh.\n   *\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.redrawSelection = function (accumulation) {\n    var selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n    var highlightDataIndexes = extend([], this.highlightDataIndexes, null, true);\n\n    if (this.styleId.indexOf('highlight') > 0 && highlightDataIndexes.length > 0) {\n      this.removeSelectedElements(accumulation, this.highlightDataIndexes);\n      selectedDataIndexes = highlightDataIndexes;\n    } else {\n      this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n    }\n\n    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    this.selectDataIndex(selectedDataIndexes, accumulation);\n  };\n  /**\n   * To remove the selected elements style classes by indexes.\n   */\n\n\n  AccumulationSelection.prototype.removeSelectedElements = function (accumulation, indexes) {\n    for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n      var index = indexes_1[_i];\n      this.removeStyles([this.getElementByIndex(index)], index);\n    }\n  };\n  /**\n   * To perform the selection for legend elements.\n   *\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.legendSelection = function (accumulation, series, pointIndex, event) {\n    var targetEle = event.target;\n\n    if (event.type === 'mousemove') {\n      if (event.target.id.indexOf('text') > 1) {\n        targetEle = getElement(event.target.id.replace('text', 'shape'));\n      }\n\n      if (targetEle.hasAttribute('class') && (targetEle.getAttribute('class').indexOf('highlight') > -1 || targetEle.getAttribute('class').indexOf('selection') > -1)) {\n        return;\n      }\n\n      this.currentMode = this.accumulation.highlightMode;\n    }\n\n    var isPreSelected = this.isAlreadySelected(event);\n\n    if (isPreSelected) {\n      var element = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n      var seriesStyle = this.generateLegendClickStyle(accumulation.visibleSeries[series], event);\n      var seriesElements = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n      this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n      this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    }\n  };\n  /**\n   * To select the element by selected data indexes.\n   */\n\n\n  AccumulationSelection.prototype.selectDataIndex = function (indexes, accumulation) {\n    var element;\n\n    for (var _i = 0, indexes_2 = indexes; _i < indexes_2.length; _i++) {\n      var index = indexes_2[_i];\n      element = this.getElementByIndex(index);\n\n      if (element) {\n        this.performSelection(index, accumulation, element);\n      }\n    }\n  };\n  /**\n   * To remove the selection styles for multi selection process.\n   */\n\n\n  AccumulationSelection.prototype.removeMultiSelectEelments = function (accumulation, index, currentIndex, seriesCollection) {\n    var series;\n\n    for (var i = 0; i < index.length; i++) {\n      series = seriesCollection[index[i].series];\n\n      if (!this.checkEquals(index[i], currentIndex)) {\n        this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n        index.splice(i, 1);\n        i--;\n      }\n    }\n  };\n  /**\n   * To apply the opacity effect for accumulation chart series elements.\n   */\n\n\n  AccumulationSelection.prototype.blurEffect = function (pieId, visibleSeries) {\n    var visibility = this.checkVisibility(this.highlightDataIndexes) || this.checkVisibility(this.selectedDataIndexes); // legend click scenario\n\n    for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n      var series = visibleSeries_1[_i];\n\n      if (series.visible) {\n        this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n      }\n    }\n  };\n  /**\n   * To check selection elements by style class name.\n   */\n\n\n  AccumulationSelection.prototype.checkSelectionElements = function (element, className, visibility) {\n    var children = element.childNodes[0].childNodes;\n    var legendShape;\n    var elementClass;\n    var parentClass;\n    var selectElement = element;\n\n    for (var i = 0; i < children.length; i++) {\n      elementClass = children[i].getAttribute('class') || '';\n      parentClass = children[i].parentNode.getAttribute('class') || '';\n\n      if (this.accumulation.selectionMode !== 'None' && this.accumulation.highlightMode !== 'None') {\n        className = elementClass.indexOf('selection') > 0 || elementClass.indexOf('highlight') > 0 ? elementClass : className;\n        className = parentClass.indexOf('selection') > 0 || parentClass.indexOf('highlight') > 0 ? parentClass : className;\n      }\n\n      if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n        this.addSvgClass(children[i], this.unselected);\n      } else {\n        this.removeSvgClass(children[i], this.unselected);\n      }\n\n      if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n        this.addSvgClass(children[i], this.unselected);\n      } else {\n        selectElement = children[i];\n        this.removeSvgClass(children[i], this.unselected);\n        this.removeSvgClass(children[i].parentNode, this.unselected);\n      }\n\n      if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n        legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n\n        if (legendShape) {\n          if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n            this.addSvgClass(legendShape, this.unselected);\n          } else {\n            this.removeSvgClass(legendShape, this.unselected);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To apply selection style for elements.\n   */\n\n\n  AccumulationSelection.prototype.applyStyles = function (elements, index) {\n    var accumulationTooltip = this.control.accumulationTooltipModule;\n\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var element = elements_1[_i];\n      var legendShape = void 0;\n\n      if (element) {\n        if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n          legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n          this.removeSvgClass(legendShape, legendShape.getAttribute('class'));\n          this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n        }\n\n        this.removeSvgClass(element.parentNode, this.unselected);\n        this.removeSvgClass(element, this.unselected);\n        var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0 && accumulationTooltip.previousPoints[0].point.index !== index.point ? accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n        element.setAttribute('opacity', opacity.toString());\n        this.addSvgClass(element, this.getSelectionClass(element.id));\n      }\n    }\n  };\n  /**\n   * To get selection style class name by id\n   */\n\n\n  AccumulationSelection.prototype.getSelectionClass = function (id) {\n    return this.generateStyle(this.control.series[indexFinder(id).series]);\n  };\n  /**\n   * To remove selection style for elements.\n   */\n\n\n  AccumulationSelection.prototype.removeStyles = function (elements, index) {\n    var accumulationTooltip = this.control.accumulationTooltipModule;\n    var legendShape;\n\n    for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n      var element = elements_2[_i];\n\n      if (element) {\n        if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n          legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n          this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n        }\n\n        var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0 && accumulationTooltip.previousPoints[0].point.index === index.point ? accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n        element.setAttribute('opacity', opacity.toString());\n        this.removeSvgClass(element, this.getSelectionClass(element.id));\n      }\n    }\n  };\n  /**\n   * To apply or remove selected elements index.\n   */\n\n\n  AccumulationSelection.prototype.addOrRemoveIndex = function (indexes, index, add) {\n    for (var i = 0; i < indexes.length; i++) {\n      if (this.checkEquals(indexes[i], index)) {\n        indexes.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (add) {\n      indexes.push(index);\n    }\n  };\n  /**\n   * To check two index, point and series are equal\n   */\n\n\n  AccumulationSelection.prototype.checkEquals = function (first, second) {\n    return first.point === second.point && first.series === second.series;\n  };\n  /** @private */\n\n\n  AccumulationSelection.prototype.mouseMove = function (event) {\n    var accumulation = this.accumulation;\n    var targetElement = event.target;\n\n    if (accumulation.highlightMode !== 'None') {\n      if (!isNullOrUndefined(targetElement)) {\n        if (event.target.id.indexOf('text') > 1) {\n          targetElement = getElement(event.target.id.replace('text', 'shape'));\n        }\n\n        if (targetElement.hasAttribute('class') && targetElement.getAttribute('class').indexOf('highlight') > -1) {\n          return;\n        }\n\n        this.calculateSelectedElements(accumulation, event);\n        return;\n      }\n    }\n\n    if (accumulation.selectionMode === 'None') {\n      return;\n    }\n  };\n  /**\n   * To check selected points are visibility\n   */\n\n\n  AccumulationSelection.prototype.checkPointVisibility = function (selectedDataIndexes) {\n    var visible = false;\n\n    for (var _i = 0, selectedDataIndexes_1 = selectedDataIndexes; _i < selectedDataIndexes_1.length; _i++) {\n      var data = selectedDataIndexes_1[_i];\n\n      if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n        visible = true;\n        break;\n      }\n    }\n\n    return visible;\n  };\n  /**\n   * Get module name.\n   */\n\n\n  AccumulationSelection.prototype.getModuleName = function () {\n    return 'AccumulationSelection';\n  };\n  /**\n   * To destroy the selection.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  AccumulationSelection.prototype.destroy = function () {\n    // Destroy method performed here\n    this.removeEventListener();\n  };\n\n  return AccumulationSelection;\n}(BaseSelection);\n\nexport { AccumulationSelection };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/user-interaction/selection.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Browser","extend","isNullOrUndefined","indexFinder","getElement","pointByIndex","Index","BaseSelection","selectionComplete","AccumulationSelection","_super","accumulation","_this","call","renderer","addEventListener","isDestroyed","cancelEvent","isPointer","on","touchMoveEvent","mouseMove","calculateSelectedElements","removeEventListener","off","initPrivateVariables","styleId","element","id","unselected","selectedDataIndexes","rectPoints","invokeSelection","series","visibleSeries","seriesStyles","currentMode","selectionMode","selectDataIndex","concatIndexes","generateStyle","selectionStyle","index","generateLegendClickStyle","event","type","findElements","getElementByIndex","elementId","control","point","document","getElementById","isAlreadySelected","highlightMode","highlightDataIndexes","targetElement","target","previousSelectedElement","parentNodeId","parentNode","isValidElement","indexOf","i","length","hasAttribute","getAttribute","removeAttribute","addOrRemoveIndex","performSelection","targetEle","getSeriesElement","childNodes","isNaN","selection","blurEffect","pointIndex","selectedPointValues","push","x","dataSource","xName","y","points","seriesIndex","args","name","selectedDataValues","cancel","trigger","selectedElements","isMultiSelect","removeMultiSelectEelments","className","getSelectionClass","removeStyles","enableBorderOnMouseMove","borderElement","split","removeSvgClass","applyStyles","addSvgClass","redrawSelection","removeSelectedElements","indexes","_i","indexes_1","legendSelection","replace","isPreSelected","seriesStyle","seriesElements","indexes_2","currentIndex","seriesCollection","checkEquals","splice","pieId","visibility","checkVisibility","visibleSeries_1","visible","checkSelectionElements","children","legendShape","elementClass","parentClass","selectElement","accumulationLegendModule","legendSettings","elements","accumulationTooltip","accumulationTooltipModule","elements_1","opacity","previousPoints","svgTooltip","setAttribute","toString","elements_2","add","first","second","checkPointVisibility","selectedDataIndexes_1","data","getModuleName","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart Selection src file\n */\nimport { Browser, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { indexFinder, getElement } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\nimport { Index } from '../../common/model/base';\nimport { BaseSelection } from '../../common/user-interaction/selection';\nimport { selectionComplete } from '../../common/model/constants';\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n */\nvar AccumulationSelection = /** @class */ (function (_super) {\n    __extends(AccumulationSelection, _super);\n    function AccumulationSelection(accumulation) {\n        var _this = _super.call(this, accumulation) || this;\n        _this.accumulation = accumulation;\n        _this.renderer = accumulation.renderer;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for selection module.\n     */\n    AccumulationSelection.prototype.addEventListener = function () {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.accumulation.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.accumulation.on('click', this.calculateSelectedElements, this);\n    };\n    /**\n     * UnBinding events for selection module.\n     */\n    AccumulationSelection.prototype.removeEventListener = function () {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        this.accumulation.off(Browser.touchMoveEvent, this.mouseMove);\n        this.accumulation.off('click', this.calculateSelectedElements);\n    };\n    /**\n     * To initialize the private variables\n     */\n    AccumulationSelection.prototype.initPrivateVariables = function (accumulation) {\n        this.styleId = accumulation.element.id + '_ej2_chart_selection';\n        this.unselected = accumulation.element.id + '_ej2_deselected';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n    };\n    /**\n     * Invoke selection for rendered chart.\n     *\n     * @param {AccumulationChart} accumulation Define the chart to invoke the selection.\n     * @returns {void}\n     */\n    AccumulationSelection.prototype.invokeSelection = function (accumulation) {\n        this.initPrivateVariables(accumulation);\n        this.series = extend({}, accumulation.visibleSeries, null, true);\n        this.seriesStyles();\n        this.currentMode = accumulation.selectionMode;\n        this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n    };\n    /**\n     * To get series selection style by series.\n     */\n    AccumulationSelection.prototype.generateStyle = function (series) {\n        return (series.selectionStyle || this.styleId + '_series_' + series.index);\n    };\n    /**\n     * To get series selection style while hovering legend\n     */\n    AccumulationSelection.prototype.generateLegendClickStyle = function (series, event) {\n        if (event.type === 'mousemove') {\n            this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n        }\n        else if (event.type === 'click') {\n            this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n        }\n        return (series.selectionStyle || this.styleId + '_series_' + series.index);\n    };\n    /**\n     * To get elements by index, series\n     */\n    AccumulationSelection.prototype.findElements = function (accumulation, series, index) {\n        return [this.getElementByIndex(index)];\n    };\n    /**\n     * To get series point element by index\n     */\n    AccumulationSelection.prototype.getElementByIndex = function (index) {\n        var elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n        return document.getElementById(elementId);\n    };\n    /**\n    * To find the selected element.\n     * @return {void}\n     * @private\n     */\n    AccumulationSelection.prototype.isAlreadySelected = function (event) {\n        if (event.type === 'mousemove') {\n            this.currentMode = this.accumulation.highlightMode;\n            this.highlightDataIndexes = [];\n            this.styleId = this.accumulation.element.id + '_ej2_chart_highlight';\n        }\n        else if (event.type === 'click') {\n            this.currentMode = this.accumulation.selectionMode;\n            this.styleId = this.accumulation.element.id + '_ej2_chart_selection';\n        }\n        if (this.accumulation.highlightMode !== 'None' && this.accumulation.selectionMode === 'None') {\n            if (event.type === 'click') {\n                return false;\n            }\n        }\n        var targetElement = event.target;\n        if ((this.accumulation.highlightMode !== 'None' && this.previousSelectedElement && this.previousSelectedElement[0])) {\n            var parentNodeId = targetElement.parentNode.id;\n            var isValidElement = void 0;\n            if (targetElement.parentNode) {\n                isValidElement = (parentNodeId.indexOf('SeriesGroup') > 0 ||\n                    parentNodeId.indexOf('SymbolGroup') > 0) ? true : false;\n            }\n            for (var i = 0; i < this.previousSelectedElement.length; i++) {\n                if (this.previousSelectedElement[i].hasAttribute('class')) {\n                    if (this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1 && (isValidElement || event.type === 'click')) {\n                        this.previousSelectedElement[i].removeAttribute('class');\n                        this.addOrRemoveIndex(this.highlightDataIndexes, indexFinder(this.previousSelectedElement[i].id));\n                    }\n                    else if (!isValidElement && this.previousSelectedElement[i].getAttribute('class').indexOf('highlight') > -1) {\n                        this.performSelection(indexFinder(this.previousSelectedElement[i].id), this.accumulation, this.previousSelectedElement[i]);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * To calculate selected elements on mouse click or touch\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.calculateSelectedElements = function (accumulation, event) {\n        if (isNullOrUndefined(event.target)) {\n            return;\n        }\n        var targetEle = event.target;\n        if ((accumulation.highlightMode === 'None' && accumulation.selectionMode === 'None') ||\n            targetEle.id.indexOf(accumulation.element.id + '_') === -1) {\n            return;\n        }\n        if (event.type === 'mousemove') {\n            if (!isNullOrUndefined(targetEle.parentNode) && targetEle.parentNode.hasAttribute('class') &&\n                (targetEle.parentNode.getAttribute('class').indexOf('highlight') > 0 ||\n                    targetEle.parentNode.getAttribute('class').indexOf('selection') > 0)) {\n                return;\n            }\n        }\n        if (targetEle.getAttribute('id').indexOf('_connector_') > -1) {\n            return;\n        }\n        else {\n            this.isAlreadySelected(event);\n            if (targetEle.id.indexOf('_Series_') > -1 || targetEle.id.indexOf('_datalabel_') > -1) {\n                this.performSelection(indexFinder(targetEle.id), accumulation, event.target);\n            }\n        }\n    };\n    /**\n     * To perform the selection process based on index and element.\n     */\n    AccumulationSelection.prototype.performSelection = function (index, accumulation, element) {\n        element = element.id.indexOf('datalabel') > -1 ?\n            accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point]\n            : element;\n        switch (this.currentMode) {\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(accumulation, index, [element]);\n                    this.selectionComplete(accumulation, accumulation.series[0]);\n                    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n                }\n                break;\n        }\n    };\n    /**\n     *  Method to get the selected data index\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.selectionComplete = function (accumulation, series) {\n        var pointIndex;\n        var selectedPointValues = [];\n        for (var i = 0; i < this.selectedDataIndexes.length; i++) {\n            pointIndex = this.selectedDataIndexes[i].point;\n            if (!isNaN(pointIndex)) {\n                selectedPointValues.push({\n                    x: series.dataSource[pointIndex][series.xName], y: series.points[pointIndex].y,\n                    seriesIndex: this.selectedDataIndexes[i].series, pointIndex: pointIndex\n                });\n            }\n        }\n        var args = {\n            name: selectionComplete,\n            selectedDataValues: selectedPointValues,\n            cancel: false\n        };\n        accumulation.trigger(selectionComplete, args);\n    };\n    /**\n     * To select the element by index. Adding or removing selection style class name.\n     */\n    AccumulationSelection.prototype.selection = function (accumulation, index, selectedElements) {\n        if (!accumulation.isMultiSelect && this.styleId.indexOf('highlight') === -1 &&\n            accumulation.selectionMode !== 'None') {\n            this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n        }\n        var className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n            this.removeStyles(selectedElements, index);\n            if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n                this.addOrRemoveIndex(this.highlightDataIndexes, index);\n            }\n            else {\n                this.addOrRemoveIndex(this.selectedDataIndexes, index);\n            }\n            if (accumulation.enableBorderOnMouseMove) {\n                var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n                if (!isNullOrUndefined(borderElement)) {\n                    this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n                }\n            }\n        }\n        else {\n            this.previousSelectedElement = accumulation.highlightMode !== 'None' ? selectedElements : [];\n            if (className.indexOf('selection') < 0) {\n                this.applyStyles(selectedElements, index);\n            }\n            if (accumulation.enableBorderOnMouseMove) {\n                var borderElement = document.getElementById(selectedElements[0].id.split('_')[0] + 'PointHover_Border');\n                if (!isNullOrUndefined(borderElement)) {\n                    this.removeSvgClass(borderElement, borderElement.getAttribute('class'));\n                    this.addSvgClass(borderElement, selectedElements[0].getAttribute('class'));\n                }\n            }\n            if (this.styleId.indexOf('highlight') > 0 && accumulation.highlightMode !== 'None') {\n                this.addOrRemoveIndex(this.highlightDataIndexes, index, true);\n            }\n            else {\n                this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n            }\n        }\n    };\n    /**\n     * To redraw the selection process on accumulation chart refresh.\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.redrawSelection = function (accumulation) {\n        var selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        var highlightDataIndexes = extend([], this.highlightDataIndexes, null, true);\n        if (this.styleId.indexOf('highlight') > 0 && highlightDataIndexes.length > 0) {\n            this.removeSelectedElements(accumulation, this.highlightDataIndexes);\n            selectedDataIndexes = highlightDataIndexes;\n        }\n        else {\n            this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n        }\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        this.selectDataIndex(selectedDataIndexes, accumulation);\n    };\n    /**\n     * To remove the selected elements style classes by indexes.\n     */\n    AccumulationSelection.prototype.removeSelectedElements = function (accumulation, indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            this.removeStyles([this.getElementByIndex(index)], index);\n        }\n    };\n    /**\n     * To perform the selection for legend elements.\n     *\n     * @private\n     */\n    AccumulationSelection.prototype.legendSelection = function (accumulation, series, pointIndex, event) {\n        var targetEle = event.target;\n        if (event.type === 'mousemove') {\n            if (event.target.id.indexOf('text') > 1) {\n                targetEle = getElement(event.target.id.replace('text', 'shape'));\n            }\n            if (targetEle.hasAttribute('class') && (targetEle.getAttribute('class').indexOf('highlight') > -1 ||\n                targetEle.getAttribute('class').indexOf('selection') > -1)) {\n                return;\n            }\n            this.currentMode = this.accumulation.highlightMode;\n        }\n        var isPreSelected = this.isAlreadySelected(event);\n        if (isPreSelected) {\n            var element = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n            var seriesStyle = this.generateLegendClickStyle(accumulation.visibleSeries[series], event);\n            var seriesElements = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n            this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n            this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        }\n    };\n    /**\n     * To select the element by selected data indexes.\n     */\n    AccumulationSelection.prototype.selectDataIndex = function (indexes, accumulation) {\n        var element;\n        for (var _i = 0, indexes_2 = indexes; _i < indexes_2.length; _i++) {\n            var index = indexes_2[_i];\n            element = this.getElementByIndex(index);\n            if (element) {\n                this.performSelection(index, accumulation, element);\n            }\n        }\n    };\n    /**\n     * To remove the selection styles for multi selection process.\n     */\n    AccumulationSelection.prototype.removeMultiSelectEelments = function (accumulation, index, currentIndex, seriesCollection) {\n        var series;\n        for (var i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if (!this.checkEquals(index[i], currentIndex)) {\n                this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    };\n    /**\n     * To apply the opacity effect for accumulation chart series elements.\n     */\n    AccumulationSelection.prototype.blurEffect = function (pieId, visibleSeries) {\n        var visibility = (this.checkVisibility(this.highlightDataIndexes) ||\n            this.checkVisibility(this.selectedDataIndexes)); // legend click scenario\n        for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n            var series = visibleSeries_1[_i];\n            if (series.visible) {\n                this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n            }\n        }\n    };\n    /**\n     * To check selection elements by style class name.\n     */\n    AccumulationSelection.prototype.checkSelectionElements = function (element, className, visibility) {\n        var children = element.childNodes[0].childNodes;\n        var legendShape;\n        var elementClass;\n        var parentClass;\n        var selectElement = element;\n        for (var i = 0; i < children.length; i++) {\n            elementClass = children[i].getAttribute('class') || '';\n            parentClass = children[i].parentNode.getAttribute('class') || '';\n            if (this.accumulation.selectionMode !== 'None' && this.accumulation.highlightMode !== 'None') {\n                className = elementClass.indexOf('selection') > 0 ||\n                    elementClass.indexOf('highlight') > 0 ? elementClass : className;\n                className = (parentClass.indexOf('selection') > 0 ||\n                    parentClass.indexOf('highlight') > 0) ? parentClass : className;\n            }\n            if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                this.removeSvgClass(children[i], this.unselected);\n            }\n            if (elementClass.indexOf(className) === -1 &&\n                parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                selectElement = children[i];\n                this.removeSvgClass(children[i], this.unselected);\n                this.removeSvgClass(children[i].parentNode, this.unselected);\n            }\n            if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n                if (legendShape) {\n                    if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                        this.addSvgClass(legendShape, this.unselected);\n                    }\n                    else {\n                        this.removeSvgClass(legendShape, this.unselected);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To apply selection style for elements.\n     */\n    AccumulationSelection.prototype.applyStyles = function (elements, index) {\n        var accumulationTooltip = this.control.accumulationTooltipModule;\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var legendShape = void 0;\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, legendShape.getAttribute('class'));\n                    this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                var opacity = accumulationTooltip && (accumulationTooltip.previousPoints.length > 0 &&\n                    accumulationTooltip.previousPoints[0].point.index !== index.point) ?\n                    accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n                element.setAttribute('opacity', opacity.toString());\n                this.addSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    };\n    /**\n     * To get selection style class name by id\n     */\n    AccumulationSelection.prototype.getSelectionClass = function (id) {\n        return this.generateStyle(this.control.series[indexFinder(id).series]);\n    };\n    /**\n     * To remove selection style for elements.\n     */\n    AccumulationSelection.prototype.removeStyles = function (elements, index) {\n        var accumulationTooltip = this.control.accumulationTooltipModule;\n        var legendShape;\n        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {\n            var element = elements_2[_i];\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                var opacity = accumulationTooltip && accumulationTooltip.previousPoints.length > 0\n                    && (accumulationTooltip.previousPoints[0].point.index === index.point) ?\n                    accumulationTooltip.svgTooltip.opacity : this.series[index.series].opacity;\n                element.setAttribute('opacity', opacity.toString());\n                this.removeSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    };\n    /**\n     * To apply or remove selected elements index.\n     */\n    AccumulationSelection.prototype.addOrRemoveIndex = function (indexes, index, add) {\n        for (var i = 0; i < indexes.length; i++) {\n            if (this.checkEquals(indexes[i], index)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    };\n    /**\n     * To check two index, point and series are equal\n     */\n    AccumulationSelection.prototype.checkEquals = function (first, second) {\n        return ((first.point === second.point) && (first.series === second.series));\n    };\n    /** @private */\n    AccumulationSelection.prototype.mouseMove = function (event) {\n        var accumulation = this.accumulation;\n        var targetElement = event.target;\n        if (accumulation.highlightMode !== 'None') {\n            if (!isNullOrUndefined(targetElement)) {\n                if (event.target.id.indexOf('text') > 1) {\n                    targetElement = getElement(event.target.id.replace('text', 'shape'));\n                }\n                if ((targetElement).hasAttribute('class') && (targetElement).getAttribute('class').indexOf('highlight') > -1) {\n                    return;\n                }\n                this.calculateSelectedElements(accumulation, event);\n                return;\n            }\n        }\n        if (accumulation.selectionMode === 'None') {\n            return;\n        }\n    };\n    /**\n     * To check selected points are visibility\n     */\n    AccumulationSelection.prototype.checkPointVisibility = function (selectedDataIndexes) {\n        var visible = false;\n        for (var _i = 0, selectedDataIndexes_1 = selectedDataIndexes; _i < selectedDataIndexes_1.length; _i++) {\n            var data = selectedDataIndexes_1[_i];\n            if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    };\n    /**\n     * Get module name.\n     */\n    AccumulationSelection.prototype.getModuleName = function () {\n        return 'AccumulationSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationSelection.prototype.destroy = function () {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return AccumulationSelection;\n}(BaseSelection));\nexport { AccumulationSelection };\n"]},"metadata":{},"sourceType":"module"}