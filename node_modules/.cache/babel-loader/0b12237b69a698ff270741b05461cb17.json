{"ast":null,"code":"import { CircleOption, PathOption } from '../../smithchart/utils/helper';\nimport { SmithchartSize, MarkerOptions } from '../../smithchart/utils/utils';\n\nvar Marker =\n/** @class */\nfunction () {\n  function Marker() {}\n\n  Marker.prototype.drawMarker = function (smithchart, seriesindex, groupElement, pointsRegion) {\n    if (smithchart.series[seriesindex].marker.visible) {\n      var marker = smithchart.series[seriesindex].marker;\n      var count = smithchart.series[seriesindex].points.length - 1;\n      var width = marker.width;\n      var height = marker.height;\n      var symbolName = marker.shape;\n      var gmEle = smithchart.renderer.createGroup({\n        'id': smithchart.element.id + '_svg' + '_series' + seriesindex + '_Marker'\n      });\n      groupElement.appendChild(gmEle);\n      var borderWidth = marker.border.width;\n      var borderColor = marker.border.color;\n      var opacity = marker.opacity;\n      var fill = marker.fill ? marker.fill : smithchart.series[seriesindex].fill || smithchart.seriesColors[seriesindex % smithchart.seriesColors.length];\n\n      for (var i = 0; i < count + 1; i++) {\n        var location_1 = pointsRegion[i]['point'];\n        var pointIndex = i;\n        var options = new MarkerOptions(smithchart.element.id + '_Series' + seriesindex + '_Points' + pointIndex + '_Marker' + pointIndex, fill, borderColor, borderWidth, opacity);\n        gmEle.appendChild(this.drawSymbol(symbolName, marker.imageUrl, location_1, new SmithchartSize(width, height), options, smithchart));\n      }\n    }\n  };\n\n  Marker.prototype.drawSymbol = function (symbolName, url, location, size, options, smithchart) {\n    var markerEle;\n    var shape = symbolName.toLowerCase();\n    var circleOptions;\n    var pathOptions;\n    var path;\n    var border = {\n      color: options['borderColor'],\n      width: options['borderWidth']\n    };\n    var opacity = options.opacity;\n    var startX = location.x;\n    var startY = location.y;\n    var radius = Math.sqrt(size.height * size.height + size.width * size.width) / 2;\n    var eq = 72;\n\n    switch (shape) {\n      case 'circle':\n        circleOptions = new CircleOption(options['id'], options['fill'], border, opacity, location.x, location.y, radius, null);\n        markerEle = smithchart.renderer.drawCircle(circleOptions);\n        break;\n\n      case 'rectangle':\n        path = 'M' + ' ' + (startX + -size.width / 2) + ' ' + (startY + -size.height / 2) + ' ' + 'L' + ' ' + (startX + size.width / 2) + ' ' + (startY + -size.height / 2) + ' ' + 'L' + ' ' + (startX + size.width / 2) + ' ' + (startY + size.height / 2) + ' ' + 'L' + ' ' + (startX + -size.width / 2) + ' ' + (startY + size.height / 2) + ' ' + 'L' + ' ' + (startX + -size.width / 2) + ' ' + (startY + -size.height / 2) + 'z';\n        pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n        markerEle = smithchart.renderer.drawPath(pathOptions);\n        break;\n\n      case 'triangle':\n        path = 'M' + ' ' + (startX + -size.width / 2) + ' ' + (startY + size.height / 2) + ' ' + 'L' + ' ' + startX + ' ' + (startY + -size.height / 2) + ' ' + 'L' + ' ' + (startX + size.width / 2) + ' ' + (startY + size.height / 2) + ' ' + 'L' + ' ' + (startX + -size.width / 2) + ' ' + (startY + size.height / 2) + 'z';\n        pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n        markerEle = smithchart.renderer.drawPath(pathOptions);\n        break;\n\n      case 'diamond':\n        path = 'M' + ' ' + (startX + -size.width / 2) + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + -size.height / 2) + ' ' + 'L' + ' ' + (startX + size.width / 2) + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + size.height / 2) + ' ' + 'L' + ' ' + (startX + -size.width / 2) + ' ' + startY + 'z';\n        pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n        markerEle = smithchart.renderer.drawPath(pathOptions);\n        break;\n\n      case 'pentagon':\n        for (var i = 0; i <= 5; i++) {\n          var xValue = radius * Math.cos(Math.PI / 180 * (i * eq));\n          var yValue = radius * Math.sin(Math.PI / 180 * (i * eq));\n\n          if (i === 0) {\n            path = 'M' + ' ' + (startX + xValue) + ' ' + (startY + yValue) + ' ';\n          } else {\n            path = path.concat('L' + ' ' + (startX + xValue) + ' ' + (startY + yValue) + ' ');\n          }\n        }\n\n        path = path.concat('Z');\n        pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n        markerEle = smithchart.renderer.drawPath(pathOptions);\n        break;\n    }\n\n    return markerEle;\n  };\n\n  return Marker;\n}();\n\nexport { Marker };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/smithchart/series/marker.js"],"names":["CircleOption","PathOption","SmithchartSize","MarkerOptions","Marker","prototype","drawMarker","smithchart","seriesindex","groupElement","pointsRegion","series","marker","visible","count","points","length","width","height","symbolName","shape","gmEle","renderer","createGroup","element","id","appendChild","borderWidth","border","borderColor","color","opacity","fill","seriesColors","i","location_1","pointIndex","options","drawSymbol","imageUrl","url","location","size","markerEle","toLowerCase","circleOptions","pathOptions","path","startX","x","startY","y","radius","Math","sqrt","eq","drawCircle","drawPath","xValue","cos","PI","yValue","sin","concat"],"mappings":"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","sourcesContent":["import { CircleOption, PathOption } from '../../smithchart/utils/helper';\nimport { SmithchartSize, MarkerOptions } from '../../smithchart/utils/utils';\nvar Marker = /** @class */ (function () {\n    function Marker() {\n    }\n    Marker.prototype.drawMarker = function (smithchart, seriesindex, groupElement, pointsRegion) {\n        if (smithchart.series[seriesindex].marker.visible) {\n            var marker = smithchart.series[seriesindex].marker;\n            var count = smithchart.series[seriesindex].points.length - 1;\n            var width = marker.width;\n            var height = marker.height;\n            var symbolName = marker.shape;\n            var gmEle = smithchart.renderer.createGroup({ 'id': smithchart.element.id + '_svg' +\n                    '_series' + seriesindex + '_Marker' });\n            groupElement.appendChild(gmEle);\n            var borderWidth = marker.border.width;\n            var borderColor = marker.border.color;\n            var opacity = marker.opacity;\n            var fill = marker.fill ? marker.fill : (smithchart.series[seriesindex].fill ||\n                smithchart.seriesColors[seriesindex % smithchart.seriesColors.length]);\n            for (var i = 0; i < count + 1; i++) {\n                var location_1 = pointsRegion[i]['point'];\n                var pointIndex = i;\n                var options = new MarkerOptions(smithchart.element.id + '_Series' + seriesindex + '_Points' + pointIndex + '_Marker' + pointIndex, fill, borderColor, borderWidth, opacity);\n                gmEle.appendChild(this.drawSymbol(symbolName, marker.imageUrl, location_1, new SmithchartSize(width, height), options, smithchart));\n            }\n        }\n    };\n    Marker.prototype.drawSymbol = function (symbolName, url, location, size, options, smithchart) {\n        var markerEle;\n        var shape = symbolName.toLowerCase();\n        var circleOptions;\n        var pathOptions;\n        var path;\n        var border = { color: options['borderColor'], width: options['borderWidth'] };\n        var opacity = options.opacity;\n        var startX = location.x;\n        var startY = location.y;\n        var radius = Math.sqrt(size.height * size.height + size.width * size.width) / 2;\n        var eq = 72;\n        switch (shape) {\n            case 'circle':\n                circleOptions = new CircleOption(options['id'], options['fill'], border, opacity, location.x, location.y, radius, null);\n                markerEle = smithchart.renderer.drawCircle(circleOptions);\n                break;\n            case 'rectangle':\n                path = 'M' + ' ' + (startX + (-size.width / 2)) + ' ' + (startY + (-size.height / 2)) +\n                    ' ' + 'L' + ' ' + (startX + (size.width / 2)) + ' ' + (startY + (-size.height / 2)) + ' ' +\n                    'L' + ' ' + (startX + (size.width / 2)) + ' ' + (startY + (size.height / 2)) +\n                    ' ' + 'L' + ' ' + (startX + (-size.width / 2)) +\n                    ' ' + (startY + (size.height / 2)) + ' ' + 'L' + ' ' +\n                    (startX + (-size.width / 2)) + ' ' + (startY + (-size.height / 2)) + 'z';\n                pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n                markerEle = smithchart.renderer.drawPath(pathOptions);\n                break;\n            case 'triangle':\n                path = 'M' + ' ' + (startX + (-size.width / 2)) + ' ' + (startY + (size.height / 2)) + ' ' + 'L' + ' ' + (startX) + ' ' +\n                    (startY + (-size.height / 2)) + ' ' + 'L' + ' ' + (startX + (size.width / 2)) + ' ' +\n                    (startY + (size.height / 2)) + ' ' + 'L' + ' ' +\n                    (startX + (-size.width / 2)) + ' ' + (startY + (size.height / 2)) + 'z';\n                pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n                markerEle = smithchart.renderer.drawPath(pathOptions);\n                break;\n            case 'diamond':\n                path = 'M' + ' ' + (startX + (-size.width / 2)) + ' ' + (startY) + ' ' + 'L' + ' ' +\n                    (startX) + ' ' + (startY + (-size.height / 2)) + ' ' + 'L' + ' ' + (startX + (size.width / 2)) + ' ' +\n                    (startY) + ' ' + 'L' + ' ' + (startX) + ' ' + (startY + (size.height / 2)) + ' ' + 'L' + ' ' +\n                    (startX + (-size.width / 2)) + ' ' + (startY) + 'z';\n                pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n                markerEle = smithchart.renderer.drawPath(pathOptions);\n                break;\n            case 'pentagon':\n                for (var i = 0; i <= 5; i++) {\n                    var xValue = radius * Math.cos((Math.PI / 180) * (i * eq));\n                    var yValue = radius * Math.sin((Math.PI / 180) * (i * eq));\n                    if (i === 0) {\n                        path = 'M' + ' ' + (startX + xValue) + ' ' + (startY + yValue) + ' ';\n                    }\n                    else {\n                        path = path.concat('L' + ' ' + (startX + xValue) + ' ' + (startY + yValue) + ' ');\n                    }\n                }\n                path = path.concat('Z');\n                pathOptions = new PathOption(options['id'], options['fill'], border.width, border.color, opacity, '', path);\n                markerEle = smithchart.renderer.drawPath(pathOptions);\n                break;\n        }\n        return markerEle;\n    };\n    return Marker;\n}());\nexport { Marker };\n"]},"metadata":{},"sourceType":"module"}