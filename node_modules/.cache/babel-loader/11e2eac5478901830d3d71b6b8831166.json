{"ast":null,"code":"import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\n/**\n * The `Search` module is used to handle search action.\n */\n\nvar Search =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Grid search module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @hidden\n   */\n  function Search(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  /**\n   * Searches Grid records by given key.\n   *\n   * > You can customize the default search action by using [`searchSettings`](grid/#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   * @returns {void}\n   */\n\n\n  Search.prototype.search = function (searchString) {\n    var gObj = this.parent;\n    searchString = isNullOrUndefined(searchString) ? '' : searchString;\n\n    if (isActionPrevent(gObj)) {\n      gObj.notify(events.preventBatch, {\n        instance: this,\n        handler: this.search,\n        arg1: searchString\n      });\n      return;\n    }\n\n    if (searchString !== gObj.searchSettings.key) {\n      gObj.searchSettings.key = searchString.toString();\n      gObj.dataBind();\n    } else if (this.refreshSearch) {\n      gObj.refresh();\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.searchComplete, this.onSearchComplete, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.actionCompleteFunc = this.onActionComplete.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.searchComplete, this.onSearchComplete);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n  };\n  /**\n   * To destroy the print\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @param {NotifyArgs} e - specfies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    if (!isNullOrUndefined(e.properties.key)) {\n      this.parent.notify(events.modelChanged, {\n        requestType: 'searching',\n        type: events.actionBegin,\n        searchString: this.parent.searchSettings.key\n      });\n    } else {\n      this.parent.notify(events.modelChanged, {\n        requestType: 'searching',\n        type: events.actionBegin\n      });\n    }\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.onSearchComplete = function (e) {\n    this.parent.trigger(events.actionComplete, extend(e, {\n      searchString: this.parent.searchSettings.key,\n      requestType: 'searching',\n      type: events.actionComplete\n    }));\n  };\n  /**\n   * The function used to store the requestType\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Search.prototype.onActionComplete = function (e) {\n    this.refreshSearch = e.requestType !== 'searching';\n  };\n\n  Search.prototype.cancelBeginEvent = function (e) {\n    if (e.requestType === 'searching') {\n      this.parent.setProperties({\n        searchSettings: {\n          key: ''\n        }\n      }, true);\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Search.prototype.getModuleName = function () {\n    return 'search';\n  };\n\n  return Search;\n}();\n\nexport { Search };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-richtexteditor/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js"],"names":["extend","isNullOrUndefined","events","isActionPrevent","Search","parent","addEventListener","prototype","search","searchString","gObj","notify","preventBatch","instance","handler","arg1","searchSettings","key","toString","dataBind","refreshSearch","refresh","isDestroyed","on","inBoundModelChanged","onPropertyChanged","searchComplete","onSearchComplete","destroy","actionCompleteFunc","onActionComplete","bind","actionComplete","cancelBegin","cancelBeginEvent","removeEventListener","off","e","module","getModuleName","properties","modelChanged","requestType","type","actionBegin","trigger","setProperties"],"mappings":"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","sourcesContent":["import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\n/**\n * The `Search` module is used to handle search action.\n */\nvar Search = /** @class */ (function () {\n    /**\n     * Constructor for Grid search module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function Search(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Searches Grid records by given key.\n     *\n     * > You can customize the default search action by using [`searchSettings`](grid/#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Search.prototype.search = function (searchString) {\n        var gObj = this.parent;\n        searchString = isNullOrUndefined(searchString) ? '' : searchString;\n        if (isActionPrevent(gObj)) {\n            gObj.notify(events.preventBatch, { instance: this, handler: this.search, arg1: searchString });\n            return;\n        }\n        if (searchString !== gObj.searchSettings.key) {\n            gObj.searchSettings.key = searchString.toString();\n            gObj.dataBind();\n        }\n        else if (this.refreshSearch) {\n            gObj.refresh();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.searchComplete, this.onSearchComplete, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.actionCompleteFunc = this.onActionComplete.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.searchComplete, this.onSearchComplete);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n    };\n    /**\n     * To destroy the print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {NotifyArgs} e - specfies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (!isNullOrUndefined(e.properties.key)) {\n            this.parent.notify(events.modelChanged, {\n                requestType: 'searching', type: events.actionBegin, searchString: this.parent.searchSettings.key\n            });\n        }\n        else {\n            this.parent.notify(events.modelChanged, {\n                requestType: 'searching', type: events.actionBegin\n            });\n        }\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onSearchComplete = function (e) {\n        this.parent.trigger(events.actionComplete, extend(e, {\n            searchString: this.parent.searchSettings.key, requestType: 'searching', type: events.actionComplete\n        }));\n    };\n    /**\n     * The function used to store the requestType\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onActionComplete = function (e) {\n        this.refreshSearch = e.requestType !== 'searching';\n    };\n    Search.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'searching') {\n            this.parent.setProperties({ searchSettings: { key: '' } }, true);\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Search.prototype.getModuleName = function () {\n        return 'search';\n    };\n    return Search;\n}());\nexport { Search };\n"]},"metadata":{},"sourceType":"module"}