{"ast":null,"code":"import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\n\nvar VirtualRowModelGenerator =\n/** @class */\nfunction () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.movableCache = {};\n    this.frozenRightCache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.currentInfo = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isManualRefresh = false;\n    var info = e.virtualInfo = e.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n\n    if (this.currentInfo.blockIndexes) {\n      indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1) : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n      isManualRefresh = true;\n    }\n\n    if (isFrozen && this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent || !isFrozen) {\n      this.checkAndResetCache(e.requestType);\n    }\n\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      return result = this.parent.vcRows;\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[i])) {\n          this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n        }\n\n        if (e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]) || e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i])) {\n          var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n          cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n        }\n      }\n    }\n\n    var values = info.blockIndexes;\n\n    for (var i = 0; i < values.length; i++) {\n      if (!this.isBlockAvailable(values[i])) {\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n\n        if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n          this.parent.vRows = rows;\n          this.parent.vcRows = rows;\n          this.parent.notify(events.refreshVirtualMaxPage, {});\n        }\n\n        var median = void 0;\n\n        if (isGroupAdaptive(this.parent)) {\n          this.getGroupVirtualRecordsByIndex(rows);\n        } else {\n          if (isManualRefresh) {\n            this.setBlockForManualRefresh(this.cache, indexes, rows);\n          } else {\n            median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n            if (!this.isBlockAvailable(indexes[0])) {\n              this.cache[indexes[0]] = rows.slice(0, median);\n            }\n\n            if (!this.isBlockAvailable(indexes[1])) {\n              this.cache[indexes[1]] = rows.slice(median);\n            }\n          }\n        }\n      }\n\n      if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n        this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n      }\n\n      if (e.renderMovableContent && !this.isMovableBlockAvailable(values[i]) || e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i])) {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n\n        if (isManualRefresh) {\n          this.setBlockForManualRefresh(cache, indexes, rows);\n        } else {\n          var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0])) {\n            cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1])) {\n            cache[indexes[1]] = rows.slice(median);\n          }\n        }\n      }\n\n      if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n        result.push.apply(result, this.cache[values[i]]);\n      } else {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n\n        if (cache[values[i]]) {\n          result.push.apply(result, cache[values[i]]);\n        }\n      }\n\n      if (this.isBlockAvailable(values[i])) {\n        loadedBlocks.push(values[i]);\n      }\n    }\n\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n      this.parent.currentViewData[grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else if (isFrozen) {\n      if (e.renderMovableContent && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns()) || e.renderFrozenRightContent) {\n        this.parent.currentViewData = result.map(function (m) {\n          return m.data;\n        });\n      }\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n\n    return result;\n  };\n\n  VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n    var size = this.model.pageSize / 2;\n\n    if (this.includePrevPage) {\n      cache[blocks[0] - 1] = rows.slice(0, size);\n      cache[blocks[0]] = rows.slice(size, size * 2);\n      cache[blocks[1]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2]] = rows.slice(size * 3, size * 4);\n    } else {\n      cache[blocks[0]] = rows.slice(0, size);\n      cache[blocks[1]] = rows.slice(size, size * 2);\n      cache[blocks[2]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n\n  VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n    return value in this.movableCache;\n  };\n\n  VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n    return value in this.frozenRightCache;\n  };\n\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent);\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      content = content.querySelector('.' + literals.movableHeader);\n    }\n\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n\n      if (border) {\n        indexes.push(iOffset);\n      }\n\n      return left + calWidth < offsetVal;\n    });\n    this.addFrozenIndex(indexes);\n    return indexes;\n  };\n\n  VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n    if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n      for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n        indexes.push(indexes[indexes.length - 1] + 1);\n      }\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n\n    if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n      actions.splice(actions.indexOf(action), 1);\n    }\n\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n      this.movableCache = {};\n      this.frozenRightCache = {};\n    }\n\n    return clear;\n  };\n\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n\n    var c = this.parent.groupSettings.columns;\n\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n    } // eslint-disable-next-line prefer-spread\n\n\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[j] = blocks[j] + gLen;\n      this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[i]) < block) {\n        rows = rows.concat(this.cache[keys[i]]);\n      }\n    }\n\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n\n    return this.iterateGroup(current, rows);\n  };\n\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n\n        if (res) {\n          offset = index;\n        }\n\n        return res;\n      });\n    });\n\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n\n    return current;\n  };\n\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      rows = rows.concat(this.cache[keys[i]]);\n    }\n\n    return rows;\n  };\n\n  VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n    var cells = [];\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n    }\n\n    return cells;\n  };\n\n  VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n    var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n    var blockSize = this.parent.contentModule.getBlockSize();\n\n    for (var i = 1; i <= blocks; i++) {\n      var count = 0;\n      this.cache[i] = [];\n\n      for (var j = (i - 1) * blockSize; j < rows.length; j++) {\n        if (count === blockSize) {\n          break;\n        }\n\n        this.cache[i].push(rows[j]);\n\n        if (rows[j].isDataRow) {\n          count++;\n        }\n      }\n    }\n  };\n\n  return VirtualRowModelGenerator;\n}();\n\nexport { VirtualRowModelGenerator };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"names":["Browser","isNullOrUndefined","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","events","literals","VirtualRowModelGenerator","parent","cOffsets","cache","movableCache","frozenRightCache","rowCache","data","groups","currentInfo","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","e","isFrozen","isFrozenGrid","isManualRefresh","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","indexes","getBlockIndexes","loadedBlocks","blockIndexes","includePrevPage","slice","length","getFrozenMode","leftRight","renderMovableContent","renderFrozenRightContent","checkAndResetCache","requestType","vcRows","enableColumnVirtualization","i","isBlockAvailable","refreshRows","isMovableBlockAvailable","isFrozenRightBlockAvailable","values","startIdx","startIndex","getStartIndex","rows","vRows","notify","refreshVirtualMaxPage","median","getGroupVirtualRecordsByIndex","setBlockForManualRefresh","Math","max","pageSize","groupSettings","columns","updateGroupRow","push","apply","grouping","currentViewData","map","m","getFrozenColumns","blocks","size","getPage","block","value","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","_this","getHeaderContent","querySelector","headerContent","movableHeader","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","iOffset","Number","offsetVal","border","addFrozenIndex","action","actions","frozenRows","splice","indexOf","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","field","c","Array","j","parseInt","current","currentFirst","concat","isDataRow","iterateGroup","isPresent","row","oRow","res","undefined","key","shift","getRows","generateCells","foreignKeyData","cells","columnModel","generateCell","contentModule","getGroupedTotalBlocks","blockSize","getBlockSize","count"],"mappings":"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","sourcesContent":["import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.movableCache = {};\n        this.frozenRightCache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.currentInfo = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isManualRefresh = false;\n        var info = e.virtualInfo = e.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        if (this.currentInfo.blockIndexes) {\n            indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1)\n                : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n            isManualRefresh = true;\n        }\n        if ((isFrozen && (this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent)\n            || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent) || !isFrozen) {\n            this.checkAndResetCache(e.requestType);\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            return result = this.parent.vcRows;\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[i])) {\n                    this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n                }\n                if ((e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]))\n                    || (e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i]))) {\n                    var cache = e.renderMovableContent\n                        ? this.movableCache : this.frozenRightCache;\n                    cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n                }\n            }\n        }\n        var values = info.blockIndexes;\n        for (var i = 0; i < values.length; i++) {\n            if (!this.isBlockAvailable(values[i])) {\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n                    this.parent.vRows = rows;\n                    this.parent.vcRows = rows;\n                    this.parent.notify(events.refreshVirtualMaxPage, {});\n                }\n                var median = void 0;\n                if (isGroupAdaptive(this.parent)) {\n                    this.getGroupVirtualRecordsByIndex(rows);\n                }\n                else {\n                    if (isManualRefresh) {\n                        this.setBlockForManualRefresh(this.cache, indexes, rows);\n                    }\n                    else {\n                        median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                        if (!this.isBlockAvailable(indexes[0])) {\n                            this.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this.isBlockAvailable(indexes[1])) {\n                            this.cache[indexes[1]] = rows.slice(median);\n                        }\n                    }\n                }\n            }\n            if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n                this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n            }\n            if ((e.renderMovableContent && !this.isMovableBlockAvailable(values[i]))\n                || (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i]))) {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isManualRefresh) {\n                    this.setBlockForManualRefresh(cache, indexes, rows);\n                }\n                else {\n                    var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0]))) {\n                        cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1]))) {\n                        cache[indexes[1]] = rows.slice(median);\n                    }\n                }\n            }\n            if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n                result.push.apply(result, this.cache[values[i]]);\n            }\n            else {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                if (cache[values[i]]) {\n                    result.push.apply(result, cache[values[i]]);\n                }\n            }\n            if (this.isBlockAvailable(values[i])) {\n                loadedBlocks.push(values[i]);\n            }\n        }\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n        }\n        else if (isFrozen) {\n            if ((e.renderMovableContent && (this.parent.getFrozenMode() === 'Left'\n                || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns())) || e.renderFrozenRightContent) {\n                this.parent.currentViewData = result.map(function (m) { return m.data; });\n            }\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n        var size = this.model.pageSize / 2;\n        if (this.includePrevPage) {\n            cache[blocks[0] - 1] = rows.slice(0, size);\n            cache[blocks[0]] = rows.slice(size, size * 2);\n            cache[blocks[1]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2]] = rows.slice(size * 3, size * 4);\n        }\n        else {\n            cache[blocks[0]] = rows.slice(0, size);\n            cache[blocks[1]] = rows.slice(size, size * 2);\n            cache[blocks[2]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n        }\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n        return value in this.movableCache;\n    };\n    VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n        return value in this.frozenRightCache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent); }\n        if (this.parent.isFrozenGrid()) {\n            content = content.querySelector('.' + literals.movableHeader);\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        this.addFrozenIndex(indexes);\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n        if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n            for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                indexes.push(indexes[indexes.length - 1] + 1);\n            }\n        }\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n            actions.splice(actions.indexOf(action), 1);\n        }\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n            this.movableCache = {};\n            this.frozenRightCache = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[j] = blocks[j] + gLen;\n            this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[i]) < block) {\n                rows = rows.concat(this.cache[keys[i]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined\n                    && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = rows.concat(this.cache[keys[i]]);\n        }\n        return rows;\n    };\n    VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n        var cells = [];\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n        }\n        return cells;\n    };\n    VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n        var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n        var blockSize = this.parent.contentModule.getBlockSize();\n        for (var i = 1; i <= blocks; i++) {\n            var count = 0;\n            this.cache[i] = [];\n            for (var j = ((i - 1) * blockSize); j < rows.length; j++) {\n                if (count === blockSize) {\n                    break;\n                }\n                this.cache[i].push(rows[j]);\n                if (rows[j].isDataRow) {\n                    count++;\n                }\n            }\n        }\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"]},"metadata":{},"sourceType":"module"}