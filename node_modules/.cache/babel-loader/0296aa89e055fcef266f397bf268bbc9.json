{"ast":null,"code":"import { EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { debounce } from '@syncfusion/ej2-base';\n/**\n * InterSectionObserver - class watch whether it enters the viewport.\n *\n * @hidden\n */\n\nvar InterSectionObserver =\n/** @class */\nfunction () {\n  function InterSectionObserver(element, options, movableEle) {\n    var _this = this;\n\n    this.fromWheel = false;\n    this.touchMove = false;\n    this.options = {};\n    this.sentinelInfo = {\n      'up': {\n        check: function (rect, info) {\n          var top = rect.top - _this.containerRect.top;\n          info.entered = top >= 0;\n          return top + _this.options.pageHeight / 2 >= 0;\n        },\n        axis: 'Y'\n      },\n      'down': {\n        check: function (rect, info) {\n          var bottom = rect.bottom;\n          info.entered = rect.bottom <= _this.containerRect.bottom;\n          return bottom - _this.containerRect.top - _this.options.pageHeight / 2 <= _this.options.pageHeight / 2;\n        },\n        axis: 'Y'\n      },\n      'right': {\n        check: function (rect, info) {\n          var right = rect.right;\n\n          if (_this.movableEle) {\n            info.entered = right < _this.movableContainerRect.right;\n            return right - _this.movableContainerRect.width <= _this.movableContainerRect.right;\n          }\n\n          info.entered = right < _this.containerRect.right;\n          return right - _this.containerRect.width <= _this.containerRect.right;\n        },\n        axis: 'X'\n      },\n      'left': {\n        check: function (rect, info) {\n          var left = rect.left;\n          info.entered = left > 0;\n\n          if (_this.movableEle) {\n            return left + _this.movableContainerRect.width >= _this.movableContainerRect.left;\n          }\n\n          return left + _this.containerRect.width >= _this.containerRect.left;\n        },\n        axis: 'X'\n      }\n    };\n    this.element = element;\n    this.options = options;\n    this.movableEle = movableEle;\n  }\n\n  InterSectionObserver.prototype.observe = function (callback, onEnterCallback) {\n    var _this = this;\n\n    this.containerRect = this.options.container.getBoundingClientRect();\n    EventHandler.add(this.options.container, 'wheel', function () {\n      return _this.fromWheel = true;\n    }, this);\n    EventHandler.add(this.options.container, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n\n    if (this.options.movableContainer) {\n      this.movableContainerRect = this.options.movableContainer.getBoundingClientRect();\n      EventHandler.add(this.options.scrollbar, 'wheel', function () {\n        return _this.fromWheel = true;\n      }, this);\n      EventHandler.add(this.options.scrollbar, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n    }\n  };\n\n  InterSectionObserver.prototype.check = function (direction) {\n    var info = this.sentinelInfo[direction];\n\n    if (this.movableContainerRect && (direction === 'left' || direction === 'right')) {\n      return info.check(this.movableEle.getBoundingClientRect(), info);\n    }\n\n    return info.check(this.element.getBoundingClientRect(), info);\n  };\n\n  InterSectionObserver.prototype.virtualScrollHandler = function (callback, onEnterCallback) {\n    var _this = this;\n\n    var delay = Browser.info.name === 'chrome' ? 200 : 100;\n    var debounced100 = debounce(callback, delay);\n    var debounced50 = debounce(callback, 50);\n    this.options.prevTop = this.options.prevLeft = 0;\n    return function (e) {\n      var top = _this.options.movableContainer ? _this.options.container.scrollTop : e.target.scrollTop;\n      var left = _this.options.movableContainer ? _this.options.scrollbar.scrollLeft : e.target.scrollLeft;\n      var direction = _this.options.prevTop < top ? 'down' : 'up';\n      direction = _this.options.prevLeft === left ? direction : _this.options.prevLeft < left ? 'right' : 'left';\n      _this.options.prevTop = top;\n      _this.options.prevLeft = left;\n      var current = _this.sentinelInfo[direction];\n\n      if (_this.options.axes.indexOf(current.axis) === -1) {\n        return;\n      }\n\n      var check = _this.check(direction);\n\n      if (current.entered) {\n        if (_this.movableEle && (direction === 'right' || direction === 'left')) {\n          onEnterCallback(_this.movableEle, current, direction, {\n            top: top,\n            left: left\n          }, _this.fromWheel, check);\n        } else {\n          onEnterCallback(_this.element, current, direction, {\n            top: top,\n            left: left\n          }, _this.fromWheel, check);\n        }\n      }\n\n      if (check) {\n        var fn = debounced100; //this.fromWheel ? this.options.debounceEvent ? debounced100 : callback : debounced100;\n\n        if (current.axis === 'X') {\n          fn = debounced50;\n        }\n\n        fn({\n          direction: direction,\n          sentinel: current,\n          offset: {\n            top: top,\n            left: left\n          },\n          focusElement: document.activeElement\n        });\n      }\n\n      _this.fromWheel = false;\n    };\n  };\n\n  InterSectionObserver.prototype.setPageHeight = function (value) {\n    this.options.pageHeight = value;\n  };\n\n  return InterSectionObserver;\n}();\n\nexport { InterSectionObserver };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-grids/src/grid/services/intersection-observer.js"],"names":["EventHandler","Browser","debounce","InterSectionObserver","element","options","movableEle","_this","fromWheel","touchMove","sentinelInfo","check","rect","info","top","containerRect","entered","pageHeight","axis","bottom","right","movableContainerRect","width","left","prototype","observe","callback","onEnterCallback","container","getBoundingClientRect","add","virtualScrollHandler","movableContainer","scrollbar","direction","delay","name","debounced100","debounced50","prevTop","prevLeft","e","scrollTop","target","scrollLeft","current","axes","indexOf","fn","sentinel","offset","focusElement","document","activeElement","setPageHeight","value"],"mappings":"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","sourcesContent":["import { EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { debounce } from '@syncfusion/ej2-base';\n/**\n * InterSectionObserver - class watch whether it enters the viewport.\n *\n * @hidden\n */\nvar InterSectionObserver = /** @class */ (function () {\n    function InterSectionObserver(element, options, movableEle) {\n        var _this = this;\n        this.fromWheel = false;\n        this.touchMove = false;\n        this.options = {};\n        this.sentinelInfo = {\n            'up': {\n                check: function (rect, info) {\n                    var top = rect.top - _this.containerRect.top;\n                    info.entered = top >= 0;\n                    return top + (_this.options.pageHeight / 2) >= 0;\n                },\n                axis: 'Y'\n            },\n            'down': {\n                check: function (rect, info) {\n                    var bottom = rect.bottom;\n                    info.entered = rect.bottom <= _this.containerRect.bottom;\n                    return ((bottom - _this.containerRect.top) - (_this.options.pageHeight / 2)) <= _this.options.pageHeight / 2;\n                }, axis: 'Y'\n            },\n            'right': {\n                check: function (rect, info) {\n                    var right = rect.right;\n                    if (_this.movableEle) {\n                        info.entered = right < _this.movableContainerRect.right;\n                        return right - _this.movableContainerRect.width <= _this.movableContainerRect.right;\n                    }\n                    info.entered = right < _this.containerRect.right;\n                    return right - _this.containerRect.width <= _this.containerRect.right;\n                }, axis: 'X'\n            },\n            'left': {\n                check: function (rect, info) {\n                    var left = rect.left;\n                    info.entered = left > 0;\n                    if (_this.movableEle) {\n                        return left + _this.movableContainerRect.width >= _this.movableContainerRect.left;\n                    }\n                    return left + _this.containerRect.width >= _this.containerRect.left;\n                }, axis: 'X'\n            }\n        };\n        this.element = element;\n        this.options = options;\n        this.movableEle = movableEle;\n    }\n    InterSectionObserver.prototype.observe = function (callback, onEnterCallback) {\n        var _this = this;\n        this.containerRect = this.options.container.getBoundingClientRect();\n        EventHandler.add(this.options.container, 'wheel', function () { return _this.fromWheel = true; }, this);\n        EventHandler.add(this.options.container, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n        if (this.options.movableContainer) {\n            this.movableContainerRect = this.options.movableContainer.getBoundingClientRect();\n            EventHandler.add(this.options.scrollbar, 'wheel', function () { return _this.fromWheel = true; }, this);\n            EventHandler.add(this.options.scrollbar, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n        }\n    };\n    InterSectionObserver.prototype.check = function (direction) {\n        var info = this.sentinelInfo[direction];\n        if (this.movableContainerRect && (direction === 'left' || direction === 'right')) {\n            return info.check(this.movableEle.getBoundingClientRect(), info);\n        }\n        return info.check(this.element.getBoundingClientRect(), info);\n    };\n    InterSectionObserver.prototype.virtualScrollHandler = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this.options.prevTop = this.options.prevLeft = 0;\n        return function (e) {\n            var top = _this.options.movableContainer ? _this.options.container.scrollTop : e.target.scrollTop;\n            var left = _this.options.movableContainer ? _this.options.scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this.options.prevTop < top ? 'down' : 'up';\n            direction = _this.options.prevLeft === left ? direction : _this.options.prevLeft < left ? 'right' : 'left';\n            _this.options.prevTop = top;\n            _this.options.prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            if (_this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered) {\n                if (_this.movableEle && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this.movableEle, current, direction, { top: top, left: left }, _this.fromWheel, check);\n                }\n                else {\n                    onEnterCallback(_this.element, current, direction, { top: top, left: left }, _this.fromWheel, check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                //this.fromWheel ? this.options.debounceEvent ? debounced100 : callback : debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                }\n                fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                    focusElement: document.activeElement });\n            }\n            _this.fromWheel = false;\n        };\n    };\n    InterSectionObserver.prototype.setPageHeight = function (value) {\n        this.options.pageHeight = value;\n    };\n    return InterSectionObserver;\n}());\nexport { InterSectionObserver };\n"]},"metadata":{},"sourceType":"module"}