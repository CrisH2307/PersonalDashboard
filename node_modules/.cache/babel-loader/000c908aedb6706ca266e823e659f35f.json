{"ast":null,"code":"/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\n\nvar PdfBorders =\n/** @class */\nfunction () {\n  // Constructor\n\n  /**\n   * Create a new instance for `PdfBorders` class.\n   * @private\n   */\n  function PdfBorders() {\n    var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n    defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n    var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n    defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n    var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n    defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n    var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n    defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n    this.leftPen = defaultBorderPenLeft;\n    this.rightPen = defaultBorderPenRight;\n    this.topPen = defaultBorderPenTop;\n    this.bottomPen = defaultBorderPenBottom;\n  }\n\n  Object.defineProperty(PdfBorders.prototype, \"left\", {\n    // Properties\n\n    /**\n     * Gets or sets the `Left`.\n     * @private\n     */\n    get: function () {\n      return this.leftPen;\n    },\n    set: function (value) {\n      this.leftPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders.prototype, \"right\", {\n    /**\n     * Gets or sets the `Right`.\n     * @private\n     */\n    get: function () {\n      return this.rightPen;\n    },\n    set: function (value) {\n      this.rightPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders.prototype, \"top\", {\n    /**\n     * Gets or sets the `Top`.\n     * @private\n     */\n    get: function () {\n      return this.topPen;\n    },\n    set: function (value) {\n      this.topPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n    /**\n     * Gets or sets the `Bottom`.\n     * @private\n     */\n    get: function () {\n      return this.bottomPen;\n    },\n    set: function (value) {\n      this.bottomPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders.prototype, \"all\", {\n    /**\n     * sets the `All`.\n     * @private\n     */\n    set: function (value) {\n      this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n    /**\n     * Gets a value indicating whether this instance `is all`.\n     * @private\n     */\n    get: function () {\n      return this.leftPen === this.rightPen && this.leftPen === this.topPen && this.leftPen === this.bottomPen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBorders, \"default\", {\n    /**\n     * Gets the `default`.\n     * @private\n     */\n    get: function () {\n      return new PdfBorders();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfBorders;\n}();\n\nexport { PdfBorders };\n\nvar PdfPaddings =\n/** @class */\nfunction () {\n  function PdfPaddings(left, right, top, bottom) {\n    /**\n     * The 'left' border padding set.\n     * @private\n     */\n    this.hasLeftPad = false;\n    /**\n     * The 'right' border padding set.\n     * @private\n     */\n\n    this.hasRightPad = false;\n    /**\n     * The 'top' border padding set.\n     * @private\n     */\n\n    this.hasTopPad = false;\n    /**\n     * The 'bottom' border padding set.\n     * @private\n     */\n\n    this.hasBottomPad = false;\n\n    if (typeof left === 'undefined') {\n      //5.76 and 0 are taken from ms-word default table margins.\n      this.leftPad = this.rightPad = 5.76; //0.5 is set for top and bottom by default.\n\n      this.bottomPad = this.topPad = 0.5;\n    } else {\n      this.leftPad = left;\n      this.rightPad = right;\n      this.topPad = top;\n      this.bottomPad = bottom;\n      this.hasLeftPad = true;\n      this.hasRightPad = true;\n      this.hasTopPad = true;\n      this.hasBottomPad = true;\n    }\n  }\n\n  Object.defineProperty(PdfPaddings.prototype, \"left\", {\n    // Properties\n\n    /**\n     * Gets or sets the `left` value of the edge\n     * @private\n     */\n    get: function () {\n      return this.leftPad;\n    },\n    set: function (value) {\n      this.leftPad = value;\n      this.hasLeftPad = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPaddings.prototype, \"right\", {\n    /**\n     * Gets or sets the `right` value of the edge.\n     * @private\n     */\n    get: function () {\n      return this.rightPad;\n    },\n    set: function (value) {\n      this.rightPad = value;\n      this.hasRightPad = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPaddings.prototype, \"top\", {\n    /**\n     * Gets or sets the `top` value of the edge\n     * @private\n     */\n    get: function () {\n      return this.topPad;\n    },\n    set: function (value) {\n      this.topPad = value;\n      this.hasTopPad = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n    /**\n     * Gets or sets the `bottom` value of the edge.\n     * @private\n     */\n    get: function () {\n      return this.bottomPad;\n    },\n    set: function (value) {\n      this.bottomPad = value;\n      this.hasBottomPad = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPaddings.prototype, \"all\", {\n    /**\n     * Sets value to all sides `left,right,top and bottom`.s\n     * @private\n     */\n    set: function (value) {\n      this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n      this.hasLeftPad = true;\n      this.hasRightPad = true;\n      this.hasTopPad = true;\n      this.hasBottomPad = true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfPaddings;\n}();\n\nexport { PdfPaddings };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-richtexteditor/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js"],"names":["PdfPen","PdfDashStyle","PdfColor","PdfBorders","defaultBorderPenLeft","dashStyle","Solid","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","Object","defineProperty","prototype","get","set","value","enumerable","configurable","PdfPaddings","left","right","top","bottom","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad"],"mappings":"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","sourcesContent":["/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n"]},"metadata":{},"sourceType":"module"}