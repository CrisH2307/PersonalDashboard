{"ast":null,"code":"import { Dialog } from '@syncfusion/ej2-popups';\nimport { remove, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { appendChildren, applyBiggerTheme, addBiggerDialog } from '../base/util';\nimport { ResponsiveDialogRenderer } from './responsive-dialog-renderer';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport * as literals from '../base/string-literals';\n/**\n * Edit render module is used to render grid edit row.\n *\n * @hidden\n */\n\nvar DialogEditRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for render module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n   */\n  function DialogEditRender(parent, serviceLocator) {\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.dialogDestroy, this.destroy, this);\n    this.parent.on(events.destroy, this.destroy, this);\n  }\n\n  DialogEditRender.prototype.setLocaleObj = function () {\n    this.l10n = this.serviceLocator.getService('localization');\n  };\n\n  DialogEditRender.prototype.addNew = function (elements, args) {\n    this.isEdit = false;\n    this.createDialog(elements, args);\n  };\n\n  DialogEditRender.prototype.update = function (elements, args) {\n    this.isEdit = true;\n    this.createDialog(elements, args);\n  };\n\n  DialogEditRender.prototype.createDialogHeader = function (args) {\n    var gObj = this.parent;\n    var header;\n\n    if (this.parent.enableAdaptiveUI) {\n      var responsiveDlgRenderer = new ResponsiveDialogRenderer(this.parent, this.serviceLocator);\n      responsiveDlgRenderer.action = this.isEdit ? ResponsiveDialogAction.isEdit : ResponsiveDialogAction.isAdd;\n      return responsiveDlgRenderer.renderResponsiveHeader(undefined, args);\n    } else {\n      if (gObj.editSettings.headerTemplate) {\n        header = this.getDialogEditTemplateElement('HeaderTemplate', args);\n      } else if (this.isEdit) {\n        header = this.l10n.getConstant('EditFormTitle') + args.primaryKeyValue[0];\n      } else {\n        header = this.l10n.getConstant('AddFormTitle');\n      }\n    }\n\n    return header;\n  };\n\n  DialogEditRender.prototype.createDialog = function (elements, args) {\n    var gObj = this.parent;\n    this.dialog = this.parent.createElement('div', {\n      id: gObj.element.id + '_dialogEdit_wrapper',\n      styles: 'width: auto'\n    });\n\n    if (gObj.enableAdaptiveUI) {\n      this.dialog.classList.add('e-responsive-dialog');\n    }\n\n    this.dialog.setAttribute('aria-label', 'Dialog edit');\n    gObj.element.appendChild(this.dialog);\n    this.setLocaleObj(); // let position: PositionDataModel = this.parent.element.getBoundingClientRect().height < 400 ?\n    //     { X: 'center', Y: 'top' } : { X: 'center', Y: 'center' };\n\n    this.dialogObj = new Dialog(extend({\n      header: this.createDialogHeader(args),\n      isModal: true,\n      visible: true,\n      cssClass: 'e-edit-dialog',\n      content: this.getEditElement(elements, args),\n      showCloseIcon: true,\n      allowDragging: true,\n      // position: position,\n      close: this.dialogClose.bind(this),\n      created: this.dialogCreated.bind(this),\n      closeOnEscape: true,\n      width: gObj.editSettings.template ? 'auto' : '330px',\n      target: args.target ? args.target : document.body,\n      animationSettings: {\n        effect: 'None'\n      },\n      footerTemplate: gObj.editSettings.footerTemplate ? this.getDialogEditTemplateElement('FooterTemplate', args) : null,\n      buttons: [{\n        click: this.btnClick.bind(this),\n        buttonModel: {\n          content: this.l10n.getConstant('SaveButton'),\n          cssClass: 'e-primary',\n          isPrimary: true\n        }\n      }, {\n        click: this.btnClick.bind(this),\n        buttonModel: {\n          cssClass: 'e-flat',\n          content: this.l10n.getConstant('CancelButton')\n        }\n      }]\n    }, gObj.editSettings.dialog ? gObj.editSettings.dialog.params || {} : {}));\n    args.dialog = this.dialogObj;\n    var isStringTemplate = 'isStringTemplate';\n    this.dialogObj[isStringTemplate] = true;\n    this.renderResponsiveDialog();\n    this.dialogObj.appendTo(this.dialog);\n    applyBiggerTheme(this.parent.element, this.dialogObj.element.parentElement);\n\n    if (gObj.enableAdaptiveUI) {\n      this.dialogObj.show(true);\n    }\n  };\n\n  DialogEditRender.prototype.dialogCreated = function () {\n    addBiggerDialog(this.parent);\n  };\n\n  DialogEditRender.prototype.renderResponsiveDialog = function () {\n    var _this = this;\n\n    if (this.parent.enableAdaptiveUI) {\n      if (this.parent.adaptiveDlgTarget) {\n        this.dialogObj.target = this.parent.adaptiveDlgTarget;\n      }\n\n      this.dialogObj.buttons = [{}];\n      this.dialogObj.showCloseIcon = true;\n      this.dialogObj.visible = false;\n      this.dialogObj.width = '100%';\n\n      this.dialogObj.open = function () {\n        _this.dialogObj.element.style.maxHeight = '100%';\n      };\n    }\n  };\n\n  DialogEditRender.prototype.btnClick = function (e) {\n    if (this.l10n.getConstant('CancelButton').toLowerCase() === e.target.innerText.trim().toLowerCase()) {\n      this.dialogClose();\n    } else {\n      this.parent.endEdit();\n    }\n  };\n\n  DialogEditRender.prototype.dialogClose = function () {\n    this.parent.closeEdit();\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  DialogEditRender.prototype.destroy = function (args) {\n    var dialogEditTemplates = ['template', 'headerTemplate', 'footerTemplate'];\n\n    for (var i = 0; i < dialogEditTemplates.length; i++) {\n      if (this.parent.editSettings[dialogEditTemplates[i]]) {\n        var templateName = dialogEditTemplates[i].charAt(0).toUpperCase() + dialogEditTemplates[i].slice(1);\n        var editTemplateID = this.parent.element.id + 'editSettings' + templateName;\n        updateBlazorTemplate(editTemplateID, templateName, this.parent.editSettings);\n      }\n    }\n\n    this.parent.notify(events.destroyForm, {});\n    this.parent.isEdit = false;\n    this.parent.notify(events.toolbarRefresh, {});\n\n    if (this.dialog && !this.dialogObj.isDestroyed) {\n      this.dialogObj.destroy();\n      remove(this.dialog);\n    }\n  };\n\n  DialogEditRender.prototype.getDialogEditTemplateElement = function (dialogTemp, args) {\n    var tempDiv = this.parent.createElement('div', {\n      className: 'e-dialog' + dialogTemp\n    });\n    var dummyData = extend({}, args.rowData, {\n      isAdd: !this.isEdit\n    }, true);\n    var templateID = this.parent.element.id + 'editSettings' + dialogTemp;\n    appendChildren(tempDiv, (dialogTemp === 'HeaderTemplate' ? this.parent.getEditHeaderTemplate() : this.parent.getEditFooterTemplate())(dummyData, this.parent, 'editSettings' + dialogTemp, templateID));\n    updateBlazorTemplate(templateID, dialogTemp, this.parent.editSettings);\n    return tempDiv;\n  };\n\n  DialogEditRender.prototype.getEditElement = function (elements, args) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var div = this.parent.createElement('div', {\n      className: this.isEdit ? literals.editedRow : 'e-insertedrow'\n    });\n    var form = args.form = this.parent.createElement('form', {\n      id: gObj.element.id + 'EditForm',\n      className: 'e-gridform'\n    });\n\n    if (this.parent.editSettings.template) {\n      var editTemplateID = this.parent.element.id + 'editSettingsTemplate';\n      var dummyData = extend({}, args.rowData, {\n        isAdd: !this.isEdit\n      }, true);\n      var isReactCompiler = this.parent.isReact && typeof this.parent.editSettings.template !== 'string';\n\n      if (isReactCompiler) {\n        this.parent.getEditTemplate()(dummyData, this.parent, 'editSettingsTemplate', editTemplateID, null, null, form);\n        this.parent.renderTemplates();\n      } else {\n        appendChildren(form, this.parent.getEditTemplate()(dummyData, this.parent, 'editSettingsTemplate', editTemplateID));\n      }\n\n      var setRules = function () {\n        var columns = _this.parent.getColumns();\n\n        for (var i = 0; i < columns.length; i++) {\n          if (columns[i].validationRules) {\n            _this.parent.editModule.formObj.rules[columns[i].field] = columns[i].validationRules;\n          }\n        }\n      };\n\n      updateBlazorTemplate(editTemplateID, 'Template', this.parent.editSettings, true, setRules);\n      div.appendChild(form);\n      return div;\n    }\n\n    var table = this.parent.createElement('table', {\n      className: literals.table,\n      attrs: {\n        cellspacing: '6px'\n      }\n    });\n    var tbody = this.parent.createElement(literals.tbody);\n    var cols = gObj.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (this.parent.editModule.checkColumnIsGrouped(cols[i]) || cols[i].commands || cols[i].commandsTemplate || cols[i].type === 'checkbox') {\n        continue;\n      }\n\n      var tr = this.parent.createElement('tr');\n      var dataCell = this.parent.createElement('td', {\n        className: literals.rowCell,\n        attrs: {\n          style: 'text-align:' + (this.parent.enableRtl ? 'right' : 'left') + ';width:190px'\n        }\n      });\n      elements[cols[i].uid].classList.remove('e-input');\n      dataCell.appendChild(elements[cols[i].uid]);\n      tr.appendChild(dataCell);\n      tbody.appendChild(tr);\n    }\n\n    table.appendChild(tbody);\n    form.appendChild(table);\n    div.appendChild(form);\n    return div;\n  };\n\n  DialogEditRender.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.dialogDestroy, this.destroy);\n    this.parent.off(events.destroy, this.destroy);\n  };\n\n  return DialogEditRender;\n}();\n\nexport { DialogEditRender };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-richtexteditor/node_modules/@syncfusion/ej2-grids/src/grid/renderer/dialog-edit-renderer.js"],"names":["Dialog","remove","extend","updateBlazorTemplate","events","appendChildren","applyBiggerTheme","addBiggerDialog","ResponsiveDialogRenderer","ResponsiveDialogAction","literals","DialogEditRender","parent","serviceLocator","isDestroyed","on","dialogDestroy","destroy","prototype","setLocaleObj","l10n","getService","addNew","elements","args","isEdit","createDialog","update","createDialogHeader","gObj","header","enableAdaptiveUI","responsiveDlgRenderer","action","isAdd","renderResponsiveHeader","undefined","editSettings","headerTemplate","getDialogEditTemplateElement","getConstant","primaryKeyValue","dialog","createElement","id","element","styles","classList","add","setAttribute","appendChild","dialogObj","isModal","visible","cssClass","content","getEditElement","showCloseIcon","allowDragging","close","dialogClose","bind","created","dialogCreated","closeOnEscape","width","template","target","document","body","animationSettings","effect","footerTemplate","buttons","click","btnClick","buttonModel","isPrimary","params","isStringTemplate","renderResponsiveDialog","appendTo","parentElement","show","_this","adaptiveDlgTarget","open","style","maxHeight","e","toLowerCase","innerText","trim","endEdit","closeEdit","dialogEditTemplates","i","length","templateName","charAt","toUpperCase","slice","editTemplateID","notify","destroyForm","toolbarRefresh","dialogTemp","tempDiv","className","dummyData","rowData","templateID","getEditHeaderTemplate","getEditFooterTemplate","div","editedRow","form","isReactCompiler","isReact","getEditTemplate","renderTemplates","setRules","columns","getColumns","validationRules","editModule","formObj","rules","field","table","attrs","cellspacing","tbody","cols","checkColumnIsGrouped","commands","commandsTemplate","type","tr","dataCell","rowCell","enableRtl","uid","removeEventListener","off"],"mappings":"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","sourcesContent":["import { Dialog } from '@syncfusion/ej2-popups';\nimport { remove, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { appendChildren, applyBiggerTheme, addBiggerDialog } from '../base/util';\nimport { ResponsiveDialogRenderer } from './responsive-dialog-renderer';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport * as literals from '../base/string-literals';\n/**\n * Edit render module is used to render grid edit row.\n *\n * @hidden\n */\nvar DialogEditRender = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n     */\n    function DialogEditRender(parent, serviceLocator) {\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.dialogDestroy, this.destroy, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    }\n    DialogEditRender.prototype.setLocaleObj = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n    };\n    DialogEditRender.prototype.addNew = function (elements, args) {\n        this.isEdit = false;\n        this.createDialog(elements, args);\n    };\n    DialogEditRender.prototype.update = function (elements, args) {\n        this.isEdit = true;\n        this.createDialog(elements, args);\n    };\n    DialogEditRender.prototype.createDialogHeader = function (args) {\n        var gObj = this.parent;\n        var header;\n        if (this.parent.enableAdaptiveUI) {\n            var responsiveDlgRenderer = new ResponsiveDialogRenderer(this.parent, this.serviceLocator);\n            responsiveDlgRenderer.action = this.isEdit ? ResponsiveDialogAction.isEdit : ResponsiveDialogAction.isAdd;\n            return responsiveDlgRenderer.renderResponsiveHeader(undefined, args);\n        }\n        else {\n            if (gObj.editSettings.headerTemplate) {\n                header = this.getDialogEditTemplateElement('HeaderTemplate', args);\n            }\n            else if (this.isEdit) {\n                header = this.l10n.getConstant('EditFormTitle') + args.primaryKeyValue[0];\n            }\n            else {\n                header = this.l10n.getConstant('AddFormTitle');\n            }\n        }\n        return header;\n    };\n    DialogEditRender.prototype.createDialog = function (elements, args) {\n        var gObj = this.parent;\n        this.dialog = this.parent.createElement('div', { id: gObj.element.id + '_dialogEdit_wrapper', styles: 'width: auto' });\n        if (gObj.enableAdaptiveUI) {\n            this.dialog.classList.add('e-responsive-dialog');\n        }\n        this.dialog.setAttribute('aria-label', 'Dialog edit');\n        gObj.element.appendChild(this.dialog);\n        this.setLocaleObj();\n        // let position: PositionDataModel = this.parent.element.getBoundingClientRect().height < 400 ?\n        //     { X: 'center', Y: 'top' } : { X: 'center', Y: 'center' };\n        this.dialogObj = new Dialog(extend({\n            header: this.createDialogHeader(args), isModal: true, visible: true, cssClass: 'e-edit-dialog',\n            content: this.getEditElement(elements, args),\n            showCloseIcon: true,\n            allowDragging: true,\n            // position: position,\n            close: this.dialogClose.bind(this),\n            created: this.dialogCreated.bind(this),\n            closeOnEscape: true, width: gObj.editSettings.template ? 'auto' : '330px',\n            target: args.target ? args.target : document.body, animationSettings: { effect: 'None' },\n            footerTemplate: gObj.editSettings.footerTemplate ? this.getDialogEditTemplateElement('FooterTemplate', args) : null,\n            buttons: [{\n                    click: this.btnClick.bind(this),\n                    buttonModel: { content: this.l10n.getConstant('SaveButton'), cssClass: 'e-primary', isPrimary: true }\n                },\n                { click: this.btnClick.bind(this), buttonModel: { cssClass: 'e-flat', content: this.l10n.getConstant('CancelButton') } }]\n        }, gObj.editSettings.dialog ? (gObj.editSettings.dialog.params || {}) : {}));\n        args.dialog = this.dialogObj;\n        var isStringTemplate = 'isStringTemplate';\n        this.dialogObj[isStringTemplate] = true;\n        this.renderResponsiveDialog();\n        this.dialogObj.appendTo(this.dialog);\n        applyBiggerTheme(this.parent.element, this.dialogObj.element.parentElement);\n        if (gObj.enableAdaptiveUI) {\n            this.dialogObj.show(true);\n        }\n    };\n    DialogEditRender.prototype.dialogCreated = function () {\n        addBiggerDialog(this.parent);\n    };\n    DialogEditRender.prototype.renderResponsiveDialog = function () {\n        var _this = this;\n        if (this.parent.enableAdaptiveUI) {\n            if (this.parent.adaptiveDlgTarget) {\n                this.dialogObj.target = this.parent.adaptiveDlgTarget;\n            }\n            this.dialogObj.buttons = [{}];\n            this.dialogObj.showCloseIcon = true;\n            this.dialogObj.visible = false;\n            this.dialogObj.width = '100%';\n            this.dialogObj.open = function () {\n                _this.dialogObj.element.style.maxHeight = '100%';\n            };\n        }\n    };\n    DialogEditRender.prototype.btnClick = function (e) {\n        if (this.l10n.getConstant('CancelButton').toLowerCase() === e.target.innerText.trim().toLowerCase()) {\n            this.dialogClose();\n        }\n        else {\n            this.parent.endEdit();\n        }\n    };\n    DialogEditRender.prototype.dialogClose = function () {\n        this.parent.closeEdit();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DialogEditRender.prototype.destroy = function (args) {\n        var dialogEditTemplates = ['template', 'headerTemplate', 'footerTemplate'];\n        for (var i = 0; i < dialogEditTemplates.length; i++) {\n            if (this.parent.editSettings[dialogEditTemplates[i]]) {\n                var templateName = dialogEditTemplates[i].charAt(0).toUpperCase() + dialogEditTemplates[i].slice(1);\n                var editTemplateID = this.parent.element.id + 'editSettings' + templateName;\n                updateBlazorTemplate(editTemplateID, templateName, this.parent.editSettings);\n            }\n        }\n        this.parent.notify(events.destroyForm, {});\n        this.parent.isEdit = false;\n        this.parent.notify(events.toolbarRefresh, {});\n        if (this.dialog && !this.dialogObj.isDestroyed) {\n            this.dialogObj.destroy();\n            remove(this.dialog);\n        }\n    };\n    DialogEditRender.prototype.getDialogEditTemplateElement = function (dialogTemp, args) {\n        var tempDiv = this.parent.createElement('div', { className: 'e-dialog' + dialogTemp });\n        var dummyData = extend({}, args.rowData, { isAdd: !this.isEdit }, true);\n        var templateID = this.parent.element.id + 'editSettings' + dialogTemp;\n        appendChildren(tempDiv, (dialogTemp === 'HeaderTemplate' ? this.parent.getEditHeaderTemplate() :\n            this.parent.getEditFooterTemplate())(dummyData, this.parent, 'editSettings' + dialogTemp, templateID));\n        updateBlazorTemplate(templateID, dialogTemp, this.parent.editSettings);\n        return tempDiv;\n    };\n    DialogEditRender.prototype.getEditElement = function (elements, args) {\n        var _this = this;\n        var gObj = this.parent;\n        var div = this.parent.createElement('div', { className: this.isEdit ? literals.editedRow : 'e-insertedrow' });\n        var form = args.form =\n            this.parent.createElement('form', { id: gObj.element.id + 'EditForm', className: 'e-gridform' });\n        if (this.parent.editSettings.template) {\n            var editTemplateID = this.parent.element.id + 'editSettingsTemplate';\n            var dummyData = extend({}, args.rowData, { isAdd: !this.isEdit }, true);\n            var isReactCompiler = this.parent.isReact && typeof (this.parent.editSettings.template) !== 'string';\n            if (isReactCompiler) {\n                this.parent.getEditTemplate()(dummyData, this.parent, 'editSettingsTemplate', editTemplateID, null, null, form);\n                this.parent.renderTemplates();\n            }\n            else {\n                appendChildren(form, this.parent.getEditTemplate()(dummyData, this.parent, 'editSettingsTemplate', editTemplateID));\n            }\n            var setRules = function () {\n                var columns = _this.parent.getColumns();\n                for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].validationRules) {\n                        _this.parent.editModule.formObj.rules[columns[i].field] =\n                            columns[i].validationRules;\n                    }\n                }\n            };\n            updateBlazorTemplate(editTemplateID, 'Template', this.parent.editSettings, true, setRules);\n            div.appendChild(form);\n            return div;\n        }\n        var table = this.parent.createElement('table', { className: literals.table, attrs: { cellspacing: '6px' } });\n        var tbody = this.parent.createElement(literals.tbody);\n        var cols = gObj.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (this.parent.editModule.checkColumnIsGrouped(cols[i]) || cols[i].commands || cols[i].commandsTemplate ||\n                cols[i].type === 'checkbox') {\n                continue;\n            }\n            var tr = this.parent.createElement('tr');\n            var dataCell = this.parent.createElement('td', {\n                className: literals.rowCell, attrs: {\n                    style: 'text-align:' + (this.parent.enableRtl ? 'right' : 'left') + ';width:190px'\n                }\n            });\n            elements[cols[i].uid].classList.remove('e-input');\n            dataCell.appendChild(elements[cols[i].uid]);\n            tr.appendChild(dataCell);\n            tbody.appendChild(tr);\n        }\n        table.appendChild(tbody);\n        form.appendChild(table);\n        div.appendChild(form);\n        return div;\n    };\n    DialogEditRender.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.dialogDestroy, this.destroy);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    return DialogEditRender;\n}());\nexport { DialogEditRender };\n"]},"metadata":{},"sourceType":"module"}