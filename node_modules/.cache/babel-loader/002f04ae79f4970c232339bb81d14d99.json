{"ast":null,"code":"import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\n\nvar MaskedDateTime =\n/** @class */\nfunction () {\n  function MaskedDateTime(parent) {\n    this.mask = '';\n    this.defaultConstant = {\n      day: 'day',\n      month: 'month',\n      year: 'year',\n      hour: 'hour',\n      minute: 'minute',\n      second: 'second',\n      dayOfTheWeek: 'day of the week'\n    };\n    this.hiddenMask = '';\n    this.validCharacters = 'dMyhmHfasz';\n    this.isDayPart = false;\n    this.isMonthPart = false;\n    this.isYearPart = false;\n    this.isHourPart = false;\n    this.isMinutePart = false;\n    this.isSecondsPart = false;\n    this.isMilliSecondsPart = false;\n    this.monthCharacter = '';\n    this.periodCharacter = '';\n    this.isHiddenMask = false;\n    this.isComplete = false;\n    this.isNavigate = false;\n    this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n    this.isDeletion = false;\n    this.isShortYear = false;\n    this.isDeleteKey = false;\n    this.isDateZero = false;\n    this.isMonthZero = false;\n    this.isYearZero = false;\n    this.dayTypeCount = 0;\n    this.monthTypeCount = 0;\n    this.hourTypeCount = 0;\n    this.minuteTypeCount = 0;\n    this.secondTypeCount = 0;\n    this.parent = parent;\n    this.dateformat = this.getCulturedFormat();\n    this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n    this.maskDateValue.setMonth(0);\n    this.maskDateValue.setHours(0);\n    this.maskDateValue.setMinutes(0);\n    this.maskDateValue.setSeconds(0);\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  MaskedDateTime.prototype.getModuleName = function () {\n    return 'MaskedDateTime';\n  };\n\n  MaskedDateTime.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('createMask', this.createMask, this);\n    this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n    this.parent.on('inputHandler', this.maskInputHandler, this);\n    this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n    this.parent.on('clearHandler', this.clearHandler, this);\n  };\n\n  MaskedDateTime.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('createMask', this.createMask);\n    this.parent.off('setMaskSelection', this.validCharacterCheck);\n    this.parent.off('inputHandler', this.maskInputHandler);\n    this.parent.off('keyDownHandler', this.maskKeydownHandler);\n    this.parent.off('clearHandler', this.clearHandler);\n  };\n\n  MaskedDateTime.prototype.createMask = function (dateformat) {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.dateformat = this.getCulturedFormat();\n    if (this.parent.maskPlaceholder.day) this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n    if (this.parent.maskPlaceholder.month) this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n    if (this.parent.maskPlaceholder.year) this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n    if (this.parent.maskPlaceholder.hour) this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n    if (this.parent.maskPlaceholder.minute) this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n    if (this.parent.maskPlaceholder.second) this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n    if (this.parent.maskPlaceholder.dayOfTheWeek) this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n    this.getCUltureMaskFormat();\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.mask = this.previousValue = inputValue;\n    this.parent.maskedDateValue = this.mask;\n\n    if (this.parent.value) {\n      this.setDynamicValue();\n    }\n  };\n\n  MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n    this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n    this.objectString = Object.keys(this.defaultConstant);\n\n    for (var i = 0; i < this.objectString.length; i++) {\n      this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n    }\n  };\n\n  MaskedDateTime.prototype.validCharacterCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n\n    for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n      if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n        this.setSelection(this.hiddenMask[i]);\n        return;\n      }\n\n      if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n        this.setSelection(this.hiddenMask[j]);\n        return;\n      }\n    }\n  };\n\n  MaskedDateTime.prototype.setDynamicValue = function () {\n    this.maskDateValue = this.parent.value;\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n    this.updateValue(); // this.parent.inputElement.selectionStart = start;\n    // this.validCharacterCheck();\n  };\n\n  MaskedDateTime.prototype.setSelection = function (validChar) {\n    var start = -1;\n    var end = 0;\n\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (this.hiddenMask[i] === validChar) {\n        end = i + 1;\n\n        if (start === -1) {\n          start = i;\n        }\n      }\n    }\n\n    if (start < 0) {\n      start = 0;\n    }\n\n    this.parent.inputElement.setSelectionRange(start, end);\n  };\n\n  MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n    if (args.e.key === 'Delete') {\n      this.isDeleteKey = true;\n      return;\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB || args.e.key === END || args.e.key === HOME)) {\n      var start = this.parent.inputElement.selectionStart;\n      var end = this.parent.inputElement.selectionEnd;\n      var length_1 = this.parent.inputElement.value.length;\n\n      if (start == 0 && end == length_1 && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n        var index = args.e.action === SHIFTTAB ? end : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n      }\n\n      if (args.e.key === END || args.e.key === HOME) {\n        var range = args.e.key === END ? length_1 : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n      }\n\n      this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n      var start = this.parent.inputElement.selectionStart;\n      this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n      var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = true;\n      this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = false;\n      this.previousHiddenMask = this.hiddenMask;\n      this.previousValue = inputValue;\n      this.parent.inputElement.value = inputValue;\n      this.parent.inputElement.selectionStart = start;\n      this.validCharacterCheck();\n    }\n  };\n\n  MaskedDateTime.prototype.differenceCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var inputValue = this.parent.inputElement.value;\n    var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n    var newVal = inputValue.substring(0, start);\n    var newDateValue = new Date(+this.maskDateValue);\n    var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n    if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n      for (var i = newVal.length; i < previousVal.length; i++) {\n        if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n          this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n        }\n      }\n\n      if (this.isDeletion) {\n        return;\n      }\n    }\n\n    switch (this.previousHiddenMask[start - 1]) {\n      case 'd':\n        var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.isDateZero = newVal[start - 1] == '0';\n\n        if (isNaN(date)) {\n          return;\n        }\n\n        for (var i = 0; date > maxDate; i++) {\n          date = parseInt(date.toString().slice(1), 10);\n        }\n\n        if (date >= 1) {\n          newDateValue.setDate(date);\n          this.isNavigate = date.toString().length === 2;\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n\n          if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n            return;\n          }\n\n          this.isDayPart = true;\n          this.dayTypeCount = this.dayTypeCount + 1;\n        } else {\n          this.isDayPart = false;\n          this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n        }\n\n        break;\n\n      case 'M':\n        var month = void 0;\n\n        if (newDateValue.getMonth().toString().length < 2) {\n          month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        } else {\n          month = parseInt(newVal[start - 1], 10);\n        }\n\n        this.isMonthZero = newVal[start - 1] == '0';\n\n        if (!isNaN(month)) {\n          while (month > 12) {\n            month = parseInt(month.toString().slice(1), 10);\n          }\n\n          if (month >= 1) {\n            newDateValue.setMonth(month - 1);\n            this.isNavigate = month.toString().length === 2;\n\n            if (newDateValue.getMonth() !== month - 1) {\n              newDateValue.setDate(1);\n              newDateValue.setMonth(month - 1);\n            }\n\n            if (this.isDayPart) {\n              var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n              var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n              if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                newDateValue.setDate(currentMaxDate);\n              }\n            }\n\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            this.isMonthPart = true;\n            this.monthTypeCount = this.monthTypeCount + 1;\n          } else {\n            newDateValue.setMonth(0);\n            this.isMonthPart = false;\n            this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n          }\n        } else {\n          // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n          var monthString = this.getCulturedValue('months[stand-alone].wide');\n          var monthValue = Object.keys(monthString);\n          this.monthCharacter += newVal[start - 1].toLowerCase();\n\n          while (this.monthCharacter.length > 0) {\n            var i = 1;\n\n            for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n              var months = monthValue_1[_i];\n\n              if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                newDateValue.setMonth(i - 1);\n                this.isMonthPart = true;\n                this.maskDateValue = newDateValue;\n                return;\n              }\n\n              i++;\n            }\n\n            this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n          }\n        }\n\n        break;\n\n      case 'y':\n        var year = (this.isYearPart && newDateValue.getFullYear().toString().length < 4 && !this.isShortYear ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.isShortYear = false;\n        this.isYearZero = newVal[start - 1] == '0';\n\n        if (isNaN(year)) {\n          return;\n        }\n\n        while (year > 9999) {\n          year = parseInt(year.toString().slice(1), 10);\n        }\n\n        if (year < 1) {\n          this.isYearPart = false;\n        } else {\n          newDateValue.setFullYear(year);\n\n          if (year.toString().length === 4) {\n            this.isNavigate = true;\n          }\n\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n          this.isYearPart = true;\n        }\n\n        break;\n\n      case 'h':\n        this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        while (this.hour > 12) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + this.hour % 12);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n\n      case 'H':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        for (var i = 0; this.hour > 23; i++) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(this.hour);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n\n      case 'm':\n        var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(minutes)) {\n          return;\n        }\n\n        for (var i = 0; minutes > 59; i++) {\n          minutes = parseInt(minutes.toString().slice(1), 10);\n        }\n\n        newDateValue.setMinutes(minutes);\n        this.isNavigate = minutes.toString().length === 2;\n        this.isMinutePart = true;\n        this.minuteTypeCount = this.minuteTypeCount + 1;\n        break;\n\n      case 's':\n        var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(seconds)) {\n          return;\n        }\n\n        for (var i = 0; seconds > 59; i++) {\n          seconds = parseInt(seconds.toString().slice(1), 10);\n        }\n\n        newDateValue.setSeconds(seconds);\n        this.isNavigate = seconds.toString().length === 2;\n        this.isSecondsPart = true;\n        this.secondTypeCount = this.secondTypeCount + 1;\n        break;\n\n      case 'a':\n        this.periodCharacter += newVal[start - 1].toLowerCase(); // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n\n        var periodString = this.getCulturedValue('dayPeriods.format.wide');\n        var periodkeys = Object.keys(periodString); //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n\n        for (var i = 0; this.periodCharacter.length > 0; i++) {\n          if (periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12 || periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12) {\n            newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n            this.maskDateValue = newDateValue;\n          }\n\n          this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length); // Object.values()\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.maskDateValue = newDateValue;\n  };\n\n  MaskedDateTime.prototype.formatCheck = function () {\n    var proxy = this;\n\n    function formatValueSpecifier(formattext) {\n      var isSymbol;\n      var result;\n      var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n      var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n      var daysWide = proxy.getCulturedValue('days[stand-alone].wide');\n      var dayKeyWide = Object.keys(daysWide);\n      var daysNarrow = proxy.getCulturedValue('days[stand-alone].narrow');\n      var dayKeyNarrow = Object.keys(daysNarrow);\n      var monthAbbreviated = proxy.getCulturedValue('months[stand-alone].abbreviated');\n      var monthWide = proxy.getCulturedValue('months[stand-alone].wide');\n      var periodString = proxy.getCulturedValue('dayPeriods.format.wide');\n      var periodkeys = Object.keys(periodString);\n      var milliseconds;\n      var dateOptions;\n\n      switch (formattext) {\n        case 'ddd':\n        case 'dddd':\n        case 'd':\n          result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n          break;\n\n        case 'dd':\n          result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n\n          if (proxy.dayTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.dayTypeCount = 0;\n          }\n\n          break;\n\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'M':\n          result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n          break;\n\n        case 'MM':\n          result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n\n          if (proxy.monthTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.monthTypeCount = 0;\n          }\n\n          break;\n\n        case 'MMM':\n          result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMMM':\n          result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'yy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n\n          if (proxy.isYearPart) {\n            proxy.isNavigate = proxy.isShortYear = (proxy.maskDateValue.getFullYear() % 100).toString().length === 2;\n          }\n\n          break;\n\n        case 'y':\n        case 'yyyy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n          break;\n\n        case 'h':\n          result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'hh':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'H':\n          result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'HH':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'm':\n          result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n          break;\n\n        case 'mm':\n          result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n\n          if (proxy.minuteTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.minuteTypeCount = 0;\n          }\n\n          break;\n\n        case 's':\n          result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n          break;\n\n        case 'ss':\n          result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n\n          if (proxy.secondTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.secondTypeCount = 0;\n          }\n\n          break;\n\n        case 'f':\n          result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n          break;\n\n        case 'ff':\n          milliseconds = proxy.maskDateValue.getMilliseconds();\n\n          if (proxy.maskDateValue.getMilliseconds() > 99) {\n            milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n          }\n\n          result = proxy.roundOff(milliseconds, 2);\n          break;\n\n        case 'fff':\n          result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n          break;\n\n        case 'a':\n        case 'aa':\n          result = proxy.maskDateValue.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n          break;\n\n        case 'z':\n        case 'zz':\n        case 'zzz':\n        case 'zzzz':\n          dateOptions = {\n            format: formattext,\n            type: 'dateTime',\n            skeleton: 'yMd',\n            calendar: proxy.parent.calendarMode\n          };\n          result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n          break;\n      }\n\n      result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n\n      if (proxy.isHiddenMask) {\n        var hiddenChar = '';\n\n        for (var i = 0; i < result.length; i++) {\n          hiddenChar += formattext[0];\n        }\n\n        return hiddenChar;\n      } else {\n        return result;\n      }\n    }\n\n    return formatValueSpecifier;\n  };\n\n  MaskedDateTime.prototype.maskInputHandler = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var selectionChar = this.previousHiddenMask[start - 1];\n    var inputValue;\n    this.differenceCheck();\n    inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isDateZero = this.isMonthZero = this.isYearZero = false;\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.inputElement.value = inputValue;\n    this.parent.inputElement.selectionStart = start;\n    this.validCharacterCheck();\n\n    if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n      var isbackward = this.isNavigate ? false : true;\n      this.isNavigate = this.isDeletion = false;\n      this.navigateSelection(isbackward);\n    }\n\n    this.isDeleteKey = false; // this.setSelection(selectionChar);\n    // this.navigateSelection(inputValue);\n  };\n\n  MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n    var start = this.parent.inputElement.selectionStart;\n    var end = this.parent.inputElement.selectionEnd;\n    var formatIndex = isbackward ? start - 1 : end + 1;\n\n    while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n      if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n        this.setSelection(this.hiddenMask[formatIndex]);\n        break;\n      }\n\n      formatIndex = formatIndex + (isbackward ? -1 : 1);\n    }\n  };\n\n  MaskedDateTime.prototype.roundOff = function (val, count) {\n    var valueText = val.toString();\n    var length = count - valueText.length;\n    var result = '';\n\n    for (var i = 0; i < length; i++) {\n      result += '0';\n    }\n\n    return result + valueText;\n  };\n\n  MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n    var result = resultValue;\n\n    if (isZero && !isDayPart) {\n      result = '0';\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n    switch (format) {\n      case 'd':\n        this.isDayPart = isSegment;\n        break;\n\n      case 'M':\n        this.isMonthPart = isSegment;\n\n        if (!isSegment) {\n          this.maskDateValue.setMonth(0);\n          this.monthCharacter = '';\n        }\n\n        break;\n\n      case 'y':\n        this.isYearPart = isSegment;\n        break;\n\n      case 'H':\n      case 'h':\n        this.isHourPart = isSegment;\n\n        if (!isSegment) {\n          this.periodCharacter = '';\n        }\n\n        break;\n\n      case 'm':\n        this.isMinutePart = isSegment;\n        break;\n\n      case 's':\n        this.isSecondsPart = isSegment;\n        break;\n\n      default:\n        return false;\n    }\n\n    return true;\n  };\n\n  MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    } else {\n      return;\n    }\n\n    var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    var incrementValue = isDecrement ? -1 : 1;\n\n    switch (formatText) {\n      case 'd':\n        newDateValue.setDate(newDateValue.getDate() + incrementValue);\n        break;\n\n      case 'M':\n        var newMonth = newDateValue.getMonth() + incrementValue;\n        newDateValue.setDate(1);\n        newDateValue.setMonth(newMonth);\n\n        if (this.isDayPart) {\n          var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n          var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n          if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n            newDateValue.setDate(currentMaxDate);\n          } else {\n            newDateValue.setDate(this.previousDate.getDate());\n          }\n        } else {\n          newDateValue.setDate(this.previousDate.getDate());\n        }\n\n        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n        break;\n\n      case 'y':\n        newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n        break;\n\n      case 'H':\n      case 'h':\n        newDateValue.setHours(newDateValue.getHours() + incrementValue);\n        break;\n\n      case 'm':\n        newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n        break;\n\n      case 's':\n        newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n        break;\n\n      case 'a':\n        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n        break;\n\n      default:\n        break;\n    }\n\n    this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      this.handleDeletion(this.hiddenMask[start], true);\n    }\n  };\n\n  MaskedDateTime.prototype.getCulturedValue = function (format) {\n    var locale = this.parent.locale;\n    var result;\n\n    if (locale === 'en' || locale === 'en-US') {\n      result = getValue(format, getDefaultDateObject());\n    } else {\n      result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.getCulturedFormat = function () {\n    var formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n    if (this.parent.moduleName == 'datepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.format && this.parent.formatString) {\n        formatString = this.parent.formatString;\n      }\n    }\n\n    if (this.parent.moduleName == 'datetimepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.dateTimeFormat) {\n        formatString = this.parent.dateTimeFormat;\n      }\n    }\n\n    if (this.parent.moduleName == 'timepicker') {\n      formatString = this.parent.cldrTimeFormat();\n    }\n\n    return formatString;\n  };\n\n  MaskedDateTime.prototype.clearHandler = function () {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.updateValue();\n  };\n\n  MaskedDateTime.prototype.updateValue = function () {\n    this.monthCharacter = this.periodCharacter = '';\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.updateInputValue(inputValue); //this.parent.inputElement.value = inputValue;\n  };\n\n  MaskedDateTime.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return MaskedDateTime;\n}();\n\nexport { MaskedDateTime };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-calendars/src/maskbase/masked-date-time.js"],"names":["L10n","getValue","getDefaultDateObject","cldrData","ARROWLEFT","ARROWRIGHT","ARROWUP","ARROWDOWN","TAB","SHIFTTAB","END","HOME","MaskedDateTime","parent","mask","defaultConstant","day","month","year","hour","minute","second","dayOfTheWeek","hiddenMask","validCharacters","isDayPart","isMonthPart","isYearPart","isHourPart","isMinutePart","isSecondsPart","isMilliSecondsPart","monthCharacter","periodCharacter","isHiddenMask","isComplete","isNavigate","formatRegex","isDeletion","isShortYear","isDeleteKey","isDateZero","isMonthZero","isYearZero","dayTypeCount","monthTypeCount","hourTypeCount","minuteTypeCount","secondTypeCount","dateformat","getCulturedFormat","maskDateValue","value","Date","setMonth","setHours","setMinutes","setSeconds","previousDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","removeEventListener","addEventListener","prototype","getModuleName","isDestroyed","on","createMask","validCharacterCheck","maskInputHandler","maskKeydownHandler","clearHandler","off","maskPlaceholder","toString","getCUltureMaskFormat","inputValue","replace","formatCheck","previousHiddenMask","previousValue","maskedDateValue","setDynamicValue","l10n","moduleName","locale","objectString","Object","keys","i","length","getConstant","start","inputElement","selectionStart","j","indexOf","setSelection","updateValue","validChar","end","setSelectionRange","args","e","key","altKey","ctrlKey","action","selectionEnd","length_1","index","range","navigateSelection","dateAlteration","differenceCheck","previousVal","substring","newVal","newDateValue","maxDate","handleDeletion","date","parseInt","isNaN","slice","setDate","previousMaxDate","currentMaxDate","monthString","getCulturedValue","monthValue","toLowerCase","_i","monthValue_1","months","setFullYear","Math","floor","minutes","seconds","periodString","periodkeys","proxy","formatValueSpecifier","formattext","isSymbol","result","daysAbbreviated","dayKeyAbbreviated","daysWide","dayKeyWide","daysNarrow","dayKeyNarrow","monthAbbreviated","monthWide","milliseconds","dateOptions","zeroCheck","roundOff","getDay","getMilliseconds","format","type","skeleton","calendar","calendarMode","globalize","formatDate","undefined","hiddenChar","selectionChar","isbackward","formatIndex","val","count","valueText","isZero","resultValue","isSegment","isDecrement","formatText","incrementValue","newMonth","formatString","dateTimeFormat","cldrTimeFormat","updateInputValue","destroy"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,oBAAzB,EAA+CC,QAA/C,QAA+D,sBAA/D;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,IAAI,GAAG,MAAX;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,eAAL,GAAuB;AACnBC,MAAAA,GAAG,EAAE,KADc;AAEnBC,MAAAA,KAAK,EAAE,OAFY;AAGnBC,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,IAAI,EAAE,MAJa;AAKnBC,MAAAA,MAAM,EAAE,QALW;AAMnBC,MAAAA,MAAM,EAAE,QANW;AAOnBC,MAAAA,YAAY,EAAE;AAPK,KAAvB;AASA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,eAAL,GAAuB,YAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,4HAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKnC,MAAL,GAAcA,MAAd;AACA,SAAKoC,UAAL,GAAkB,KAAKC,iBAAL,EAAlB;AACA,SAAKC,aAAL,GAAqB,KAAKtC,MAAL,CAAYuC,KAAZ,IAAqB,IAArB,GAA4B,IAAIC,IAAJ,CAAS,CAAC,KAAKxC,MAAL,CAAYuC,KAAtB,CAA5B,GAA2D,IAAIC,IAAJ,EAAhF;AACA,SAAKF,aAAL,CAAmBG,QAAnB,CAA4B,CAA5B;AACA,SAAKH,aAAL,CAAmBI,QAAnB,CAA4B,CAA5B;AACA,SAAKJ,aAAL,CAAmBK,UAAnB,CAA8B,CAA9B;AACA,SAAKL,aAAL,CAAmBM,UAAnB,CAA8B,CAA9B;AACA,SAAKC,YAAL,GAAoB,IAAIL,IAAJ,CAAS,KAAKF,aAAL,CAAmBQ,WAAnB,EAAT,EAA2C,KAAKR,aAAL,CAAmBS,QAAnB,EAA3C,EAA0E,KAAKT,aAAL,CAAmBU,OAAnB,EAA1E,EAAwG,KAAKV,aAAL,CAAmBW,QAAnB,EAAxG,EAAuI,KAAKX,aAAL,CAAmBY,UAAnB,EAAvI,EAAwK,KAAKZ,aAAL,CAAmBa,UAAnB,EAAxK,CAApB;AACA,SAAKC,mBAAL;AACA,SAAKC,gBAAL;AACH;;AACDtD,EAAAA,cAAc,CAACuD,SAAf,CAAyBC,aAAzB,GAAyC,YAAY;AACjD,WAAO,gBAAP;AACH,GAFD;;AAGAxD,EAAAA,cAAc,CAACuD,SAAf,CAAyBD,gBAAzB,GAA4C,YAAY;AACpD,QAAI,KAAKrD,MAAL,CAAYwD,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKxD,MAAL,CAAYyD,EAAZ,CAAe,YAAf,EAA6B,KAAKC,UAAlC,EAA8C,IAA9C;AACA,SAAK1D,MAAL,CAAYyD,EAAZ,CAAe,kBAAf,EAAmC,KAAKE,mBAAxC,EAA6D,IAA7D;AACA,SAAK3D,MAAL,CAAYyD,EAAZ,CAAe,cAAf,EAA+B,KAAKG,gBAApC,EAAsD,IAAtD;AACA,SAAK5D,MAAL,CAAYyD,EAAZ,CAAe,gBAAf,EAAiC,KAAKI,kBAAtC,EAA0D,IAA1D;AACA,SAAK7D,MAAL,CAAYyD,EAAZ,CAAe,cAAf,EAA+B,KAAKK,YAApC,EAAkD,IAAlD;AACH,GATD;;AAUA/D,EAAAA,cAAc,CAACuD,SAAf,CAAyBF,mBAAzB,GAA+C,YAAY;AACvD,QAAI,KAAKpD,MAAL,CAAYwD,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKxD,MAAL,CAAY+D,GAAZ,CAAgB,YAAhB,EAA8B,KAAKL,UAAnC;AACA,SAAK1D,MAAL,CAAY+D,GAAZ,CAAgB,kBAAhB,EAAoC,KAAKJ,mBAAzC;AACA,SAAK3D,MAAL,CAAY+D,GAAZ,CAAgB,cAAhB,EAAgC,KAAKH,gBAArC;AACA,SAAK5D,MAAL,CAAY+D,GAAZ,CAAgB,gBAAhB,EAAkC,KAAKF,kBAAvC;AACA,SAAK7D,MAAL,CAAY+D,GAAZ,CAAgB,cAAhB,EAAgC,KAAKD,YAArC;AACH,GATD;;AAUA/D,EAAAA,cAAc,CAACuD,SAAf,CAAyBI,UAAzB,GAAsC,UAAUtB,UAAV,EAAsB;AACxD,SAAKxB,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;AACA,SAAKmB,UAAL,GAAkB,KAAKC,iBAAL,EAAlB;AACA,QAAI,KAAKrC,MAAL,CAAYgE,eAAZ,CAA4B7D,GAAhC,EACI,KAAKD,eAAL,CAAqB,KAArB,IAA8B,KAAKF,MAAL,CAAYgE,eAAZ,CAA4B7D,GAA1D;AACJ,QAAI,KAAKH,MAAL,CAAYgE,eAAZ,CAA4B5D,KAAhC,EACI,KAAKF,eAAL,CAAqB,OAArB,IAAgC,KAAKF,MAAL,CAAYgE,eAAZ,CAA4B5D,KAA5D;AACJ,QAAI,KAAKJ,MAAL,CAAYgE,eAAZ,CAA4B3D,IAAhC,EACI,KAAKH,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAYgE,eAAZ,CAA4B3D,IAA3D;AACJ,QAAI,KAAKL,MAAL,CAAYgE,eAAZ,CAA4B1D,IAAhC,EACI,KAAKJ,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAYgE,eAAZ,CAA4B1D,IAA3D;AACJ,QAAI,KAAKN,MAAL,CAAYgE,eAAZ,CAA4BzD,MAAhC,EACI,KAAKL,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAYgE,eAAZ,CAA4BzD,MAA7D;AACJ,QAAI,KAAKP,MAAL,CAAYgE,eAAZ,CAA4BxD,MAAhC,EACI,KAAKN,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAYgE,eAAZ,CAA4BxD,MAA7D;AACJ,QAAI,KAAKR,MAAL,CAAYgE,eAAZ,CAA4BvD,YAAhC,EACI,KAAKP,eAAL,CAAqB,cAArB,IAAuC,KAAKF,MAAL,CAAYgE,eAAZ,CAA4BvD,YAA5B,CAAyCwD,QAAzC,EAAvC;AACJ,SAAKC,oBAAL;AACA,QAAIC,UAAU,GAAG,KAAK/B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAjB;AACA,SAAKhD,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAK0B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAlB;AACA,SAAKhD,YAAL,GAAoB,KAApB;AACA,SAAKiD,kBAAL,GAA0B,KAAK5D,UAA/B;AACA,SAAKT,IAAL,GAAY,KAAKsE,aAAL,GAAqBJ,UAAjC;AACA,SAAKnE,MAAL,CAAYwE,eAAZ,GAA8B,KAAKvE,IAAnC;;AACA,QAAI,KAAKD,MAAL,CAAYuC,KAAhB,EAAuB;AACnB,WAAKkC,eAAL;AACH;AACJ,GA5BD;;AA6BA1E,EAAAA,cAAc,CAACuD,SAAf,CAAyBY,oBAAzB,GAAgD,YAAY;AACxD,SAAKQ,IAAL,GAAY,IAAIvF,IAAJ,CAAS,KAAKa,MAAL,CAAY2E,UAArB,EAAiC,KAAKzE,eAAtC,EAAuD,KAAKF,MAAL,CAAY4E,MAAnE,CAAZ;AACA,SAAKC,YAAL,GAAoBC,MAAM,CAACC,IAAP,CAAY,KAAK7E,eAAjB,CAApB;;AACA,SAAK,IAAI8E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,YAAL,CAAkBI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,WAAK9E,eAAL,CAAqB,KAAK2E,YAAL,CAAkBG,CAAlB,EAAqBf,QAArB,EAArB,IAAwD,KAAKS,IAAL,CAAUQ,WAAV,CAAsB,KAAKL,YAAL,CAAkBG,CAAlB,EAAqBf,QAArB,EAAtB,CAAxD;AACH;AACJ,GAND;;AAOAlE,EAAAA,cAAc,CAACuD,SAAf,CAAyBK,mBAAzB,GAA+C,YAAY;AACvD,QAAIwB,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;;AACA,SAAK,IAAIL,CAAC,GAAGG,KAAR,EAAeG,CAAC,GAAGH,KAAK,GAAG,CAAhC,EAAmCH,CAAC,GAAG,KAAKtE,UAAL,CAAgBuE,MAApB,IAA8BK,CAAC,IAAI,CAAtE,EAAyEN,CAAC,IAAIM,CAAC,EAA/E,EAAmF;AAC/E,UAAIN,CAAC,GAAG,KAAKtE,UAAL,CAAgBuE,MAApB,IAA8B,KAAKtE,eAAL,CAAqB4E,OAArB,CAA6B,KAAK7E,UAAL,CAAgBsE,CAAhB,CAA7B,MAAqD,CAAC,CAAxF,EAA2F;AACvF,aAAKQ,YAAL,CAAkB,KAAK9E,UAAL,CAAgBsE,CAAhB,CAAlB;AACA;AACH;;AACD,UAAIM,CAAC,IAAI,CAAL,IAAU,KAAK3E,eAAL,CAAqB4E,OAArB,CAA6B,KAAK7E,UAAL,CAAgB4E,CAAhB,CAA7B,MAAqD,CAAC,CAApE,EAAuE;AACnE,aAAKE,YAAL,CAAkB,KAAK9E,UAAL,CAAgB4E,CAAhB,CAAlB;AACA;AACH;AACJ;AACJ,GAZD;;AAaAvF,EAAAA,cAAc,CAACuD,SAAf,CAAyBmB,eAAzB,GAA2C,YAAY;AACnD,SAAKnC,aAAL,GAAqB,KAAKtC,MAAL,CAAYuC,KAAjC;AACA,SAAK3B,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,IAAjH;AACA,SAAKwE,WAAL,GAHmD,CAInD;AACA;AACH,GAND;;AAOA1F,EAAAA,cAAc,CAACuD,SAAf,CAAyBkC,YAAzB,GAAwC,UAAUE,SAAV,EAAqB;AACzD,QAAIP,KAAK,GAAG,CAAC,CAAb;AACA,QAAIQ,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtE,UAAL,CAAgBuE,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAI,KAAKtE,UAAL,CAAgBsE,CAAhB,MAAuBU,SAA3B,EAAsC;AAClCC,QAAAA,GAAG,GAAGX,CAAC,GAAG,CAAV;;AACA,YAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdA,UAAAA,KAAK,GAAGH,CAAR;AACH;AACJ;AACJ;;AACD,QAAIG,KAAK,GAAG,CAAZ,EAAe;AACXA,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,SAAKnF,MAAL,CAAYoF,YAAZ,CAAyBQ,iBAAzB,CAA2CT,KAA3C,EAAkDQ,GAAlD;AACH,GAfD;;AAgBA5F,EAAAA,cAAc,CAACuD,SAAf,CAAyBO,kBAAzB,GAA8C,UAAUgC,IAAV,EAAgB;AAC1D,QAAIA,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAKpE,WAAL,GAAmB,IAAnB;AACA;AACH;;AACD,QAAK,CAACkE,IAAI,CAACC,CAAL,CAAOE,MAAR,IAAkB,CAACH,IAAI,CAACC,CAAL,CAAOG,OAA3B,KAAwCJ,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAexG,SAAf,IAA4BsG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAevG,UAA3C,IAAyDqG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAenG,QAAxE,IAAoFiG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAepG,GAAnG,IAA0GkG,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBtG,QAA5H,IACxCiG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAelG,GADyB,IAClBgG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAejG,IADrC,CAAJ,EACgD;AAC5C,UAAIqF,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,UAAIM,GAAG,GAAG,KAAK3F,MAAL,CAAYoF,YAAZ,CAAyBe,YAAnC;AACA,UAAIC,QAAQ,GAAG,KAAKpG,MAAL,CAAYoF,YAAZ,CAAyB7C,KAAzB,CAA+B0C,MAA9C;;AACA,UAAKE,KAAK,IAAI,CAAT,IAAcQ,GAAG,IAAIS,QAAtB,KAAoCP,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAepG,GAAf,IAAsBkG,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBtG,QAA5E,CAAJ,EAA2F;AACvF,YAAIyG,KAAK,GAAGR,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBtG,QAAlB,GAA6B+F,GAA7B,GAAmC,CAA/C;AACA,aAAK3F,MAAL,CAAYoF,YAAZ,CAAyBC,cAAzB,GAA0C,KAAKrF,MAAL,CAAYoF,YAAZ,CAAyBe,YAAzB,GAAwCE,KAAlF;AACH;;AACD,UAAIR,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAelG,GAAf,IAAsBgG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAejG,IAAzC,EAA+C;AAC3C,YAAIwG,KAAK,GAAGT,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAelG,GAAf,GAAqBuG,QAArB,GAAgC,CAA5C;AACA,aAAKpG,MAAL,CAAYoF,YAAZ,CAAyBC,cAAzB,GAA0C,KAAKrF,MAAL,CAAYoF,YAAZ,CAAyBe,YAAzB,GAAwCG,KAAlF;AACH;;AACD,WAAKC,iBAAL,CAAuBV,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAexG,SAAf,IAA4BsG,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBtG,QAA9C,IAA0DiG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAelG,GAAzE,GAA+E,IAA/E,GAAsF,KAA7G;AACH;;AACD,QAAK,CAACgG,IAAI,CAACC,CAAL,CAAOE,MAAR,IAAkB,CAACH,IAAI,CAACC,CAAL,CAAOG,OAA3B,KAAwCJ,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAetG,OAAf,IAA0BoG,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAerG,SAAjF,CAAJ,EAAiG;AAC7F,UAAIyF,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,WAAKmB,cAAL,CAAoBX,IAAI,CAACC,CAAL,CAAOC,GAAP,KAAerG,SAAf,GAA2B,IAA3B,GAAkC,KAAtD;AACA,UAAIyE,UAAU,GAAG,KAAK/B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAjB;AACA,WAAKhD,YAAL,GAAoB,IAApB;AACA,WAAKX,UAAL,GAAkB,KAAK0B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAlB;AACA,WAAKhD,YAAL,GAAoB,KAApB;AACA,WAAKiD,kBAAL,GAA0B,KAAK5D,UAA/B;AACA,WAAK6D,aAAL,GAAqBJ,UAArB;AACA,WAAKnE,MAAL,CAAYoF,YAAZ,CAAyB7C,KAAzB,GAAiC4B,UAAjC;AACA,WAAKnE,MAAL,CAAYoF,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,WAAKxB,mBAAL;AACH;AACJ,GAjCD;;AAkCA5D,EAAAA,cAAc,CAACuD,SAAf,CAAyBmD,eAAzB,GAA2C,YAAY;AACnD,QAAItB,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,QAAIlB,UAAU,GAAG,KAAKnE,MAAL,CAAYoF,YAAZ,CAAyB7C,KAA1C;AACA,QAAImE,WAAW,GAAG,KAAKnC,aAAL,CAAmBoC,SAAnB,CAA6B,CAA7B,EAAgCxB,KAAK,GAAG,KAAKZ,aAAL,CAAmBU,MAA3B,GAAoCd,UAAU,CAACc,MAA/E,CAAlB;AACA,QAAI2B,MAAM,GAAGzC,UAAU,CAACwC,SAAX,CAAqB,CAArB,EAAwBxB,KAAxB,CAAb;AACA,QAAI0B,YAAY,GAAG,IAAIrE,IAAJ,CAAS,CAAC,KAAKF,aAAf,CAAnB;AACA,QAAIwE,OAAO,GAAG,IAAItE,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAAd;;AACA,QAAI0D,WAAW,CAACnB,OAAZ,CAAoBqB,MAApB,MAAgC,CAAhC,KAAsCA,MAAM,CAAC3B,MAAP,KAAkB,CAAlB,IAAuB,KAAKX,kBAAL,CAAwBsC,MAAM,CAAC3B,MAAP,GAAgB,CAAxC,MAA+C,KAAKX,kBAAL,CAAwBsC,MAAM,CAAC3B,MAA/B,CAA5G,CAAJ,EAAyJ;AACrJ,WAAK,IAAID,CAAC,GAAG4B,MAAM,CAAC3B,MAApB,EAA4BD,CAAC,GAAG0B,WAAW,CAACzB,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACrD,YAAI,KAAKV,kBAAL,CAAwBU,CAAxB,MAA+B,EAA/B,IAAqC,KAAKrE,eAAL,CAAqB4E,OAArB,CAA6B,KAAKjB,kBAAL,CAAwBU,CAAxB,CAA7B,KAA4D,CAArG,EAAwG;AACpG,eAAKvD,UAAL,GAAkB,KAAKsF,cAAL,CAAoB,KAAKzC,kBAAL,CAAwBU,CAAxB,CAApB,EAAgD,KAAhD,CAAlB;AACH;AACJ;;AACD,UAAI,KAAKvD,UAAT,EAAqB;AACjB;AACH;AACJ;;AACD,YAAQ,KAAK6C,kBAAL,CAAwBa,KAAK,GAAG,CAAhC,CAAR;AACI,WAAK,GAAL;AACI,YAAI6B,IAAI,GAAG,CAAC,KAAKpG,SAAL,IAAkBiG,YAAY,CAAC7D,OAAb,GAAuBiB,QAAvB,GAAkCgB,MAAlC,GAA2C,CAA7D,GAAiE4B,YAAY,CAAC7D,OAAb,KAAyB,EAA1F,GAA+F,CAAhG,IAAqGiE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxH;AACA,aAAKvD,UAAL,GAAmBgF,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,IAAqB,GAAxC;;AACA,YAAI+B,KAAK,CAACF,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,aAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBgC,IAAI,GAAGF,OAAvB,EAAgC9B,CAAC,EAAjC,EAAqC;AACjCgC,UAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAAC/C,QAAL,GAAgBkD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAIH,IAAI,IAAI,CAAZ,EAAe;AACXH,UAAAA,YAAY,CAACO,OAAb,CAAqBJ,IAArB;AACA,eAAKzF,UAAL,GAAkByF,IAAI,CAAC/C,QAAL,GAAgBgB,MAAhB,KAA2B,CAA7C;AACA,eAAKpC,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;;AACA,cAAI6D,YAAY,CAAC9D,QAAb,OAA4B,KAAKT,aAAL,CAAmBS,QAAnB,EAAhC,EAA+D;AAC3D;AACH;;AACD,eAAKnC,SAAL,GAAiB,IAAjB;AACA,eAAKmB,YAAL,GAAoB,KAAKA,YAAL,GAAoB,CAAxC;AACH,SATD,MAUK;AACD,eAAKnB,SAAL,GAAiB,KAAjB;AACA,eAAKmB,YAAL,GAAoB,KAAKH,UAAL,GAAkB,KAAKG,YAAL,GAAoB,CAAtC,GAA0C,KAAKA,YAAnE;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,YAAI3B,KAAK,GAAG,KAAK,CAAjB;;AACA,YAAIyG,YAAY,CAAC9D,QAAb,GAAwBkB,QAAxB,GAAmCgB,MAAnC,GAA4C,CAAhD,EAAmD;AAC/C7E,UAAAA,KAAK,GAAG,CAAC,KAAKS,WAAL,GAAmB,CAACgG,YAAY,CAAC9D,QAAb,KAA0B,CAA3B,IAAgC,EAAnD,GAAwD,CAAzD,IAA8DkE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA9E;AACH,SAFD,MAGK;AACD/E,UAAAA,KAAK,GAAG6G,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAhB;AACH;;AACD,aAAKtD,WAAL,GAAoB+E,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,IAAqB,GAAzC;;AACA,YAAI,CAAC+B,KAAK,CAAC9G,KAAD,CAAV,EAAmB;AACf,iBAAOA,KAAK,GAAG,EAAf,EAAmB;AACfA,YAAAA,KAAK,GAAG6G,QAAQ,CAAC7G,KAAK,CAAC6D,QAAN,GAAiBkD,KAAjB,CAAuB,CAAvB,CAAD,EAA4B,EAA5B,CAAhB;AACH;;AACD,cAAI/G,KAAK,IAAI,CAAb,EAAgB;AACZyG,YAAAA,YAAY,CAACpE,QAAb,CAAsBrC,KAAK,GAAG,CAA9B;AACA,iBAAKmB,UAAL,GAAkBnB,KAAK,CAAC6D,QAAN,GAAiBgB,MAAjB,KAA4B,CAA9C;;AACA,gBAAI4B,YAAY,CAAC9D,QAAb,OAA4B3C,KAAK,GAAG,CAAxC,EAA2C;AACvCyG,cAAAA,YAAY,CAACO,OAAb,CAAqB,CAArB;AACAP,cAAAA,YAAY,CAACpE,QAAb,CAAsBrC,KAAK,GAAG,CAA9B;AACH;;AACD,gBAAI,KAAKQ,SAAT,EAAoB;AAChB,kBAAIyG,eAAe,GAAG,IAAI7E,IAAJ,CAAS,KAAKK,YAAL,CAAkBC,WAAlB,EAAT,EAA0C,KAAKD,YAAL,CAAkBE,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,kBAAIsE,cAAc,GAAG,IAAI9E,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,kBAAI,KAAKH,YAAL,CAAkBG,OAAlB,MAA+BqE,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFR,gBAAAA,YAAY,CAACO,OAAb,CAAqBE,cAArB;AACH;AACJ;;AACD,iBAAKzE,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA,iBAAKnC,WAAL,GAAmB,IAAnB;AACA,iBAAKmB,cAAL,GAAsB,KAAKA,cAAL,GAAsB,CAA5C;AACH,WAjBD,MAkBK;AACD6E,YAAAA,YAAY,CAACpE,QAAb,CAAsB,CAAtB;AACA,iBAAK5B,WAAL,GAAmB,KAAnB;AACA,iBAAKmB,cAAL,GAAsB,KAAKH,WAAL,GAAmB,KAAKG,cAAL,GAAsB,CAAzC,GAA6C,KAAKA,cAAxE;AACH;AACJ,SA3BD,MA4BK;AAAE;AACH,cAAIuF,WAAW,GAAI,KAAKC,gBAAL,CAAsB,0BAAtB,CAAnB;AACA,cAAIC,UAAU,GAAG3C,MAAM,CAACC,IAAP,CAAYwC,WAAZ,CAAjB;AACA,eAAKpG,cAAL,IAAuByF,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkBuC,WAAlB,EAAvB;;AACA,iBAAO,KAAKvG,cAAL,CAAoB8D,MAApB,GAA6B,CAApC,EAAuC;AACnC,gBAAID,CAAC,GAAG,CAAR;;AACA,iBAAK,IAAI2C,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGH,UAAhC,EAA4CE,EAAE,GAAGC,YAAY,CAAC3C,MAA9D,EAAsE0C,EAAE,EAAxE,EAA4E;AACxE,kBAAIE,MAAM,GAAGD,YAAY,CAACD,EAAD,CAAzB;;AACA,kBAAIJ,WAAW,CAACvC,CAAD,CAAX,CAAe0C,WAAf,GAA6BnC,OAA7B,CAAqC,KAAKpE,cAA1C,MAA8D,CAAlE,EAAqE;AACjE0F,gBAAAA,YAAY,CAACpE,QAAb,CAAsBuC,CAAC,GAAG,CAA1B;AACA,qBAAKnE,WAAL,GAAmB,IAAnB;AACA,qBAAKyB,aAAL,GAAqBuE,YAArB;AACA;AACH;;AACD7B,cAAAA,CAAC;AACJ;;AACD,iBAAK7D,cAAL,GAAsB,KAAKA,cAAL,CAAoBwF,SAApB,CAA8B,CAA9B,EAAiC,KAAKxF,cAAL,CAAoB8D,MAArD,CAAtB;AACH;AACJ;;AACD;;AACJ,WAAK,GAAL;AACI,YAAI5E,IAAI,GAAG,CAAC,KAAKS,UAAL,IAAoB+F,YAAY,CAAC/D,WAAb,GAA2BmB,QAA3B,GAAsCgB,MAAtC,GAA+C,CAA/C,IAAoD,CAAC,KAAKvD,WAA9E,GAA6FmF,YAAY,CAAC/D,WAAb,KAA6B,EAA1H,GAA+H,CAAhI,IAAqImE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxJ;AACA,aAAKzD,WAAL,GAAmB,KAAnB;AACA,aAAKI,UAAL,GAAmB8E,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,IAAqB,GAAxC;;AACA,YAAI+B,KAAK,CAAC7G,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,eAAOA,IAAI,GAAG,IAAd,EAAoB;AAChBA,UAAAA,IAAI,GAAG4G,QAAQ,CAAC5G,IAAI,CAAC4D,QAAL,GAAgBkD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAI9G,IAAI,GAAG,CAAX,EAAc;AACV,eAAKS,UAAL,GAAkB,KAAlB;AACH,SAFD,MAGK;AACD+F,UAAAA,YAAY,CAACiB,WAAb,CAAyBzH,IAAzB;;AACA,cAAIA,IAAI,CAAC4D,QAAL,GAAgBgB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,iBAAK1D,UAAL,GAAkB,IAAlB;AACH;;AACD,eAAKsB,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA,eAAKlC,UAAL,GAAkB,IAAlB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKR,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmB,CAAC8F,YAAY,CAAC5D,QAAb,KAA0B,EAA1B,IAAgC,EAAjC,EAAqCgB,QAArC,GAAgDgB,MAAhD,GAAyD,CAA5E,GAAgF,CAAC4B,YAAY,CAAC5D,QAAb,KAA0B,EAA1B,IAAgC,EAAjC,IAAuC,EAAvH,GAA4H,CAA7H,IAAkIgE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAtJ;;AACA,YAAI+B,KAAK,CAAC,KAAK5G,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,eAAO,KAAKA,IAAL,GAAY,EAAnB,EAAuB;AACnB,eAAKA,IAAL,GAAY2G,QAAQ,CAAC,KAAK3G,IAAL,CAAU2D,QAAV,GAAqBkD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDN,QAAAA,YAAY,CAACnE,QAAb,CAAsBqF,IAAI,CAACC,KAAL,CAAWnB,YAAY,CAAC5D,QAAb,KAA0B,EAArC,IAA2C,EAA3C,GAAiD,KAAK3C,IAAL,GAAY,EAAnF;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAU2D,QAAV,GAAqBgB,MAArB,KAAgC,CAAlD;AACA,aAAKlE,UAAL,GAAkB,IAAlB;AACA,aAAKkB,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;AACA;;AACJ,WAAK,GAAL;AACI,aAAK3B,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmB8F,YAAY,CAAC5D,QAAb,GAAwBgB,QAAxB,GAAmCgB,MAAnC,GAA4C,CAA/D,GAAmE4B,YAAY,CAAC5D,QAAb,KAA0B,EAA7F,GAAkG,CAAnG,IAAwGgE,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA5H;;AACA,YAAI+B,KAAK,CAAC,KAAK5G,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,aAAK,IAAI0E,CAAC,GAAG,CAAb,EAAgB,KAAK1E,IAAL,GAAY,EAA5B,EAAgC0E,CAAC,EAAjC,EAAqC;AACjC,eAAK1E,IAAL,GAAY2G,QAAQ,CAAC,KAAK3G,IAAL,CAAU2D,QAAV,GAAqBkD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDN,QAAAA,YAAY,CAACnE,QAAb,CAAsB,KAAKpC,IAA3B;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAU2D,QAAV,GAAqBgB,MAArB,KAAgC,CAAlD;AACA,aAAKlE,UAAL,GAAkB,IAAlB;AACA,aAAKkB,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;AACA;;AACJ,WAAK,GAAL;AACI,YAAIgG,OAAO,GAAG,CAAC,KAAKjH,YAAL,IAAqB6F,YAAY,CAAC3D,UAAb,GAA0Be,QAA1B,GAAqCgB,MAArC,GAA8C,CAAnE,GAAuE4B,YAAY,CAAC3D,UAAb,KAA4B,EAAnG,GAAwG,CAAzG,IAA8G+D,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAApI;;AACA,YAAI+B,KAAK,CAACe,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBiD,OAAO,GAAG,EAA1B,EAA8BjD,CAAC,EAA/B,EAAmC;AAC/BiD,UAAAA,OAAO,GAAGhB,QAAQ,CAACgB,OAAO,CAAChE,QAAR,GAAmBkD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDN,QAAAA,YAAY,CAAClE,UAAb,CAAwBsF,OAAxB;AACA,aAAK1G,UAAL,GAAkB0G,OAAO,CAAChE,QAAR,GAAmBgB,MAAnB,KAA8B,CAAhD;AACA,aAAKjE,YAAL,GAAoB,IAApB;AACA,aAAKkB,eAAL,GAAuB,KAAKA,eAAL,GAAuB,CAA9C;AACA;;AACJ,WAAK,GAAL;AACI,YAAIgG,OAAO,GAAG,CAAC,KAAKjH,aAAL,IAAsB4F,YAAY,CAAC1D,UAAb,GAA0Bc,QAA1B,GAAqCgB,MAArC,GAA8C,CAApE,GAAwE4B,YAAY,CAAC1D,UAAb,KAA4B,EAApG,GAAyG,CAA1G,IAA+G8D,QAAQ,CAACL,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAArI;;AACA,YAAI+B,KAAK,CAACgB,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBkD,OAAO,GAAG,EAA1B,EAA8BlD,CAAC,EAA/B,EAAmC;AAC/BkD,UAAAA,OAAO,GAAGjB,QAAQ,CAACiB,OAAO,CAACjE,QAAR,GAAmBkD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDN,QAAAA,YAAY,CAACjE,UAAb,CAAwBsF,OAAxB;AACA,aAAK3G,UAAL,GAAkB2G,OAAO,CAACjE,QAAR,GAAmBgB,MAAnB,KAA8B,CAAhD;AACA,aAAKhE,aAAL,GAAqB,IAArB;AACA,aAAKkB,eAAL,GAAuB,KAAKA,eAAL,GAAuB,CAA9C;AACA;;AACJ,WAAK,GAAL;AACI,aAAKf,eAAL,IAAwBwF,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkBuC,WAAlB,EAAxB,CADJ,CAEI;;AACA,YAAIS,YAAY,GAAI,KAAKX,gBAAL,CAAsB,wBAAtB,CAApB;AACA,YAAIY,UAAU,GAAGtD,MAAM,CAACC,IAAP,CAAYoD,YAAZ,CAAjB,CAJJ,CAKI;;AACA,aAAK,IAAInD,CAAC,GAAG,CAAb,EAAgB,KAAK5D,eAAL,CAAqB6D,MAArB,GAA8B,CAA9C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,cAAKmD,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4BV,WAA5B,GAA0CnC,OAA1C,CAAkD,KAAKnE,eAAvD,MAA4E,CAA5E,IAAiFyF,YAAY,CAAC5D,QAAb,MAA2B,EAA7G,IAAqHkF,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4BV,WAA5B,GAA0CnC,OAA1C,CAAkD,KAAKnE,eAAvD,MAA4E,CAA5E,IAAiFyF,YAAY,CAAC5D,QAAb,KAA0B,EAApO,EAAyO;AACrO4D,YAAAA,YAAY,CAACnE,QAAb,CAAsB,CAACmE,YAAY,CAAC5D,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA,iBAAKX,aAAL,GAAqBuE,YAArB;AACH;;AACD,eAAKzF,eAAL,GAAuB,KAAKA,eAAL,CAAqBuF,SAArB,CAA+B,CAA/B,EAAkC,KAAKvF,eAAL,CAAqB6D,MAAvD,CAAvB,CALkD,CAMlD;AACH;;AACD;;AACJ;AACI;AA5KR;;AA8KA,SAAK3C,aAAL,GAAqBuE,YAArB;AACH,GAhMD;;AAiMA9G,EAAAA,cAAc,CAACuD,SAAf,CAAyBe,WAAzB,GAAuC,YAAY;AAC/C,QAAIgE,KAAK,GAAG,IAAZ;;AACA,aAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AACtC,UAAIC,QAAJ;AACA,UAAIC,MAAJ;AACA,UAAIC,eAAe,GAAGL,KAAK,CAACb,gBAAN,CAAuB,+BAAvB,CAAtB;AACA,UAAImB,iBAAiB,GAAG7D,MAAM,CAACC,IAAP,CAAY2D,eAAZ,CAAxB;AACA,UAAIE,QAAQ,GAAIP,KAAK,CAACb,gBAAN,CAAuB,wBAAvB,CAAhB;AACA,UAAIqB,UAAU,GAAG/D,MAAM,CAACC,IAAP,CAAY6D,QAAZ,CAAjB;AACA,UAAIE,UAAU,GAAIT,KAAK,CAACb,gBAAN,CAAuB,0BAAvB,CAAlB;AACA,UAAIuB,YAAY,GAAGjE,MAAM,CAACC,IAAP,CAAY+D,UAAZ,CAAnB;AACA,UAAIE,gBAAgB,GAAIX,KAAK,CAACb,gBAAN,CAAuB,iCAAvB,CAAxB;AACA,UAAIyB,SAAS,GAAIZ,KAAK,CAACb,gBAAN,CAAuB,0BAAvB,CAAjB;AACA,UAAIW,YAAY,GAAIE,KAAK,CAACb,gBAAN,CAAuB,wBAAvB,CAApB;AACA,UAAIY,UAAU,GAAGtD,MAAM,CAACC,IAAP,CAAYoD,YAAZ,CAAjB;AACA,UAAIe,YAAJ;AACA,UAAIC,WAAJ;;AACA,cAAQZ,UAAR;AACI,aAAK,KAAL;AACA,aAAK,MAAL;AACA,aAAK,GAAL;AACIE,UAAAA,MAAM,GAAGJ,KAAK,CAACzH,SAAN,GAAkByH,KAAK,CAAC/F,aAAN,CAAoBU,OAApB,GAA8BiB,QAA9B,EAAlB,GAA6DoE,KAAK,CAACnI,eAAN,CAAsB,KAAtB,EAA6B+D,QAA7B,EAAtE;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACzG,UAAtB,EAAkCyG,KAAK,CAACzH,SAAxC,EAAmD6H,MAAnD,CAAT;AACA;;AACJ,aAAK,IAAL;AACIA,UAAAA,MAAM,GAAGJ,KAAK,CAACzH,SAAN,GAAkByH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBU,OAApB,EAAf,EAA8C,CAA9C,CAAlB,GAAqEqF,KAAK,CAACnI,eAAN,CAAsB,KAAtB,EAA6B+D,QAA7B,EAA9E;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACzG,UAAtB,EAAkCyG,KAAK,CAACzH,SAAxC,EAAmD6H,MAAnD,CAAT;;AACA,cAAIJ,KAAK,CAACtG,YAAN,IAAsB,CAA1B,EAA6B;AACzBsG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAACtG,YAAN,GAAqB,CAArB;AACH;;AACD;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACI0G,UAAAA,MAAM,GAAGJ,KAAK,CAACzH,SAAN,IAAmByH,KAAK,CAACxH,WAAzB,IAAwCwH,KAAK,CAACvH,UAA9C,GAA2D4H,eAAe,CAACC,iBAAiB,CAACN,KAAK,CAAC/F,aAAN,CAAoBgH,MAApB,EAAD,CAAlB,CAAf,CAAiErF,QAAjE,EAA3D,GAAyIoE,KAAK,CAACnI,eAAN,CAAsB,cAAtB,EAAsC+D,QAAtC,EAAlJ;AACA;;AACJ,aAAK,MAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACzH,SAAN,IAAmByH,KAAK,CAACxH,WAAzB,IAAwCwH,KAAK,CAACvH,UAA9C,GAA2D8H,QAAQ,CAACC,UAAU,CAACR,KAAK,CAAC/F,aAAN,CAAoBgH,MAApB,EAAD,CAAX,CAAR,CAAmDrF,QAAnD,EAA3D,GAA2HoE,KAAK,CAACnI,eAAN,CAAsB,cAAtB,EAAsC+D,QAAtC,EAApI;AACA;;AACJ,aAAK,OAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACzH,SAAN,IAAmByH,KAAK,CAACxH,WAAzB,IAAwCwH,KAAK,CAACvH,UAA9C,GAA2DgI,UAAU,CAACC,YAAY,CAACV,KAAK,CAAC/F,aAAN,CAAoBgH,MAApB,EAAD,CAAb,CAAV,CAAuDrF,QAAvD,EAA3D,GAA+HoE,KAAK,CAACnI,eAAN,CAAsB,cAAtB,EAAsC+D,QAAtC,EAAxI;AACA;;AACJ,aAAK,GAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACxH,WAAN,GAAoB,CAACwH,KAAK,CAAC/F,aAAN,CAAoBS,QAApB,KAAiC,CAAlC,EAAqCkB,QAArC,EAApB,GAAsEoE,KAAK,CAACnI,eAAN,CAAsB,OAAtB,EAA+B+D,QAA/B,EAA/E;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACxG,WAAtB,EAAmCwG,KAAK,CAACxH,WAAzC,EAAsD4H,MAAtD,CAAT;AACA;;AACJ,aAAK,IAAL;AACIA,UAAAA,MAAM,GAAGJ,KAAK,CAACxH,WAAN,GAAoBwH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBS,QAApB,KAAiC,CAAhD,EAAmD,CAAnD,CAApB,GAA4EsF,KAAK,CAACnI,eAAN,CAAsB,OAAtB,EAA+B+D,QAA/B,EAArF;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACxG,WAAtB,EAAmCwG,KAAK,CAACxH,WAAzC,EAAsD4H,MAAtD,CAAT;;AACA,cAAIJ,KAAK,CAACrG,cAAN,IAAwB,CAA5B,EAA+B;AAC3BqG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAACrG,cAAN,GAAuB,CAAvB;AACH;;AACD;;AACJ,aAAK,KAAL;AACIyG,UAAAA,MAAM,GAAGJ,KAAK,CAACxH,WAAN,GAAoBmI,gBAAgB,CAACX,KAAK,CAAC/F,aAAN,CAAoBS,QAApB,KAAiC,CAAlC,CAApC,GAA2EsF,KAAK,CAACnI,eAAN,CAAsB,OAAtB,EAA+B+D,QAA/B,EAApF;AACA;;AACJ,aAAK,MAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACxH,WAAN,GAAoBoI,SAAS,CAACZ,KAAK,CAAC/F,aAAN,CAAoBS,QAApB,KAAiC,CAAlC,CAA7B,GAAoEsF,KAAK,CAACnI,eAAN,CAAsB,OAAtB,EAA+B+D,QAA/B,EAA7E;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACvH,UAAN,GAAmBuH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBQ,WAApB,KAAoC,GAAnD,EAAwD,CAAxD,CAAnB,GAAgFuF,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAAzF;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACvG,UAAtB,EAAkCuG,KAAK,CAACvH,UAAxC,EAAoD2H,MAApD,CAAT;;AACA,cAAIJ,KAAK,CAACvH,UAAV,EAAsB;AAClBuH,YAAAA,KAAK,CAAC9G,UAAN,GAAmB8G,KAAK,CAAC3G,WAAN,GAAoB,CAAC2G,KAAK,CAAC/F,aAAN,CAAoBQ,WAApB,KAAoC,GAArC,EAA0CmB,QAA1C,GAAqDgB,MAArD,KAAgE,CAAvG;AACH;;AACD;;AACJ,aAAK,GAAL;AACA,aAAK,MAAL;AACIwD,UAAAA,MAAM,GAAGJ,KAAK,CAACvH,UAAN,GAAmBuH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBQ,WAApB,EAAf,EAAkD,CAAlD,CAAnB,GAA0EuF,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAAnF;AACAwE,UAAAA,MAAM,GAAGJ,KAAK,CAACe,SAAN,CAAgBf,KAAK,CAACvG,UAAtB,EAAkCuG,KAAK,CAACvH,UAAxC,EAAoD2H,MAApD,CAAT;AACA;;AACJ,aAAK,GAAL;AACIA,UAAAA,MAAM,GAAGJ,KAAK,CAACtH,UAAN,GAAmB,CAACsH,KAAK,CAAC/F,aAAN,CAAoBW,QAApB,KAAiC,EAAjC,IAAuC,EAAxC,EAA4CgB,QAA5C,EAAnB,GAA4EoE,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAArF;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACtH,UAAN,GAAmBsH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBW,QAApB,KAAiC,EAAjC,IAAuC,EAAtD,EAA0D,CAA1D,CAAnB,GAAkFoF,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAA3F;;AACA,cAAIoE,KAAK,CAACpG,aAAN,IAAuB,CAA3B,EAA8B;AAC1BoG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAACpG,aAAN,GAAsB,CAAtB;AACH;;AACD;;AACJ,aAAK,GAAL;AACIwG,UAAAA,MAAM,GAAGJ,KAAK,CAACtH,UAAN,GAAmBsH,KAAK,CAAC/F,aAAN,CAAoBW,QAApB,GAA+BgB,QAA/B,EAAnB,GAA+DoE,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAAxE;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACtH,UAAN,GAAmBsH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBW,QAApB,EAAf,EAA+C,CAA/C,CAAnB,GAAuEoF,KAAK,CAACnI,eAAN,CAAsB,MAAtB,EAA8B+D,QAA9B,EAAhF;;AACA,cAAIoE,KAAK,CAACpG,aAAN,IAAuB,CAA3B,EAA8B;AAC1BoG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAACpG,aAAN,GAAsB,CAAtB;AACH;;AACD;;AACJ,aAAK,GAAL;AACIwG,UAAAA,MAAM,GAAGJ,KAAK,CAACrH,YAAN,GAAqBqH,KAAK,CAAC/F,aAAN,CAAoBY,UAApB,GAAiCe,QAAjC,EAArB,GAAmEoE,KAAK,CAACnI,eAAN,CAAsB,QAAtB,EAAgC+D,QAAhC,EAA5E;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACrH,YAAN,GAAqBqH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBY,UAApB,EAAf,EAAiD,CAAjD,CAArB,GAA2EmF,KAAK,CAACnI,eAAN,CAAsB,QAAtB,EAAgC+D,QAAhC,EAApF;;AACA,cAAIoE,KAAK,CAACnG,eAAN,IAAyB,CAA7B,EAAgC;AAC5BmG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAACnG,eAAN,GAAwB,CAAxB;AACH;;AACD;;AACJ,aAAK,GAAL;AACIuG,UAAAA,MAAM,GAAGJ,KAAK,CAACpH,aAAN,GAAsBoH,KAAK,CAAC/F,aAAN,CAAoBa,UAApB,GAAiCc,QAAjC,EAAtB,GAAoEoE,KAAK,CAACnI,eAAN,CAAsB,QAAtB,EAAgC+D,QAAhC,EAA7E;AACA;;AACJ,aAAK,IAAL;AACIwE,UAAAA,MAAM,GAAGJ,KAAK,CAACpH,aAAN,GAAsBoH,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBa,UAApB,EAAf,EAAiD,CAAjD,CAAtB,GAA4EkF,KAAK,CAACnI,eAAN,CAAsB,QAAtB,EAAgC+D,QAAhC,EAArF;;AACA,cAAIoE,KAAK,CAAClG,eAAN,IAAyB,CAA7B,EAAgC;AAC5BkG,YAAAA,KAAK,CAAC9G,UAAN,GAAmB,IAAnB;AACA8G,YAAAA,KAAK,CAAClG,eAAN,GAAwB,CAAxB;AACH;;AACD;;AACJ,aAAK,GAAL;AACIsG,UAAAA,MAAM,GAAGV,IAAI,CAACC,KAAL,CAAWK,KAAK,CAAC/F,aAAN,CAAoBiH,eAApB,KAAwC,GAAnD,EAAwDtF,QAAxD,EAAT;AACA;;AACJ,aAAK,IAAL;AACIiF,UAAAA,YAAY,GAAGb,KAAK,CAAC/F,aAAN,CAAoBiH,eAApB,EAAf;;AACA,cAAIlB,KAAK,CAAC/F,aAAN,CAAoBiH,eAApB,KAAwC,EAA5C,EAAgD;AAC5CL,YAAAA,YAAY,GAAGnB,IAAI,CAACC,KAAL,CAAWK,KAAK,CAAC/F,aAAN,CAAoBiH,eAApB,KAAwC,EAAnD,CAAf;AACH;;AACDd,UAAAA,MAAM,GAAGJ,KAAK,CAACgB,QAAN,CAAeH,YAAf,EAA6B,CAA7B,CAAT;AACA;;AACJ,aAAK,KAAL;AACIT,UAAAA,MAAM,GAAGJ,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAAC/F,aAAN,CAAoBiH,eAApB,EAAf,EAAsD,CAAtD,CAAT;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACId,UAAAA,MAAM,GAAGJ,KAAK,CAAC/F,aAAN,CAAoBW,QAApB,KAAiC,EAAjC,GAAsCkF,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAlD,GAAoED,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAzF;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACA,aAAK,KAAL;AACA,aAAK,MAAL;AACIe,UAAAA,WAAW,GAAG;AACVK,YAAAA,MAAM,EAAEjB,UADE;AAEVkB,YAAAA,IAAI,EAAE,UAFI;AAEQC,YAAAA,QAAQ,EAAE,KAFlB;AAEyBC,YAAAA,QAAQ,EAAEtB,KAAK,CAACrI,MAAN,CAAa4J;AAFhD,WAAd;AAIAnB,UAAAA,MAAM,GAAGJ,KAAK,CAACrI,MAAN,CAAa6J,SAAb,CAAuBC,UAAvB,CAAkCzB,KAAK,CAAC/F,aAAxC,EAAuD6G,WAAvD,CAAT;AACA;AA1HR;;AA4HAV,MAAAA,MAAM,GAAGA,MAAM,KAAKsB,SAAX,GAAuBtB,MAAvB,GAAgCF,UAAU,CAACpB,KAAX,CAAiB,CAAjB,EAAoBoB,UAAU,CAACtD,MAAX,GAAoB,CAAxC,CAAzC;;AACA,UAAIoD,KAAK,CAAChH,YAAV,EAAwB;AACpB,YAAI2I,UAAU,GAAG,EAAjB;;AACA,aAAK,IAAIhF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyD,MAAM,CAACxD,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCgF,UAAAA,UAAU,IAAIzB,UAAU,CAAC,CAAD,CAAxB;AACH;;AACD,eAAOyB,UAAP;AACH,OAND,MAOK;AACD,eAAOvB,MAAP;AACH;AACJ;;AACD,WAAOH,oBAAP;AACH,GA1JD;;AA2JAvI,EAAAA,cAAc,CAACuD,SAAf,CAAyBM,gBAAzB,GAA4C,YAAY;AACpD,QAAIuB,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,QAAI4E,aAAa,GAAG,KAAK3F,kBAAL,CAAwBa,KAAK,GAAG,CAAhC,CAApB;AACA,QAAIhB,UAAJ;AACA,SAAKsC,eAAL;AACAtC,IAAAA,UAAU,GAAG,KAAK/B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAb;AACA,SAAKhD,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAK0B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAlB;AACA,SAAKzC,UAAL,GAAkB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAvD;AACA,SAAKT,YAAL,GAAoB,KAApB;AACA,SAAKiD,kBAAL,GAA0B,KAAK5D,UAA/B;AACA,SAAK6D,aAAL,GAAqBJ,UAArB;AACA,SAAKnE,MAAL,CAAYoF,YAAZ,CAAyB7C,KAAzB,GAAiC4B,UAAjC;AACA,SAAKnE,MAAL,CAAYoF,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,SAAKxB,mBAAL;;AACA,QAAI,CAAC,KAAKpC,UAAL,IAAmB,KAAKE,UAAzB,KAAwC,CAAC,KAAKE,WAAlD,EAA+D;AAC3D,UAAIuI,UAAU,GAAG,KAAK3I,UAAL,GAAkB,KAAlB,GAA0B,IAA3C;AACA,WAAKA,UAAL,GAAkB,KAAKE,UAAL,GAAkB,KAApC;AACA,WAAK8E,iBAAL,CAAuB2D,UAAvB;AACH;;AACD,SAAKvI,WAAL,GAAmB,KAAnB,CApBoD,CAqBpD;AACA;AACH,GAvBD;;AAwBA5B,EAAAA,cAAc,CAACuD,SAAf,CAAyBiD,iBAAzB,GAA6C,UAAU2D,UAAV,EAAsB;AAC/D,QAAI/E,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,QAAIM,GAAG,GAAG,KAAK3F,MAAL,CAAYoF,YAAZ,CAAyBe,YAAnC;AACA,QAAIgE,WAAW,GAAGD,UAAU,GAAG/E,KAAK,GAAG,CAAX,GAAeQ,GAAG,GAAG,CAAjD;;AACA,WAAOwE,WAAW,GAAG,KAAKzJ,UAAL,CAAgBuE,MAA9B,IAAwCkF,WAAW,IAAI,CAA9D,EAAiE;AAC7D,UAAI,KAAKxJ,eAAL,CAAqB4E,OAArB,CAA6B,KAAK7E,UAAL,CAAgByJ,WAAhB,CAA7B,KAA8D,CAAlE,EAAqE;AACjE,aAAK3E,YAAL,CAAkB,KAAK9E,UAAL,CAAgByJ,WAAhB,CAAlB;AACA;AACH;;AACDA,MAAAA,WAAW,GAAGA,WAAW,IAAID,UAAU,GAAG,CAAC,CAAJ,GAAQ,CAAtB,CAAzB;AACH;AACJ,GAXD;;AAYAnK,EAAAA,cAAc,CAACuD,SAAf,CAAyB+F,QAAzB,GAAoC,UAAUe,GAAV,EAAeC,KAAf,EAAsB;AACtD,QAAIC,SAAS,GAAGF,GAAG,CAACnG,QAAJ,EAAhB;AACA,QAAIgB,MAAM,GAAGoF,KAAK,GAAGC,SAAS,CAACrF,MAA/B;AACA,QAAIwD,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIzD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7ByD,MAAAA,MAAM,IAAI,GAAV;AACH;;AACD,WAAOA,MAAM,GAAG6B,SAAhB;AACH,GARD;;AASAvK,EAAAA,cAAc,CAACuD,SAAf,CAAyB8F,SAAzB,GAAqC,UAAUmB,MAAV,EAAkB3J,SAAlB,EAA6B4J,WAA7B,EAA0C;AAC3E,QAAI/B,MAAM,GAAG+B,WAAb;;AACA,QAAID,MAAM,IAAI,CAAC3J,SAAf,EAA0B;AACtB6H,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,WAAOA,MAAP;AACH,GAND;;AAOA1I,EAAAA,cAAc,CAACuD,SAAf,CAAyByD,cAAzB,GAA0C,UAAUyC,MAAV,EAAkBiB,SAAlB,EAA6B;AACnE,YAAQjB,MAAR;AACI,WAAK,GAAL;AACI,aAAK5I,SAAL,GAAiB6J,SAAjB;AACA;;AACJ,WAAK,GAAL;AACI,aAAK5J,WAAL,GAAmB4J,SAAnB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAKnI,aAAL,CAAmBG,QAAnB,CAA4B,CAA5B;AACA,eAAKtB,cAAL,GAAsB,EAAtB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKL,UAAL,GAAkB2J,SAAlB;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI,aAAK1J,UAAL,GAAkB0J,SAAlB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAKrJ,eAAL,GAAuB,EAAvB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKJ,YAAL,GAAoByJ,SAApB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKxJ,aAAL,GAAqBwJ,SAArB;AACA;;AACJ;AACI,eAAO,KAAP;AA5BR;;AA8BA,WAAO,IAAP;AACH,GAhCD;;AAiCA1K,EAAAA,cAAc,CAACuD,SAAf,CAAyBkD,cAAzB,GAA0C,UAAUkE,WAAV,EAAuB;AAC7D,QAAIvF,KAAK,GAAG,KAAKnF,MAAL,CAAYoF,YAAZ,CAAyBC,cAArC;AACA,QAAIsF,UAAU,GAAG,EAAjB;;AACA,QAAI,KAAKhK,eAAL,CAAqB4E,OAArB,CAA6B,KAAK7E,UAAL,CAAgByE,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7DwF,MAAAA,UAAU,GAAG,KAAKjK,UAAL,CAAgByE,KAAhB,CAAb;AACH,KAFD,MAGK;AACD;AACH;;AACD,QAAI0B,YAAY,GAAG,IAAIrE,IAAJ,CAAS,KAAKF,aAAL,CAAmBQ,WAAnB,EAAT,EAA2C,KAAKR,aAAL,CAAmBS,QAAnB,EAA3C,EAA0E,KAAKT,aAAL,CAAmBU,OAAnB,EAA1E,EAAwG,KAAKV,aAAL,CAAmBW,QAAnB,EAAxG,EAAuI,KAAKX,aAAL,CAAmBY,UAAnB,EAAvI,EAAwK,KAAKZ,aAAL,CAAmBa,UAAnB,EAAxK,CAAnB;AACA,SAAKN,YAAL,GAAoB,IAAIL,IAAJ,CAAS,KAAKF,aAAL,CAAmBQ,WAAnB,EAAT,EAA2C,KAAKR,aAAL,CAAmBS,QAAnB,EAA3C,EAA0E,KAAKT,aAAL,CAAmBU,OAAnB,EAA1E,EAAwG,KAAKV,aAAL,CAAmBW,QAAnB,EAAxG,EAAuI,KAAKX,aAAL,CAAmBY,UAAnB,EAAvI,EAAwK,KAAKZ,aAAL,CAAmBa,UAAnB,EAAxK,CAApB;AACA,QAAIyH,cAAc,GAAGF,WAAW,GAAG,CAAC,CAAJ,GAAQ,CAAxC;;AACA,YAAQC,UAAR;AACI,WAAK,GAAL;AACI9D,QAAAA,YAAY,CAACO,OAAb,CAAqBP,YAAY,CAAC7D,OAAb,KAAyB4H,cAA9C;AACA;;AACJ,WAAK,GAAL;AACI,YAAIC,QAAQ,GAAGhE,YAAY,CAAC9D,QAAb,KAA0B6H,cAAzC;AACA/D,QAAAA,YAAY,CAACO,OAAb,CAAqB,CAArB;AACAP,QAAAA,YAAY,CAACpE,QAAb,CAAsBoI,QAAtB;;AACA,YAAI,KAAKjK,SAAT,EAAoB;AAChB,cAAIyG,eAAe,GAAG,IAAI7E,IAAJ,CAAS,KAAKK,YAAL,CAAkBC,WAAlB,EAAT,EAA0C,KAAKD,YAAL,CAAkBE,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,cAAIsE,cAAc,GAAG,IAAI9E,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,cAAI,KAAKH,YAAL,CAAkBG,OAAlB,MAA+BqE,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFR,YAAAA,YAAY,CAACO,OAAb,CAAqBE,cAArB;AACH,WAFD,MAGK;AACDT,YAAAA,YAAY,CAACO,OAAb,CAAqB,KAAKvE,YAAL,CAAkBG,OAAlB,EAArB;AACH;AACJ,SATD,MAUK;AACD6D,UAAAA,YAAY,CAACO,OAAb,CAAqB,KAAKvE,YAAL,CAAkBG,OAAlB,EAArB;AACH;;AACD,aAAKH,YAAL,GAAoB,IAAIL,IAAJ,CAASqE,YAAY,CAAC/D,WAAb,EAAT,EAAqC+D,YAAY,CAAC9D,QAAb,EAArC,EAA8D8D,YAAY,CAAC7D,OAAb,EAA9D,CAApB;AACA;;AACJ,WAAK,GAAL;AACI6D,QAAAA,YAAY,CAACiB,WAAb,CAAyBjB,YAAY,CAAC/D,WAAb,KAA6B8H,cAAtD;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAACnE,QAAb,CAAsBmE,YAAY,CAAC5D,QAAb,KAA0B2H,cAAhD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAAClE,UAAb,CAAwBkE,YAAY,CAAC3D,UAAb,KAA4B0H,cAApD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAACjE,UAAb,CAAwBiE,YAAY,CAAC1D,UAAb,KAA4ByH,cAApD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAACnE,QAAb,CAAsB,CAACmE,YAAY,CAAC5D,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA;;AACJ;AACI;AAxCR;;AA0CA,SAAKX,aAAL,GAAqBuE,YAAY,CAAC/D,WAAb,KAA6B,CAA7B,GAAiC+D,YAAjC,GAAgD,KAAKvE,aAA1E;;AACA,QAAI,KAAK3B,eAAL,CAAqB4E,OAArB,CAA6B,KAAK7E,UAAL,CAAgByE,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,WAAK4B,cAAL,CAAoB,KAAKrG,UAAL,CAAgByE,KAAhB,CAApB,EAA4C,IAA5C;AACH;AACJ,GA1DD;;AA2DApF,EAAAA,cAAc,CAACuD,SAAf,CAAyBkE,gBAAzB,GAA4C,UAAUgC,MAAV,EAAkB;AAC1D,QAAI5E,MAAM,GAAG,KAAK5E,MAAL,CAAY4E,MAAzB;AACA,QAAI6D,MAAJ;;AACA,QAAI7D,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,OAAlC,EAA2C;AACvC6D,MAAAA,MAAM,GAAGrJ,QAAQ,CAACoK,MAAD,EAASnK,oBAAoB,EAA7B,CAAjB;AACH,KAFD,MAGK;AACDoJ,MAAAA,MAAM,GAAGrJ,QAAQ,CAAC,UAAU,EAAV,GAAewF,MAAf,IAAyB,gCAAgC4E,MAAzD,CAAD,EAAmElK,QAAnE,CAAjB;AACH;;AACD,WAAOmJ,MAAP;AACH,GAVD;;AAWA1I,EAAAA,cAAc,CAACuD,SAAf,CAAyBjB,iBAAzB,GAA6C,YAAY;AACrD,QAAIyI,YAAY,GAAI,KAAKtD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAnB;;AACA,QAAI,KAAKjE,MAAL,CAAY2E,UAAZ,IAA0B,YAA9B,EAA4C;AACxCmG,MAAAA,YAAY,GAAI,KAAKtD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAf;;AACA,UAAI,KAAKjE,MAAL,CAAYwJ,MAAZ,IAAsB,KAAKxJ,MAAL,CAAY8K,YAAtC,EAAoD;AAChDA,QAAAA,YAAY,GAAG,KAAK9K,MAAL,CAAY8K,YAA3B;AACH;AACJ;;AACD,QAAI,KAAK9K,MAAL,CAAY2E,UAAZ,IAA0B,gBAA9B,EAAgD;AAC5CmG,MAAAA,YAAY,GAAI,KAAKtD,gBAAL,CAAsB,uCAAtB,CAAD,CAAiEvD,QAAjE,EAAf;;AACA,UAAI,KAAKjE,MAAL,CAAY+K,cAAhB,EAAgC;AAC5BD,QAAAA,YAAY,GAAG,KAAK9K,MAAL,CAAY+K,cAA3B;AACH;AACJ;;AACD,QAAI,KAAK/K,MAAL,CAAY2E,UAAZ,IAA0B,YAA9B,EAA4C;AACxCmG,MAAAA,YAAY,GAAG,KAAK9K,MAAL,CAAYgL,cAAZ,EAAf;AACH;;AACD,WAAOF,YAAP;AACH,GAlBD;;AAmBA/K,EAAAA,cAAc,CAACuD,SAAf,CAAyBQ,YAAzB,GAAwC,YAAY;AAChD,SAAKlD,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;AACA,SAAKwE,WAAL;AACH,GAHD;;AAIA1F,EAAAA,cAAc,CAACuD,SAAf,CAAyBmC,WAAzB,GAAuC,YAAY;AAC/C,SAAKtE,cAAL,GAAsB,KAAKC,eAAL,GAAuB,EAA7C;AACA,QAAI+C,UAAU,GAAG,KAAK/B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAjB;AACA,SAAKhD,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAK0B,UAAL,CAAgBgC,OAAhB,CAAwB,KAAK5C,WAA7B,EAA0C,KAAK6C,WAAL,EAA1C,CAAlB;AACA,SAAKhD,YAAL,GAAoB,KAApB;AACA,SAAKiD,kBAAL,GAA0B,KAAK5D,UAA/B;AACA,SAAK6D,aAAL,GAAqBJ,UAArB;AACA,SAAKnE,MAAL,CAAYiL,gBAAZ,CAA6B9G,UAA7B,EAR+C,CAS/C;AACH,GAVD;;AAWApE,EAAAA,cAAc,CAACuD,SAAf,CAAyB4H,OAAzB,GAAmC,YAAY;AAC3C,SAAK9H,mBAAL;AACH,GAFD;;AAGA,SAAOrD,cAAP;AACH,CA/sBmC,EAApC;;AAgtBA,SAASA,cAAT","sourcesContent":["import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */ (function () {\n    function MaskedDateTime(parent) {\n        this.mask = '';\n        this.defaultConstant = {\n            day: 'day',\n            month: 'month',\n            year: 'year',\n            hour: 'hour',\n            minute: 'minute',\n            second: 'second',\n            dayOfTheWeek: 'day of the week',\n        };\n        this.hiddenMask = '';\n        this.validCharacters = 'dMyhmHfasz';\n        this.isDayPart = false;\n        this.isMonthPart = false;\n        this.isYearPart = false;\n        this.isHourPart = false;\n        this.isMinutePart = false;\n        this.isSecondsPart = false;\n        this.isMilliSecondsPart = false;\n        this.monthCharacter = '';\n        this.periodCharacter = '';\n        this.isHiddenMask = false;\n        this.isComplete = false;\n        this.isNavigate = false;\n        this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n        this.isDeletion = false;\n        this.isShortYear = false;\n        this.isDeleteKey = false;\n        this.isDateZero = false;\n        this.isMonthZero = false;\n        this.isYearZero = false;\n        this.dayTypeCount = 0;\n        this.monthTypeCount = 0;\n        this.hourTypeCount = 0;\n        this.minuteTypeCount = 0;\n        this.secondTypeCount = 0;\n        this.parent = parent;\n        this.dateformat = this.getCulturedFormat();\n        this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n        this.maskDateValue.setMonth(0);\n        this.maskDateValue.setHours(0);\n        this.maskDateValue.setMinutes(0);\n        this.maskDateValue.setSeconds(0);\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    MaskedDateTime.prototype.getModuleName = function () {\n        return 'MaskedDateTime';\n    };\n    MaskedDateTime.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('createMask', this.createMask, this);\n        this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n        this.parent.on('inputHandler', this.maskInputHandler, this);\n        this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n        this.parent.on('clearHandler', this.clearHandler, this);\n    };\n    MaskedDateTime.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('createMask', this.createMask);\n        this.parent.off('setMaskSelection', this.validCharacterCheck);\n        this.parent.off('inputHandler', this.maskInputHandler);\n        this.parent.off('keyDownHandler', this.maskKeydownHandler);\n        this.parent.off('clearHandler', this.clearHandler);\n    };\n    MaskedDateTime.prototype.createMask = function (dateformat) {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.dateformat = this.getCulturedFormat();\n        if (this.parent.maskPlaceholder.day)\n            this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n        if (this.parent.maskPlaceholder.month)\n            this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n        if (this.parent.maskPlaceholder.year)\n            this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n        if (this.parent.maskPlaceholder.hour)\n            this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n        if (this.parent.maskPlaceholder.minute)\n            this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n        if (this.parent.maskPlaceholder.second)\n            this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n        if (this.parent.maskPlaceholder.dayOfTheWeek)\n            this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n        this.getCUltureMaskFormat();\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.mask = this.previousValue = inputValue;\n        this.parent.maskedDateValue = this.mask;\n        if (this.parent.value) {\n            this.setDynamicValue();\n        }\n    };\n    MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n        this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n        this.objectString = Object.keys(this.defaultConstant);\n        for (var i = 0; i < this.objectString.length; i++) {\n            this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n        }\n    };\n    MaskedDateTime.prototype.validCharacterCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n            if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n                this.setSelection(this.hiddenMask[i]);\n                return;\n            }\n            if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n                this.setSelection(this.hiddenMask[j]);\n                return;\n            }\n        }\n    };\n    MaskedDateTime.prototype.setDynamicValue = function () {\n        this.maskDateValue = this.parent.value;\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n        this.updateValue();\n        // this.parent.inputElement.selectionStart = start;\n        // this.validCharacterCheck();\n    };\n    MaskedDateTime.prototype.setSelection = function (validChar) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (this.hiddenMask[i] === validChar) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        this.parent.inputElement.setSelectionRange(start, end);\n    };\n    MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n        if (args.e.key === 'Delete') {\n            this.isDeleteKey = true;\n            return;\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB ||\n            args.e.key === END || args.e.key === HOME)) {\n            var start = this.parent.inputElement.selectionStart;\n            var end = this.parent.inputElement.selectionEnd;\n            var length_1 = this.parent.inputElement.value.length;\n            if ((start == 0 && end == length_1) && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n                var index = args.e.action === SHIFTTAB ? end : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n            }\n            if (args.e.key === END || args.e.key === HOME) {\n                var range = args.e.key === END ? length_1 : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n            }\n            this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n            var start = this.parent.inputElement.selectionStart;\n            this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n            var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = true;\n            this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = false;\n            this.previousHiddenMask = this.hiddenMask;\n            this.previousValue = inputValue;\n            this.parent.inputElement.value = inputValue;\n            this.parent.inputElement.selectionStart = start;\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.differenceCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var inputValue = this.parent.inputElement.value;\n        var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n        var newVal = inputValue.substring(0, start);\n        var newDateValue = new Date(+this.maskDateValue);\n        var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n        if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n            for (var i = newVal.length; i < previousVal.length; i++) {\n                if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n                    this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n                }\n            }\n            if (this.isDeletion) {\n                return;\n            }\n        }\n        switch (this.previousHiddenMask[start - 1]) {\n            case 'd':\n                var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.isDateZero = (newVal[start - 1] == '0');\n                if (isNaN(date)) {\n                    return;\n                }\n                for (var i = 0; date > maxDate; i++) {\n                    date = parseInt(date.toString().slice(1), 10);\n                }\n                if (date >= 1) {\n                    newDateValue.setDate(date);\n                    this.isNavigate = date.toString().length === 2;\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n                        return;\n                    }\n                    this.isDayPart = true;\n                    this.dayTypeCount = this.dayTypeCount + 1;\n                }\n                else {\n                    this.isDayPart = false;\n                    this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n                }\n                break;\n            case 'M':\n                var month = void 0;\n                if (newDateValue.getMonth().toString().length < 2) {\n                    month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                }\n                else {\n                    month = parseInt(newVal[start - 1], 10);\n                }\n                this.isMonthZero = (newVal[start - 1] == '0');\n                if (!isNaN(month)) {\n                    while (month > 12) {\n                        month = parseInt(month.toString().slice(1), 10);\n                    }\n                    if (month >= 1) {\n                        newDateValue.setMonth(month - 1);\n                        this.isNavigate = month.toString().length === 2;\n                        if (newDateValue.getMonth() !== month - 1) {\n                            newDateValue.setDate(1);\n                            newDateValue.setMonth(month - 1);\n                        }\n                        if (this.isDayPart) {\n                            var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                            var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                            if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                                newDateValue.setDate(currentMaxDate);\n                            }\n                        }\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        this.isMonthPart = true;\n                        this.monthTypeCount = this.monthTypeCount + 1;\n                    }\n                    else {\n                        newDateValue.setMonth(0);\n                        this.isMonthPart = false;\n                        this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n                    }\n                }\n                else { // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n                    var monthString = (this.getCulturedValue('months[stand-alone].wide'));\n                    var monthValue = Object.keys(monthString);\n                    this.monthCharacter += newVal[start - 1].toLowerCase();\n                    while (this.monthCharacter.length > 0) {\n                        var i = 1;\n                        for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                            var months = monthValue_1[_i];\n                            if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                                newDateValue.setMonth(i - 1);\n                                this.isMonthPart = true;\n                                this.maskDateValue = newDateValue;\n                                return;\n                            }\n                            i++;\n                        }\n                        this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n                    }\n                }\n                break;\n            case 'y':\n                var year = (this.isYearPart && (newDateValue.getFullYear().toString().length < 4 && !this.isShortYear) ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.isShortYear = false;\n                this.isYearZero = (newVal[start - 1] == '0');\n                if (isNaN(year)) {\n                    return;\n                }\n                while (year > 9999) {\n                    year = parseInt(year.toString().slice(1), 10);\n                }\n                if (year < 1) {\n                    this.isYearPart = false;\n                }\n                else {\n                    newDateValue.setFullYear(year);\n                    if (year.toString().length === 4) {\n                        this.isNavigate = true;\n                    }\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    this.isYearPart = true;\n                }\n                break;\n            case 'h':\n                this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                while (this.hour > 12) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + (this.hour % 12));\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'H':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                for (var i = 0; this.hour > 23; i++) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(this.hour);\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'm':\n                var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(minutes)) {\n                    return;\n                }\n                for (var i = 0; minutes > 59; i++) {\n                    minutes = parseInt(minutes.toString().slice(1), 10);\n                }\n                newDateValue.setMinutes(minutes);\n                this.isNavigate = minutes.toString().length === 2;\n                this.isMinutePart = true;\n                this.minuteTypeCount = this.minuteTypeCount + 1;\n                break;\n            case 's':\n                var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(seconds)) {\n                    return;\n                }\n                for (var i = 0; seconds > 59; i++) {\n                    seconds = parseInt(seconds.toString().slice(1), 10);\n                }\n                newDateValue.setSeconds(seconds);\n                this.isNavigate = seconds.toString().length === 2;\n                this.isSecondsPart = true;\n                this.secondTypeCount = this.secondTypeCount + 1;\n                break;\n            case 'a':\n                this.periodCharacter += newVal[start - 1].toLowerCase();\n                // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n                var periodString = (this.getCulturedValue('dayPeriods.format.wide'));\n                var periodkeys = Object.keys(periodString);\n                //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n                for (var i = 0; this.periodCharacter.length > 0; i++) {\n                    if ((periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12) || (periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12)) {\n                        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                        this.maskDateValue = newDateValue;\n                    }\n                    this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n                    // Object.values()\n                }\n                break;\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue;\n    };\n    MaskedDateTime.prototype.formatCheck = function () {\n        var proxy = this;\n        function formatValueSpecifier(formattext) {\n            var isSymbol;\n            var result;\n            var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n            var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n            var daysWide = (proxy.getCulturedValue('days[stand-alone].wide'));\n            var dayKeyWide = Object.keys(daysWide);\n            var daysNarrow = (proxy.getCulturedValue('days[stand-alone].narrow'));\n            var dayKeyNarrow = Object.keys(daysNarrow);\n            var monthAbbreviated = (proxy.getCulturedValue('months[stand-alone].abbreviated'));\n            var monthWide = (proxy.getCulturedValue('months[stand-alone].wide'));\n            var periodString = (proxy.getCulturedValue('dayPeriods.format.wide'));\n            var periodkeys = Object.keys(periodString);\n            var milliseconds;\n            var dateOptions;\n            switch (formattext) {\n                case 'ddd':\n                case 'dddd':\n                case 'd':\n                    result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    break;\n                case 'dd':\n                    result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    if (proxy.dayTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.dayTypeCount = 0;\n                    }\n                    break;\n                case 'E':\n                case 'EE':\n                case 'EEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'M':\n                    result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    break;\n                case 'MM':\n                    result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    if (proxy.monthTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.monthTypeCount = 0;\n                    }\n                    break;\n                case 'MMM':\n                    result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMMM':\n                    result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'yy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    if (proxy.isYearPart) {\n                        proxy.isNavigate = proxy.isShortYear = (proxy.maskDateValue.getFullYear() % 100).toString().length === 2;\n                    }\n                    break;\n                case 'y':\n                case 'yyyy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    break;\n                case 'h':\n                    result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'hh':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'H':\n                    result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'HH':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'm':\n                    result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n                    break;\n                case 'mm':\n                    result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n                    if (proxy.minuteTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.minuteTypeCount = 0;\n                    }\n                    break;\n                case 's':\n                    result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n                    break;\n                case 'ss':\n                    result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n                    if (proxy.secondTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.secondTypeCount = 0;\n                    }\n                    break;\n                case 'f':\n                    result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n                    break;\n                case 'ff':\n                    milliseconds = proxy.maskDateValue.getMilliseconds();\n                    if (proxy.maskDateValue.getMilliseconds() > 99) {\n                        milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n                    }\n                    result = proxy.roundOff(milliseconds, 2);\n                    break;\n                case 'fff':\n                    result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n                    break;\n                case 'a':\n                case 'aa':\n                    result = proxy.maskDateValue.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n                    break;\n                case 'z':\n                case 'zz':\n                case 'zzz':\n                case 'zzzz':\n                    dateOptions = {\n                        format: formattext,\n                        type: 'dateTime', skeleton: 'yMd', calendar: proxy.parent.calendarMode\n                    };\n                    result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n                    break;\n            }\n            result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n            if (proxy.isHiddenMask) {\n                var hiddenChar = '';\n                for (var i = 0; i < result.length; i++) {\n                    hiddenChar += formattext[0];\n                }\n                return hiddenChar;\n            }\n            else {\n                return result;\n            }\n        }\n        return formatValueSpecifier;\n    };\n    MaskedDateTime.prototype.maskInputHandler = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var selectionChar = this.previousHiddenMask[start - 1];\n        var inputValue;\n        this.differenceCheck();\n        inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isDateZero = this.isMonthZero = this.isYearZero = false;\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.inputElement.value = inputValue;\n        this.parent.inputElement.selectionStart = start;\n        this.validCharacterCheck();\n        if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n            var isbackward = this.isNavigate ? false : true;\n            this.isNavigate = this.isDeletion = false;\n            this.navigateSelection(isbackward);\n        }\n        this.isDeleteKey = false;\n        // this.setSelection(selectionChar);\n        // this.navigateSelection(inputValue);\n    };\n    MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n        var start = this.parent.inputElement.selectionStart;\n        var end = this.parent.inputElement.selectionEnd;\n        var formatIndex = isbackward ? start - 1 : end + 1;\n        while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n            if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n                this.setSelection(this.hiddenMask[formatIndex]);\n                break;\n            }\n            formatIndex = formatIndex + (isbackward ? -1 : 1);\n        }\n    };\n    MaskedDateTime.prototype.roundOff = function (val, count) {\n        var valueText = val.toString();\n        var length = count - valueText.length;\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += '0';\n        }\n        return result + valueText;\n    };\n    MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n        var result = resultValue;\n        if (isZero && !isDayPart) {\n            result = '0';\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n        switch (format) {\n            case 'd':\n                this.isDayPart = isSegment;\n                break;\n            case 'M':\n                this.isMonthPart = isSegment;\n                if (!isSegment) {\n                    this.maskDateValue.setMonth(0);\n                    this.monthCharacter = '';\n                }\n                break;\n            case 'y':\n                this.isYearPart = isSegment;\n                break;\n            case 'H':\n            case 'h':\n                this.isHourPart = isSegment;\n                if (!isSegment) {\n                    this.periodCharacter = '';\n                }\n                break;\n            case 'm':\n                this.isMinutePart = isSegment;\n                break;\n            case 's':\n                this.isSecondsPart = isSegment;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    };\n    MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        else {\n            return;\n        }\n        var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        var incrementValue = isDecrement ? -1 : 1;\n        switch (formatText) {\n            case 'd':\n                newDateValue.setDate(newDateValue.getDate() + incrementValue);\n                break;\n            case 'M':\n                var newMonth = newDateValue.getMonth() + incrementValue;\n                newDateValue.setDate(1);\n                newDateValue.setMonth(newMonth);\n                if (this.isDayPart) {\n                    var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                    var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                    if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                        newDateValue.setDate(currentMaxDate);\n                    }\n                    else {\n                        newDateValue.setDate(this.previousDate.getDate());\n                    }\n                }\n                else {\n                    newDateValue.setDate(this.previousDate.getDate());\n                }\n                this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                break;\n            case 'y':\n                newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n                break;\n            case 'H':\n            case 'h':\n                newDateValue.setHours(newDateValue.getHours() + incrementValue);\n                break;\n            case 'm':\n                newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n                break;\n            case 's':\n                newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n                break;\n            case 'a':\n                newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                break;\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            this.handleDeletion(this.hiddenMask[start], true);\n        }\n    };\n    MaskedDateTime.prototype.getCulturedValue = function (format) {\n        var locale = this.parent.locale;\n        var result;\n        if (locale === 'en' || locale === 'en-US') {\n            result = getValue(format, getDefaultDateObject());\n        }\n        else {\n            result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.getCulturedFormat = function () {\n        var formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n        if (this.parent.moduleName == 'datepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.format && this.parent.formatString) {\n                formatString = this.parent.formatString;\n            }\n        }\n        if (this.parent.moduleName == 'datetimepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.dateTimeFormat) {\n                formatString = this.parent.dateTimeFormat;\n            }\n        }\n        if (this.parent.moduleName == 'timepicker') {\n            formatString = this.parent.cldrTimeFormat();\n        }\n        return formatString;\n    };\n    MaskedDateTime.prototype.clearHandler = function () {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.updateValue();\n    };\n    MaskedDateTime.prototype.updateValue = function () {\n        this.monthCharacter = this.periodCharacter = '';\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.updateInputValue(inputValue);\n        //this.parent.inputElement.value = inputValue;\n    };\n    MaskedDateTime.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MaskedDateTime;\n}());\nexport { MaskedDateTime };\n"]},"metadata":{},"sourceType":"module"}