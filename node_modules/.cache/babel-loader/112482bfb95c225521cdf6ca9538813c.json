{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query, Predicate } from './query';\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Data manager common utility methods.\n * @hidden\n */\n\nvar DataUtil =\n/** @class */\nfunction () {\n  function DataUtil() {}\n  /**\n   * Returns the value by invoking the provided parameter function.\n   * If the paramater is not of type function then it will be returned as it is.\n   * @param  {Function|string|string[]|number} value\n   * @param  {Object} inst?\n   * @hidden\n   */\n\n\n  DataUtil.getValue = function (value, inst) {\n    if (typeof value === 'function') {\n      return value.call(inst || {});\n    }\n\n    return value;\n  };\n  /**\n   * Returns true if the input string ends with given string.\n   * @param  {string} input\n   * @param  {string} substr\n   */\n\n\n  DataUtil.endsWith = function (input, substr) {\n    return input.slice && input.slice(-substr.length) === substr;\n  };\n  /**\n   * Returns true if the input string starts with given string.\n   * @param  {string} str\n   * @param  {string} startstr\n   */\n\n\n  DataUtil.startsWith = function (input, start) {\n    return input.slice(0, start.length) === start;\n  };\n  /**\n   * To return the sorting function based on the string.\n   * @param  {string} order\n   * @hidden\n   */\n\n\n  DataUtil.fnSort = function (order) {\n    order = order ? DataUtil.toLowerCase(order) : 'ascending';\n\n    if (order === 'ascending') {\n      return this.fnAscending;\n    }\n\n    return this.fnDescending;\n  };\n  /**\n   * Comparer function which is used to sort the data in ascending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnAscending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return -1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y);\n    }\n\n    if (x === null || x === undefined) {\n      return 1;\n    }\n\n    return x - y;\n  };\n  /**\n   * Comparer function which is used to sort the data in descending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnDescending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return 1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y) * -1;\n    }\n\n    if (x === null || x === undefined) {\n      return -1;\n    }\n\n    return y - x;\n  };\n\n  DataUtil.extractFields = function (obj, fields) {\n    var newObj = {};\n\n    for (var i = 0; i < fields.length; i++) {\n      newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n    }\n\n    return newObj;\n  };\n  /**\n   * Select objects by given fields from jsonArray.\n   * @param  {Object[]} jsonArray\n   * @param  {string[]} fields\n   */\n\n\n  DataUtil.select = function (jsonArray, fields) {\n    var newData = [];\n\n    for (var i = 0; i < jsonArray.length; i++) {\n      newData.push(this.extractFields(jsonArray[i], fields));\n    }\n\n    return newData;\n  };\n  /**\n   * Group the input data based on the field name.\n   * It also performs aggregation of the grouped records based on the aggregates paramater.\n   * @param  {Object[]} jsonArray\n   * @param  {string} field?\n   * @param  {Object[]} agg?\n   * @param  {number} level?\n   * @param  {Object[]} groupDs?\n   */\n\n\n  DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n    level = level || 1;\n    var jsonData = jsonArray;\n    var guid = 'GroupGuid';\n\n    if (jsonData.GroupGuid === consts[guid]) {\n      var _loop_1 = function (j) {\n        if (!isNullOrUndefined(groupDs)) {\n          var indx = -1;\n          var temp = groupDs.filter(function (e) {\n            return e.key === jsonData[j].key;\n          });\n          indx = groupDs.indexOf(temp[0]);\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n          jsonData[j].count = groupDs[indx].count;\n        } else {\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n          jsonData[j].count = jsonData[j].items.length;\n        }\n      };\n\n      var this_1 = this;\n\n      for (var j = 0; j < jsonData.length; j++) {\n        _loop_1(j);\n      }\n\n      jsonData.childLevels += 1;\n      return jsonData;\n    }\n\n    var grouped = {};\n    var groupedArray = [];\n    groupedArray.GroupGuid = consts[guid];\n    groupedArray.level = level;\n    groupedArray.childLevels = 0;\n    groupedArray.records = jsonData;\n\n    var _loop_2 = function (i) {\n      var val = this_2.getVal(jsonData, i, field);\n\n      if (!isNullOrUndefined(format)) {\n        val = format(val, field);\n      }\n\n      if (!grouped[val]) {\n        grouped[val] = {\n          key: val,\n          count: 0,\n          items: [],\n          aggregates: {},\n          field: field\n        };\n        groupedArray.push(grouped[val]);\n\n        if (!isNullOrUndefined(groupDs)) {\n          var tempObj = groupDs.filter(function (e) {\n            return e.key === grouped[val].key;\n          });\n          grouped[val].count = tempObj[0].count;\n        }\n      }\n\n      grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n\n      if (!isLazyLoad || isLazyLoad && aggregates.length) {\n        grouped[val].items.push(jsonData[i]);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < jsonData.length; i++) {\n      _loop_2(i);\n    }\n\n    if (aggregates && aggregates.length) {\n      var _loop_3 = function (i) {\n        var res = {};\n        var fn = void 0;\n        var aggs = aggregates;\n\n        for (var j = 0; j < aggregates.length; j++) {\n          fn = DataUtil.aggregates[aggregates[j].type];\n\n          if (!isNullOrUndefined(groupDs)) {\n            var temp = groupDs.filter(function (e) {\n              return e.key === groupedArray[i].key;\n            });\n\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n            }\n          } else {\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n            }\n          }\n        }\n\n        groupedArray[i].aggregates = res;\n      };\n\n      for (var i = 0; i < groupedArray.length; i++) {\n        _loop_3(i);\n      }\n    }\n\n    if (isLazyLoad && groupedArray.length && aggregates.length) {\n      for (var i = 0; i < groupedArray.length; i++) {\n        groupedArray[i].items = [];\n      }\n    }\n\n    return jsonData.length && groupedArray || jsonData;\n  };\n  /**\n   * It is used to categorize the multiple items based on a specific field in jsonArray.\n   * The hierarchical queries are commonly required when you use foreign key binding.\n   * @param  {string} fKey\n   * @param  {string} from\n   * @param  {Object[]} source\n   * @param  {Group} lookup?\n   * @param  {string} pKey?\n   * @hidden\n   */\n\n\n  DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n    var i;\n    var grp = {};\n    var temp;\n\n    if (lookup.result) {\n      lookup = lookup.result;\n    }\n\n    if (lookup.GroupGuid) {\n      this.throwError('DataManager: Do not have support Grouping in hierarchy');\n    }\n\n    for (i = 0; i < lookup.length; i++) {\n      var fKeyData = this.getObject(fKey, lookup[i]);\n      temp = grp[fKeyData] || (grp[fKeyData] = []);\n      temp.push(lookup[i]);\n    }\n\n    for (i = 0; i < source.length; i++) {\n      var fKeyData = this.getObject(pKey || fKey, source[i]);\n      source[i][from] = grp[fKeyData];\n    }\n  };\n  /**\n   * The method used to get the field names which started with specified characters.\n   * @param  {Object} obj\n   * @param  {string[]} fields?\n   * @param  {string} prefix?\n   * @hidden\n   */\n\n\n  DataUtil.getFieldList = function (obj, fields, prefix) {\n    if (prefix === undefined) {\n      prefix = '';\n    }\n\n    if (fields === undefined || fields === null) {\n      return this.getFieldList(obj, [], prefix);\n    }\n\n    var copyObj = obj;\n    var keys = Object.keys(obj);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var prop = keys_1[_i];\n\n      if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n        this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n      } else {\n        fields.push(prefix + prop);\n      }\n    }\n\n    return fields;\n  };\n  /**\n   * Gets the value of the property in the given object.\n   * The complex object can be accessed by providing the field names concatenated with dot(.).\n   * @param  {string} nameSpace - The name of the property to be accessed.\n   * @param  {Object} from - Defines the source object.\n   */\n\n\n  DataUtil.getObject = function (nameSpace, from) {\n    if (!nameSpace) {\n      return from;\n    }\n\n    if (!from) {\n      return undefined;\n    }\n\n    if (nameSpace.indexOf('.') === -1) {\n      return from[nameSpace];\n    }\n\n    var value = from;\n    var splits = nameSpace.split('.');\n\n    for (var i = 0; i < splits.length; i++) {\n      if (value == null) {\n        break;\n      }\n\n      value = value[splits[i]];\n    }\n\n    return value;\n  };\n  /**\n   * To set value for the nameSpace in desired object.\n   * @param {string} nameSpace - String value to the get the inner object.\n   * @param {Object} value - Value that you need to set.\n   * @param {Object} obj - Object to get the inner object value.\n   * @return { [key: string]: Object; } | Object\n   * @hidden\n   */\n\n\n  DataUtil.setValue = function (nameSpace, value, obj) {\n    var keys = nameSpace.toString().split('.');\n    var start = obj || {};\n    var fromObj = start;\n    var i;\n    var length = keys.length;\n    var key;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n\n      if (i + 1 === length) {\n        fromObj[key] = value === undefined ? undefined : value;\n      } else if (isNullOrUndefined(fromObj[key])) {\n        fromObj[key] = {};\n      }\n\n      fromObj = fromObj[key];\n    }\n\n    return start;\n  };\n  /**\n   * Sort the given data based on the field and comparer.\n   * @param  {Object[]} ds - Defines the input data.\n   * @param  {string} field - Defines the field to be sorted.\n   * @param  {Function} comparer - Defines the comparer function used to sort the records.\n   */\n\n\n  DataUtil.sort = function (ds, field, comparer) {\n    if (ds.length <= 1) {\n      return ds;\n    }\n\n    var middle = parseInt((ds.length / 2).toString(), 10);\n    var left = ds.slice(0, middle);\n    var right = ds.slice(middle);\n    left = this.sort(left, field, comparer);\n    right = this.sort(right, field, comparer);\n    return this.merge(left, right, field, comparer);\n  };\n\n  DataUtil.ignoreDiacritics = function (value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    var result = value.split('');\n    var newValue = result.map(function (temp) {\n      return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp;\n    });\n    return newValue.join('');\n  };\n\n  DataUtil.merge = function (left, right, fieldName, comparer) {\n    var result = [];\n    var current;\n\n    while (left.length > 0 || right.length > 0) {\n      if (left.length > 0 && right.length > 0) {\n        if (comparer) {\n          current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n        } else {\n          current = left[0][fieldName] < left[0][fieldName] ? left : right;\n        }\n      } else {\n        current = left.length > 0 ? left : right;\n      }\n\n      result.push(current.shift());\n    }\n\n    return result;\n  };\n\n  DataUtil.getVal = function (array, index, field) {\n    return field ? this.getObject(field, array[index]) : array[index];\n  };\n\n  DataUtil.toLowerCase = function (val) {\n    return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : val === 0 || val === false ? val.toString() : '';\n  };\n  /**\n   * To perform the filter operation with specified adaptor and returns the result.\n   * @param  {Object} adaptor\n   * @param  {string} fnName\n   * @param  {Object} param1?\n   * @param  {Object} param2?\n   * @hidden\n   */\n\n\n  DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n    if (fnName in adaptor) {\n      var res = adaptor[fnName](param1, param2);\n\n      if (!isNullOrUndefined(res)) {\n        param1 = res;\n      }\n    }\n\n    return param1;\n  };\n\n  DataUtil.getAddParams = function (adp, dm, query) {\n    var req = {};\n    DataUtil.callAdaptorFunction(adp, 'addParams', {\n      dm: dm,\n      query: query,\n      params: query.params,\n      reqParams: req\n    });\n    return req;\n  };\n  /**\n   * Checks wheather the given input is a plain object or not.\n   * @param  {Object|Object[]} obj\n   */\n\n\n  DataUtil.isPlainObject = function (obj) {\n    return !!obj && obj.constructor === Object;\n  };\n  /**\n   * Returns true when the browser cross origin request.\n   */\n\n\n  DataUtil.isCors = function () {\n    var xhr = null;\n    var request = 'XMLHttpRequest';\n\n    try {\n      xhr = new window[request]();\n    } catch (e) {// No exception handling\n    }\n\n    return !!xhr && 'withCredentials' in xhr;\n  };\n  /**\n   * Generate random GUID value which will be prefixed with the given value.\n   * @param  {string} prefix\n   */\n\n\n  DataUtil.getGuid = function (prefix) {\n    var hexs = '0123456789abcdef';\n    var rand;\n    return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n      if ('crypto' in window && 'getRandomValues' in crypto) {\n        var arr = new Uint8Array(1);\n        window.crypto.getRandomValues(arr);\n        rand = arr[0] % 16 | 0;\n      } else {\n        rand = Math.random() * 16 | 0;\n      }\n\n      return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n    });\n  };\n  /**\n   * Checks wheather the given value is null or not.\n   * @param  {string|Object} val\n   * @returns boolean\n   */\n\n\n  DataUtil.isNull = function (val) {\n    return val === undefined || val === null;\n  };\n  /**\n   * To get the required items from collection of objects.\n   * @param  {Object[]} array\n   * @param  {string} field\n   * @param  {Function} comparer\n   * @returns Object\n   * @hidden\n   */\n\n\n  DataUtil.getItemFromComparer = function (array, field, comparer) {\n    var keyVal;\n    var current;\n    var key;\n    var i = 0;\n    var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n\n    if (array.length) {\n      while (isNullOrUndefined(keyVal) && i < array.length) {\n        keyVal = DataUtil.getVal(array, i, field);\n        key = array[i++];\n      }\n    }\n\n    for (; i < array.length; i++) {\n      current = DataUtil.getVal(array, i, field);\n\n      if (isNullOrUndefined(current)) {\n        continue;\n      }\n\n      if (castRequired) {\n        keyVal = +keyVal;\n        current = +current;\n      }\n\n      if (comparer(keyVal, current) > 0) {\n        keyVal = current;\n        key = array[i];\n      }\n    }\n\n    return key;\n  };\n  /**\n   * To get distinct values of Array or Array of Objects.\n   * @param  {Object[]} json\n   * @param  {string} field\n   * @param  {boolean} requiresCompleteRecord\n   * @returns Object[]\n   * * distinct array of objects is return when requiresCompleteRecord set as true.\n   * @hidden\n   */\n\n\n  DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n    requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n    var result = [];\n    var val;\n    var tmp = {};\n    json.forEach(function (data, index) {\n      val = typeof json[index] === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n\n      if (!(val in tmp)) {\n        result.push(!requiresCompleteRecord ? val : json[index]);\n        tmp[val] = 1;\n      }\n    });\n    return result;\n  };\n  /**\n   * Process the given records based on the datamanager string.\n   * @param  {string} datamanager\n   * @param  {Object[]} records\n   */\n\n\n  DataUtil.processData = function (dm, records) {\n    var query = this.prepareQuery(dm);\n    var sampledata = new DataManager(records);\n\n    if (dm.requiresCounts) {\n      query.requiresCount();\n    }\n\n    var result = sampledata.executeLocal(query);\n    var returnValue = {\n      result: dm.requiresCounts ? result.result : result,\n      count: result.count,\n      aggregates: JSON.stringify(result.aggregates)\n    };\n    return dm.requiresCounts ? returnValue : result;\n  };\n\n  DataUtil.prepareQuery = function (dm) {\n    var _this = this;\n\n    var query = new Query();\n\n    if (dm.select) {\n      query.select(dm.select);\n    }\n\n    if (dm.where) {\n      var where = DataUtil.parse.parseJson(dm.where);\n      where.filter(function (pred) {\n        if (isNullOrUndefined(pred.condition)) {\n          query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n        } else {\n          var predicateList = [];\n\n          if (pred.field) {\n            predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n          } else {\n            predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n          }\n\n          if (pred.condition == 'or') {\n            query.where(Predicate.or(predicateList));\n          } else if (pred.condition == 'and') {\n            query.where(Predicate.and(predicateList));\n          }\n        }\n      });\n    }\n\n    if (dm.search) {\n      var search = DataUtil.parse.parseJson(dm.search);\n      search.filter(function (e) {\n        return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']);\n      });\n    }\n\n    if (dm.aggregates) {\n      dm.aggregates.filter(function (e) {\n        return query.aggregate(e.type, e.field);\n      });\n    }\n\n    if (dm.sorted) {\n      dm.sorted.filter(function (e) {\n        return query.sortBy(e.name, e.direction);\n      });\n    }\n\n    if (dm.skip) {\n      query.skip(dm.skip);\n    }\n\n    if (dm.take) {\n      query.take(dm.take);\n    }\n\n    if (dm.group) {\n      dm.group.filter(function (grp) {\n        return query.group(grp);\n      });\n    }\n\n    return query;\n  };\n\n  DataUtil.getPredicate = function (pred) {\n    var mainPred = [];\n\n    for (var i = 0; i < pred.length; i++) {\n      var e = pred[i];\n\n      if (e.field) {\n        mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n      } else {\n        var childPred = [];\n        var cpre = this.getPredicate(e.predicates);\n\n        for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n          var prop = _a[_i];\n          childPred.push(cpre[prop]);\n        }\n\n        mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n      }\n    }\n\n    return mainPred;\n  };\n  /**\n   * Specifies the value which will be used to adjust the date value to server timezone.\n   * @default null\n   */\n\n\n  DataUtil.serverTimezoneOffset = null;\n  /**\n   * Species whether are not to be parsed with serverTimezoneOffset value.\n   * @hidden\n   */\n\n  DataUtil.timeZoneHandling = true;\n  /**\n   * Throw error with the given string as message.\n   * @param  {string} er\n   */\n\n  DataUtil.throwError = function (error) {\n    try {\n      throw new Error(error);\n    } catch (e) {\n      throw e.message + '\\n' + e.stack;\n    }\n  };\n\n  DataUtil.aggregates = {\n    /**\n     * Calculate sum of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    sum: function (ds, field) {\n      var result = 0;\n      var val;\n      var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n\n      for (var i = 0; i < ds.length; i++) {\n        val = DataUtil.getVal(ds, i, field);\n\n        if (!isNaN(val) && val !== null) {\n          if (castRequired) {\n            val = +val;\n          }\n\n          result += val;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Calculate average value of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    average: function (ds, field) {\n      return DataUtil.aggregates.sum(ds, field) / ds.length;\n    },\n\n    /**\n     * Returns the min value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string|Function} field\n     */\n    min: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n    },\n\n    /**\n     * Returns the max value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     * @returns number\n     */\n    max: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n    },\n\n    /**\n     * Returns the total number of true value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    truecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n    },\n\n    /**\n     * Returns the total number of false value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    falsecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n    },\n\n    /**\n     * Returns the length of the given data.\n     * @param  {Object[]} ds\n     * @param  {string} field?\n     * @returns number\n     */\n    count: function (ds, field) {\n      return ds.length;\n    }\n  };\n  /**\n   * Specifies the Object with filter operators.\n   */\n\n  DataUtil.operatorSymbols = {\n    '<': 'lessthan',\n    '>': 'greaterthan',\n    '<=': 'lessthanorequal',\n    '>=': 'greaterthanorequal',\n    '==': 'equal',\n    '!=': 'notequal',\n    '*=': 'contains',\n    '$=': 'endswith',\n    '^=': 'startswith'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * * It will be used for date/number type filter query.\n   */\n\n  DataUtil.odBiOperator = {\n    '<': ' lt ',\n    '>': ' gt ',\n    '<=': ' le ',\n    '>=': ' ge ',\n    '==': ' eq ',\n    '!=': ' ne ',\n    'lessthan': ' lt ',\n    'lessthanorequal': ' le ',\n    'greaterthan': ' gt ',\n    'greaterthanorequal': ' ge ',\n    'equal': ' eq ',\n    'notequal': ' ne '\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odUniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'substringof',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'substringof'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odv4UniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'contains',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'contains'\n  };\n  DataUtil.diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n  };\n  DataUtil.fnOperators = {\n    /**\n     * Returns true when the actual input is equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     * @param  {boolean} ignoreAccent?\n     */\n    equal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n      }\n\n      return actual === expected;\n    },\n\n    /**\n     * Returns true when the actual input is not equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n    },\n\n    /**\n     * Returns true when the actual input is less than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual < expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n      }\n\n      return actual > expected;\n    },\n\n    /**\n     * Returns true when the actual input is less than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual <= expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n      }\n\n      return actual >= expected;\n    },\n\n    /**\n     * Returns true when the actual input contains the given string.\n     * @param  {string|number} actual\n     * @param  {string|number} expected\n     * @param  {boolean} ignoreCase?\n     */\n    contains: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n      }\n\n      return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && actual.toString().indexOf(expected) !== -1;\n    },\n\n    /**\n     * Returns true when the given input value is not null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    notnull: function (actual) {\n      return actual !== null;\n    },\n\n    /**\n     * Returns true when the given input value is null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    isnull: function (actual) {\n      return actual === null;\n    },\n\n    /**\n     * Returns true when the actual input starts with the given string\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.startsWith(actual, expected);\n    },\n\n    /**\n     * Returns true when the actual input ends with the given string.\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.endsWith(actual, expected);\n    },\n\n    /**\n     * It will return the filter operator based on the filter symbol.\n     * @param  {string} operator\n     * @hidden\n     */\n    processSymbols: function (operator) {\n      var fnName = DataUtil.operatorSymbols[operator];\n\n      if (fnName) {\n        var fn = DataUtil.fnOperators[fnName];\n        return fn;\n      }\n\n      return DataUtil.throwError('Query - Process Operator : Invalid operator');\n    },\n\n    /**\n     * It will return the valid filter operator based on the specified operators.\n     * @param  {string} operator\n     * @hidden\n     */\n    processOperator: function (operator) {\n      var fn = DataUtil.fnOperators[operator];\n\n      if (fn) {\n        return fn;\n      }\n\n      return DataUtil.fnOperators.processSymbols(operator);\n    }\n  };\n  /**\n   * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n   */\n\n  DataUtil.parse = {\n    /**\n     * Parse the given string to the plain JavaScript object.\n     * @param  {string|Object|Object[]} jsonText\n     */\n    parseJson: function (jsonText) {\n      if (typeof jsonText === 'string') {\n        jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n      } else if (jsonText instanceof Array) {\n        DataUtil.parse.iterateAndReviveArray(jsonText);\n      } else if (typeof jsonText === 'object' && jsonText !== null) {\n        DataUtil.parse.iterateAndReviveJson(jsonText);\n      }\n\n      return jsonText;\n    },\n\n    /**\n     * It will perform on array of values.\n     * @param  {string[]|Object[]} array\n     * @hidden\n     */\n    iterateAndReviveArray: function (array) {\n      for (var i = 0; i < array.length; i++) {\n        if (typeof array[i] === 'object' && array[i] !== null) {\n          DataUtil.parse.iterateAndReviveJson(array[i]);\n        } else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n          array[i] = DataUtil.parse.jsonReviver('', array[i]);\n        } else {\n          array[i] = DataUtil.parse.parseJson(array[i]);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {JSON} json\n     * @hidden\n     */\n    iterateAndReviveJson: function (json) {\n      var value;\n      var keys = Object.keys(json);\n\n      for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var prop = keys_2[_i];\n\n        if (DataUtil.startsWith(prop, '__')) {\n          continue;\n        }\n\n        value = json[prop];\n\n        if (typeof value === 'object') {\n          if (value instanceof Array) {\n            DataUtil.parse.iterateAndReviveArray(value);\n          } else if (value) {\n            DataUtil.parse.iterateAndReviveJson(value);\n          }\n        } else {\n          json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {string} field\n     * @param  {string|Date} value\n     * @hidden\n     */\n    jsonReviver: function (field, value) {\n      if (typeof value === 'string') {\n        var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n        var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n\n        if (ms) {\n          return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n        } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n          var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n          var arr = value.split(/[^0-9.]/);\n\n          if (isUTC) {\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n          } else {\n            var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n            var hrs = parseInt(arr[6], 10);\n            var mins = parseInt(arr[7], 10);\n\n            if (isNaN(hrs) && isNaN(mins)) {\n              return utcFormat;\n            }\n\n            if (value.indexOf('+') > -1) {\n              utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n            } else {\n              utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n            }\n\n            value = DataUtil.dateParse.toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n          }\n\n          if (DataUtil.serverTimezoneOffset == null) {\n            value = DataUtil.dateParse.addSelfOffset(value);\n          }\n        }\n      }\n\n      return value;\n    },\n\n    /**\n     * Check wheather the given value is JSON or not.\n     * @param  {Object[]} jsonData\n     */\n    isJson: function (jsonData) {\n      if (typeof jsonData[0] === 'string') {\n        return jsonData;\n      }\n\n      return DataUtil.parse.parseJson(jsonData);\n    },\n\n    /**\n     * Checks wheather the given value is GUID or not.\n     * @param  {string} value\n     */\n    isGuid: function (value) {\n      var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n      var match = regex.exec(value);\n      return match != null;\n    },\n\n    /**\n     * The method used to replace the value based on the type.\n     * @param  {Object} value\n     * @param  {boolean} stringify\n     * @hidden\n     */\n    replacer: function (value, stringify) {\n      if (DataUtil.isPlainObject(value)) {\n        return DataUtil.parse.jsonReplacer(value, stringify);\n      }\n\n      if (value instanceof Array) {\n        return DataUtil.parse.arrayReplacer(value);\n      }\n\n      if (value instanceof Date) {\n        return DataUtil.parse.jsonReplacer({\n          val: value\n        }, stringify).val;\n      }\n\n      return value;\n    },\n\n    /**\n     * It will replace the JSON value.\n     * @param  {string} key\n     * @param  {Object} val\n     * @hidden\n     */\n    jsonReplacer: function (val, stringify) {\n      var value;\n      var keys = Object.keys(val);\n\n      for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n        var prop = keys_3[_i];\n        value = val[prop];\n\n        if (!(value instanceof Date)) {\n          continue;\n        }\n\n        var d = value;\n\n        if (DataUtil.serverTimezoneOffset == null) {\n          val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n        } else {\n          d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n          val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Array of value.\n     * @param  {string} key\n     * @param  {Object[]} val\n     * @hidden\n     */\n    arrayReplacer: function (val) {\n      for (var i = 0; i < val.length; i++) {\n        if (DataUtil.isPlainObject(val[i])) {\n          val[i] = DataUtil.parse.jsonReplacer(val[i]);\n        } else if (val[i] instanceof Date) {\n          val[i] = DataUtil.parse.jsonReplacer({\n            date: val[i]\n          }).date;\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Date object with respective to UTC format value.\n     * @param  {string} key\n     * @param  {any} value\n     * @hidden\n     */\n\n    /* tslint:disable-next-line:no-any */\n    jsonDateReplacer: function (key, value) {\n      if (key === 'value' && value) {\n        if (typeof value === 'string') {\n          var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n\n          if (ms) {\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n          } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n            var arr = value.split(/[^0-9]/);\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n          }\n        }\n\n        if (value instanceof Date) {\n          value = DataUtil.dateParse.addSelfOffset(value);\n\n          if (DataUtil.serverTimezoneOffset === null) {\n            return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n          } else {\n            value = DataUtil.dateParse.toTimeZone(value, value.getTimezoneOffset() / 60 * 2 - DataUtil.serverTimezoneOffset, false);\n            return value.toJSON();\n          }\n        }\n      }\n\n      return value;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n  DataUtil.dateParse = {\n    addSelfOffset: function (input) {\n      return new Date(+input - input.getTimezoneOffset() * 60000);\n    },\n    toUTC: function (input) {\n      return new Date(+input + input.getTimezoneOffset() * 60000);\n    },\n    toTimeZone: function (input, offset, utc) {\n      if (offset === null) {\n        return input;\n      }\n\n      var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n      return new Date(+unix - offset * 3600000);\n    },\n    toLocalTime: function (input) {\n      var datefn = input;\n      var timeZone = -datefn.getTimezoneOffset();\n      var differenceString = timeZone >= 0 ? '+' : '-';\n\n      var localtimefn = function (num) {\n        var norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n      };\n\n      var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) + 'T' + localtimefn(datefn.getHours()) + ':' + localtimefn(datefn.getMinutes()) + ':' + localtimefn(datefn.getSeconds()) + differenceString + localtimefn(timeZone / 60) + ':' + localtimefn(timeZone % 60);\n      return val;\n    }\n  };\n  return DataUtil;\n}();\n\nexport { DataUtil };","map":{"version":3,"sources":["C:/Users/khang/OneDrive/Tài liệu/JS/PersonalDashdoard/dashboard/node_modules/@syncfusion/ej2-data/src/util.js"],"names":["isNullOrUndefined","DataManager","Query","Predicate","consts","GroupGuid","DataUtil","getValue","value","inst","call","endsWith","input","substr","slice","length","startsWith","start","fnSort","order","toLowerCase","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","fields","newObj","i","setValue","getObject","select","jsonArray","newData","push","group","field","aggregates","level","groupDs","format","isLazyLoad","jsonData","guid","_loop_1","j","indx","temp","filter","e","key","indexOf","items","this_1","count","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","res","fn","aggs","type","buildHierarchy","fKey","from","source","lookup","pKey","grp","result","throwError","fKeyData","getFieldList","prefix","copyObj","keys","Object","_i","keys_1","prop","Array","nameSpace","splits","split","toString","fromObj","sort","ds","comparer","middle","parseInt","left","right","merge","ignoreDiacritics","newValue","map","diacritics","join","fieldName","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","query","req","params","reqParams","isPlainObject","constructor","isCors","xhr","request","window","getGuid","hexs","rand","replace","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","distinct","json","requiresCompleteRecord","tmp","forEach","data","processData","prepareQuery","sampledata","requiresCounts","requiresCount","executeLocal","returnValue","JSON","stringify","_this","where","parse","parseJson","pred","condition","operator","ignoreCase","ignoreAccent","predicateList","concat","getPredicate","predicates","or","and","search","aggregate","sorted","sortBy","name","direction","skip","take","mainPred","childPred","cpre","_a","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","odBiOperator","odUniOperator","odv4UniOperator","fnOperators","equal","actual","expected","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","contains","notnull","isnull","startswith","endswith","processSymbols","processOperator","jsonText","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","regex","match","replacer","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds"],"mappings":"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","sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Process the given records based on the datamanager string.\n     * @param  {string} datamanager\n     * @param  {Object[]} records\n     */\n    DataUtil.processData = function (dm, records) {\n        var query = this.prepareQuery(dm);\n        var sampledata = new DataManager(records);\n        if (dm.requiresCounts) {\n            query.requiresCount();\n        }\n        var result = sampledata.executeLocal(query);\n        var returnValue = {\n            result: dm.requiresCounts ? result.result : result,\n            count: result.count,\n            aggregates: JSON.stringify(result.aggregates)\n        };\n        return dm.requiresCounts ? returnValue : result;\n    };\n    DataUtil.prepareQuery = function (dm) {\n        var _this = this;\n        var query = new Query();\n        if (dm.select) {\n            query.select(dm.select);\n        }\n        if (dm.where) {\n            var where = DataUtil.parse.parseJson(dm.where);\n            where.filter(function (pred) {\n                if (isNullOrUndefined(pred.condition)) {\n                    query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n                }\n                else {\n                    var predicateList = [];\n                    if (pred.field) {\n                        predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n                    }\n                    else {\n                        predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n                    }\n                    if (pred.condition == 'or') {\n                        query.where(Predicate.or(predicateList));\n                    }\n                    else if (pred.condition == 'and') {\n                        query.where(Predicate.and(predicateList));\n                    }\n                }\n            });\n        }\n        if (dm.search) {\n            var search = DataUtil.parse.parseJson(dm.search);\n            search.filter(function (e) { return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']); });\n        }\n        if (dm.aggregates) {\n            dm.aggregates.filter(function (e) { return query.aggregate(e.type, e.field); });\n        }\n        if (dm.sorted) {\n            dm.sorted.filter(function (e) { return query.sortBy(e.name, e.direction); });\n        }\n        if (dm.skip) {\n            query.skip(dm.skip);\n        }\n        if (dm.take) {\n            query.take(dm.take);\n        }\n        if (dm.group) {\n            dm.group.filter(function (grp) { return query.group(grp); });\n        }\n        return query;\n    };\n    DataUtil.getPredicate = function (pred) {\n        var mainPred = [];\n        for (var i = 0; i < pred.length; i++) {\n            var e = pred[i];\n            if (e.field) {\n                mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n            }\n            else {\n                var childPred = [];\n                var cpre = this.getPredicate(e.predicates);\n                for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    childPred.push(cpre[prop]);\n                }\n                mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n            }\n        }\n        return mainPred;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n"]},"metadata":{},"sourceType":"module"}